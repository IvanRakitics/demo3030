{"ast":null,"code":"import useLatest from '../useLatest';\nimport { getTargetElement } from '../utils/domTarget';\nimport useEffectWithTarget from '../utils/useEffectWithTarget';\n\nvar useDrag = function useDrag(data, target, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var optionsRef = useLatest(options);\n  useEffectWithTarget(function () {\n    var targetElement = getTargetElement(target);\n\n    if (!(targetElement === null || targetElement === void 0 ? void 0 : targetElement.addEventListener)) {\n      return;\n    }\n\n    var onDragStart = function onDragStart(event) {\n      var _a, _b;\n\n      (_b = (_a = optionsRef.current).onDragStart) === null || _b === void 0 ? void 0 : _b.call(_a, event);\n      event.dataTransfer.setData('custom', JSON.stringify(data));\n    };\n\n    var onDragEnd = function onDragEnd(event) {\n      var _a, _b;\n\n      (_b = (_a = optionsRef.current).onDragEnd) === null || _b === void 0 ? void 0 : _b.call(_a, event);\n    };\n\n    targetElement.setAttribute('draggable', 'true');\n    targetElement.addEventListener('dragstart', onDragStart);\n    targetElement.addEventListener('dragend', onDragEnd);\n    return function () {\n      targetElement.removeEventListener('dragstart', onDragStart);\n      targetElement.removeEventListener('dragend', onDragEnd);\n    };\n  }, [], target);\n};\n\nexport default useDrag;","map":{"version":3,"sources":["D:/react/project0330/node_modules/ahooks/es/useDrag/index.js"],"names":["useLatest","getTargetElement","useEffectWithTarget","useDrag","data","target","options","optionsRef","targetElement","addEventListener","onDragStart","event","_a","_b","current","call","dataTransfer","setData","JSON","stringify","onDragEnd","setAttribute","removeEventListener"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,cAAtB;AACA,SAASC,gBAAT,QAAiC,oBAAjC;AACA,OAAOC,mBAAP,MAAgC,8BAAhC;;AAEA,IAAIC,OAAO,GAAG,SAASA,OAAT,CAAiBC,IAAjB,EAAuBC,MAAvB,EAA+BC,OAA/B,EAAwC;AACpD,MAAIA,OAAO,KAAK,KAAK,CAArB,EAAwB;AACtBA,IAAAA,OAAO,GAAG,EAAV;AACD;;AAED,MAAIC,UAAU,GAAGP,SAAS,CAACM,OAAD,CAA1B;AACAJ,EAAAA,mBAAmB,CAAC,YAAY;AAC9B,QAAIM,aAAa,GAAGP,gBAAgB,CAACI,MAAD,CAApC;;AAEA,QAAI,EAAEG,aAAa,KAAK,IAAlB,IAA0BA,aAAa,KAAK,KAAK,CAAjD,GAAqD,KAAK,CAA1D,GAA8DA,aAAa,CAACC,gBAA9E,CAAJ,EAAqG;AACnG;AACD;;AAED,QAAIC,WAAW,GAAG,SAASA,WAAT,CAAqBC,KAArB,EAA4B;AAC5C,UAAIC,EAAJ,EAAQC,EAAR;;AAEA,OAACA,EAAE,GAAG,CAACD,EAAE,GAAGL,UAAU,CAACO,OAAjB,EAA0BJ,WAAhC,MAAiD,IAAjD,IAAyDG,EAAE,KAAK,KAAK,CAArE,GAAyE,KAAK,CAA9E,GAAkFA,EAAE,CAACE,IAAH,CAAQH,EAAR,EAAYD,KAAZ,CAAlF;AACAA,MAAAA,KAAK,CAACK,YAAN,CAAmBC,OAAnB,CAA2B,QAA3B,EAAqCC,IAAI,CAACC,SAAL,CAAef,IAAf,CAArC;AACD,KALD;;AAOA,QAAIgB,SAAS,GAAG,SAASA,SAAT,CAAmBT,KAAnB,EAA0B;AACxC,UAAIC,EAAJ,EAAQC,EAAR;;AAEA,OAACA,EAAE,GAAG,CAACD,EAAE,GAAGL,UAAU,CAACO,OAAjB,EAA0BM,SAAhC,MAA+C,IAA/C,IAAuDP,EAAE,KAAK,KAAK,CAAnE,GAAuE,KAAK,CAA5E,GAAgFA,EAAE,CAACE,IAAH,CAAQH,EAAR,EAAYD,KAAZ,CAAhF;AACD,KAJD;;AAMAH,IAAAA,aAAa,CAACa,YAAd,CAA2B,WAA3B,EAAwC,MAAxC;AACAb,IAAAA,aAAa,CAACC,gBAAd,CAA+B,WAA/B,EAA4CC,WAA5C;AACAF,IAAAA,aAAa,CAACC,gBAAd,CAA+B,SAA/B,EAA0CW,SAA1C;AACA,WAAO,YAAY;AACjBZ,MAAAA,aAAa,CAACc,mBAAd,CAAkC,WAAlC,EAA+CZ,WAA/C;AACAF,MAAAA,aAAa,CAACc,mBAAd,CAAkC,SAAlC,EAA6CF,SAA7C;AACD,KAHD;AAID,GA3BkB,EA2BhB,EA3BgB,EA2BZf,MA3BY,CAAnB;AA4BD,CAlCD;;AAoCA,eAAeF,OAAf","sourcesContent":["import useLatest from '../useLatest';\nimport { getTargetElement } from '../utils/domTarget';\nimport useEffectWithTarget from '../utils/useEffectWithTarget';\n\nvar useDrag = function useDrag(data, target, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var optionsRef = useLatest(options);\n  useEffectWithTarget(function () {\n    var targetElement = getTargetElement(target);\n\n    if (!(targetElement === null || targetElement === void 0 ? void 0 : targetElement.addEventListener)) {\n      return;\n    }\n\n    var onDragStart = function onDragStart(event) {\n      var _a, _b;\n\n      (_b = (_a = optionsRef.current).onDragStart) === null || _b === void 0 ? void 0 : _b.call(_a, event);\n      event.dataTransfer.setData('custom', JSON.stringify(data));\n    };\n\n    var onDragEnd = function onDragEnd(event) {\n      var _a, _b;\n\n      (_b = (_a = optionsRef.current).onDragEnd) === null || _b === void 0 ? void 0 : _b.call(_a, event);\n    };\n\n    targetElement.setAttribute('draggable', 'true');\n    targetElement.addEventListener('dragstart', onDragStart);\n    targetElement.addEventListener('dragend', onDragEnd);\n    return function () {\n      targetElement.removeEventListener('dragstart', onDragStart);\n      targetElement.removeEventListener('dragend', onDragEnd);\n    };\n  }, [], target);\n};\n\nexport default useDrag;"]},"metadata":{},"sourceType":"module"}