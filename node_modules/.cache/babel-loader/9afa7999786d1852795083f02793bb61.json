{"ast":null,"code":"import classNames from 'classnames';\nimport React from 'react';\nimport { withNativeProps } from '../../utils/native-props';\nimport { useShouldRender } from '../../utils/should-render';\nimport { DownFill } from 'antd-mobile-icons';\nconst classPrefix = `adm-dropdown-item`;\n\nconst Item = props => {\n  var _a;\n\n  const cls = classNames(classPrefix, {\n    [`${classPrefix}-active`]: props.active,\n    [`${classPrefix}-highlight`]: (_a = props.highlight) !== null && _a !== void 0 ? _a : props.active\n  });\n  return withNativeProps(props, React.createElement(\"div\", {\n    className: cls,\n    onClick: props.onClick\n  }, React.createElement(\"div\", {\n    className: `${classPrefix}-title`\n  }, React.createElement(\"span\", {\n    className: `${classPrefix}-title-text`\n  }, props.title), React.createElement(\"span\", {\n    className: classNames(`${classPrefix}-title-arrow`, {\n      [`${classPrefix}-title-arrow-active`]: props.active\n    })\n  }, props.arrow === undefined ? React.createElement(DownFill, null) : props.arrow))));\n};\n\nexport default Item;\nexport const ItemChildrenWrap = props => {\n  const {\n    active = false\n  } = props;\n  const shouldRender = useShouldRender(active, props.forceRender, props.destroyOnClose);\n  const cls = classNames(`${classPrefix}-content`, {\n    [`${classPrefix}-content-hidden`]: !active\n  });\n  return shouldRender ? React.createElement(\"div\", {\n    className: cls,\n    onClick: props.onClick\n  }, props.children) : null;\n};","map":{"version":3,"sources":["D:/react/project0330/node_modules/antd-mobile/es/components/dropdown/item.js"],"names":["classNames","React","withNativeProps","useShouldRender","DownFill","classPrefix","Item","props","_a","cls","active","highlight","createElement","className","onClick","title","arrow","undefined","ItemChildrenWrap","shouldRender","forceRender","destroyOnClose","children"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,YAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,QAAgC,0BAAhC;AACA,SAASC,eAAT,QAAgC,2BAAhC;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA,MAAMC,WAAW,GAAI,mBAArB;;AAEA,MAAMC,IAAI,GAAGC,KAAK,IAAI;AACpB,MAAIC,EAAJ;;AAEA,QAAMC,GAAG,GAAGT,UAAU,CAACK,WAAD,EAAc;AAClC,KAAE,GAAEA,WAAY,SAAhB,GAA2BE,KAAK,CAACG,MADC;AAElC,KAAE,GAAEL,WAAY,YAAhB,GAA8B,CAACG,EAAE,GAAGD,KAAK,CAACI,SAAZ,MAA2B,IAA3B,IAAmCH,EAAE,KAAK,KAAK,CAA/C,GAAmDA,EAAnD,GAAwDD,KAAK,CAACG;AAF1D,GAAd,CAAtB;AAIA,SAAOR,eAAe,CAACK,KAAD,EAAQN,KAAK,CAACW,aAAN,CAAoB,KAApB,EAA2B;AACvDC,IAAAA,SAAS,EAAEJ,GAD4C;AAEvDK,IAAAA,OAAO,EAAEP,KAAK,CAACO;AAFwC,GAA3B,EAG3Bb,KAAK,CAACW,aAAN,CAAoB,KAApB,EAA2B;AAC5BC,IAAAA,SAAS,EAAG,GAAER,WAAY;AADE,GAA3B,EAEAJ,KAAK,CAACW,aAAN,CAAoB,MAApB,EAA4B;AAC7BC,IAAAA,SAAS,EAAG,GAAER,WAAY;AADG,GAA5B,EAEAE,KAAK,CAACQ,KAFN,CAFA,EAIcd,KAAK,CAACW,aAAN,CAAoB,MAApB,EAA4B;AAC3CC,IAAAA,SAAS,EAAEb,UAAU,CAAE,GAAEK,WAAY,cAAhB,EAA+B;AAClD,OAAE,GAAEA,WAAY,qBAAhB,GAAuCE,KAAK,CAACG;AADK,KAA/B;AADsB,GAA5B,EAIdH,KAAK,CAACS,KAAN,KAAgBC,SAAhB,GAA4BhB,KAAK,CAACW,aAAN,CAAoBR,QAApB,EAA8B,IAA9B,CAA5B,GAAkEG,KAAK,CAACS,KAJ1D,CAJd,CAH2B,CAAR,CAAtB;AAYD,CAnBD;;AAqBA,eAAeV,IAAf;AACA,OAAO,MAAMY,gBAAgB,GAAGX,KAAK,IAAI;AACvC,QAAM;AACJG,IAAAA,MAAM,GAAG;AADL,MAEFH,KAFJ;AAGA,QAAMY,YAAY,GAAGhB,eAAe,CAACO,MAAD,EAASH,KAAK,CAACa,WAAf,EAA4Bb,KAAK,CAACc,cAAlC,CAApC;AACA,QAAMZ,GAAG,GAAGT,UAAU,CAAE,GAAEK,WAAY,UAAhB,EAA2B;AAC/C,KAAE,GAAEA,WAAY,iBAAhB,GAAmC,CAACK;AADW,GAA3B,CAAtB;AAGA,SAAOS,YAAY,GAAGlB,KAAK,CAACW,aAAN,CAAoB,KAApB,EAA2B;AAC/CC,IAAAA,SAAS,EAAEJ,GADoC;AAE/CK,IAAAA,OAAO,EAAEP,KAAK,CAACO;AAFgC,GAA3B,EAGnBP,KAAK,CAACe,QAHa,CAAH,GAGE,IAHrB;AAID,CAZM","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport { withNativeProps } from '../../utils/native-props';\nimport { useShouldRender } from '../../utils/should-render';\nimport { DownFill } from 'antd-mobile-icons';\nconst classPrefix = `adm-dropdown-item`;\n\nconst Item = props => {\n  var _a;\n\n  const cls = classNames(classPrefix, {\n    [`${classPrefix}-active`]: props.active,\n    [`${classPrefix}-highlight`]: (_a = props.highlight) !== null && _a !== void 0 ? _a : props.active\n  });\n  return withNativeProps(props, React.createElement(\"div\", {\n    className: cls,\n    onClick: props.onClick\n  }, React.createElement(\"div\", {\n    className: `${classPrefix}-title`\n  }, React.createElement(\"span\", {\n    className: `${classPrefix}-title-text`\n  }, props.title), React.createElement(\"span\", {\n    className: classNames(`${classPrefix}-title-arrow`, {\n      [`${classPrefix}-title-arrow-active`]: props.active\n    })\n  }, props.arrow === undefined ? React.createElement(DownFill, null) : props.arrow))));\n};\n\nexport default Item;\nexport const ItemChildrenWrap = props => {\n  const {\n    active = false\n  } = props;\n  const shouldRender = useShouldRender(active, props.forceRender, props.destroyOnClose);\n  const cls = classNames(`${classPrefix}-content`, {\n    [`${classPrefix}-content-hidden`]: !active\n  });\n  return shouldRender ? React.createElement(\"div\", {\n    className: cls,\n    onClick: props.onClick\n  }, props.children) : null;\n};"]},"metadata":{},"sourceType":"module"}