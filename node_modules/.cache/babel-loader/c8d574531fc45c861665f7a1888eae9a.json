{"ast":null,"code":"import React, { useRef } from 'react';\nimport { useDrag } from '@use-gesture/react';\nimport { ThumbIcon } from './thumb-icon';\nvar classPrefix = \"adm-slider\";\n\nvar Thumb = function Thumb(props) {\n  var value = props.value,\n      min = props.min,\n      max = props.max,\n      disabled = props.disabled,\n      onDrag = props.onDrag,\n      icon = props.icon;\n  var prevValue = useRef(value);\n\n  var currentPosition = function currentPosition() {\n    return {\n      left: \"\".concat((value - min) / (max - min) * 100, \"%\"),\n      right: 'auto'\n    };\n  };\n\n  var bind = useDrag(function (state) {\n    var _a;\n\n    if (disabled) return;\n\n    if (state.first) {\n      prevValue.current = value;\n    }\n\n    var x = state.xy[0] - state.initial[0];\n    var sliderOffsetWith = (_a = props.trackRef.current) === null || _a === void 0 ? void 0 : _a.offsetWidth;\n    if (!sliderOffsetWith) return;\n    var diff = x / Math.ceil(sliderOffsetWith) * (max - min);\n    onDrag(prevValue.current + diff, state.first, state.last);\n  }, {\n    axis: 'x',\n    pointer: {\n      touch: true\n    }\n  });\n  return React.createElement(\"div\", Object.assign({\n    className: \"\".concat(classPrefix, \"-thumb-container\"),\n    style: currentPosition()\n  }, bind()), React.createElement(\"div\", {\n    className: \"\".concat(classPrefix, \"-thumb\")\n  }, icon ? icon : React.createElement(ThumbIcon, {\n    className: \"\".concat(classPrefix, \"-thumb-icon\")\n  })));\n};\n\nexport default Thumb;","map":null,"metadata":{},"sourceType":"module"}