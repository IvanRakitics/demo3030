{"ast":null,"code":"import React, { forwardRef, useRef, useState, useImperativeHandle } from 'react';\nimport classNames from 'classnames';\nimport { withNativeProps } from '../../utils/native-props';\nimport { useThrottleFn } from 'ahooks';\nimport { mergeProps } from '../../utils/with-default-props';\nimport { Sidebar } from './sidebar';\nimport { convertPx } from '../../utils/convert-px';\nimport { Panel } from './panel';\nimport { devWarning } from '../../utils/dev-log';\nconst classPrefix = `adm-index-bar`;\nconst defaultProps = {\n  sticky: true\n};\nexport const IndexBar = forwardRef((p, ref) => {\n  const props = mergeProps(defaultProps, p);\n  const titleHeight = convertPx(35);\n  const bodyRef = useRef(null);\n  const indexItems = [];\n  const panels = [];\n  React.Children.forEach(props.children, child => {\n    var _a;\n\n    if (!React.isValidElement(child)) return;\n\n    if (child.type !== Panel) {\n      devWarning('IndexBar', 'The children of `IndexBar` must be `IndexBar.Panel` components.');\n      return;\n    }\n\n    indexItems.push({\n      index: child.props.index,\n      brief: (_a = child.props.brief) !== null && _a !== void 0 ? _a : child.props.index.charAt(0)\n    });\n    panels.push(withNativeProps(child.props, React.createElement(\"div\", {\n      key: child.props.index,\n      \"data-index\": child.props.index,\n      className: `${classPrefix}-anchor`\n    }, React.createElement(\"div\", {\n      className: `${classPrefix}-anchor-title`\n    }, child.props.title || child.props.index), child.props.children)));\n  });\n  const [activeIndex, setActiveIndex] = useState(() => {\n    const firstItem = indexItems[0];\n    return firstItem ? firstItem.index : null;\n  });\n  useImperativeHandle(ref, () => ({\n    scrollTo\n  }));\n\n  function scrollTo(index) {\n    const body = bodyRef.current;\n    if (!body) return;\n    const children = body.children;\n\n    for (let i = 0; i < children.length; i++) {\n      const panel = children.item(i);\n      if (!panel) continue;\n      const panelIndex = panel.dataset['index'];\n\n      if (panelIndex === index) {\n        body.scrollTop = panel.offsetTop;\n        setActiveIndex(index);\n        return;\n      }\n    }\n  }\n\n  const {\n    run: checkActiveIndex\n  } = useThrottleFn(() => {\n    const body = bodyRef.current;\n    if (!body) return;\n    const scrollTop = body.scrollTop;\n    const elements = body.getElementsByClassName(`${classPrefix}-anchor`);\n\n    for (let i = 0; i < elements.length; i++) {\n      const panel = elements.item(i);\n      if (!panel) continue;\n      const panelIndex = panel.dataset['index'];\n      if (!panelIndex) continue;\n\n      if (panel.offsetTop + panel.clientHeight - titleHeight > scrollTop) {\n        setActiveIndex(panelIndex);\n        return;\n      }\n    }\n  }, {\n    wait: 50,\n    trailing: true,\n    leading: true\n  });\n  return withNativeProps(props, React.createElement(\"div\", {\n    className: classNames(`${classPrefix}`, {\n      [`${classPrefix}-sticky`]: props.sticky\n    })\n  }, React.createElement(Sidebar, {\n    indexItems: indexItems,\n    activeIndex: activeIndex,\n    onActive: index => {\n      scrollTo(index);\n    }\n  }), React.createElement(\"div\", {\n    className: `${classPrefix}-body`,\n    ref: bodyRef,\n    onScroll: checkActiveIndex\n  }, panels)));\n});","map":{"version":3,"sources":["D:/react/project0330/node_modules/antd-mobile/es/components/index-bar/index-bar.js"],"names":["React","forwardRef","useRef","useState","useImperativeHandle","classNames","withNativeProps","useThrottleFn","mergeProps","Sidebar","convertPx","Panel","devWarning","classPrefix","defaultProps","sticky","IndexBar","p","ref","props","titleHeight","bodyRef","indexItems","panels","Children","forEach","children","child","_a","isValidElement","type","push","index","brief","charAt","createElement","key","className","title","activeIndex","setActiveIndex","firstItem","scrollTo","body","current","i","length","panel","item","panelIndex","dataset","scrollTop","offsetTop","run","checkActiveIndex","elements","getElementsByClassName","clientHeight","wait","trailing","leading","onActive","onScroll"],"mappings":"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","sourcesContent":["import React, { forwardRef, useRef, useState, useImperativeHandle } from 'react';\nimport classNames from 'classnames';\nimport { withNativeProps } from '../../utils/native-props';\nimport { useThrottleFn } from 'ahooks';\nimport { mergeProps } from '../../utils/with-default-props';\nimport { Sidebar } from './sidebar';\nimport { convertPx } from '../../utils/convert-px';\nimport { Panel } from './panel';\nimport { devWarning } from '../../utils/dev-log';\nconst classPrefix = `adm-index-bar`;\nconst defaultProps = {\n  sticky: true\n};\nexport const IndexBar = forwardRef((p, ref) => {\n  const props = mergeProps(defaultProps, p);\n  const titleHeight = convertPx(35);\n  const bodyRef = useRef(null);\n  const indexItems = [];\n  const panels = [];\n  React.Children.forEach(props.children, child => {\n    var _a;\n\n    if (!React.isValidElement(child)) return;\n\n    if (child.type !== Panel) {\n      devWarning('IndexBar', 'The children of `IndexBar` must be `IndexBar.Panel` components.');\n      return;\n    }\n\n    indexItems.push({\n      index: child.props.index,\n      brief: (_a = child.props.brief) !== null && _a !== void 0 ? _a : child.props.index.charAt(0)\n    });\n    panels.push(withNativeProps(child.props, React.createElement(\"div\", {\n      key: child.props.index,\n      \"data-index\": child.props.index,\n      className: `${classPrefix}-anchor`\n    }, React.createElement(\"div\", {\n      className: `${classPrefix}-anchor-title`\n    }, child.props.title || child.props.index), child.props.children)));\n  });\n  const [activeIndex, setActiveIndex] = useState(() => {\n    const firstItem = indexItems[0];\n    return firstItem ? firstItem.index : null;\n  });\n  useImperativeHandle(ref, () => ({\n    scrollTo\n  }));\n\n  function scrollTo(index) {\n    const body = bodyRef.current;\n    if (!body) return;\n    const children = body.children;\n\n    for (let i = 0; i < children.length; i++) {\n      const panel = children.item(i);\n      if (!panel) continue;\n      const panelIndex = panel.dataset['index'];\n\n      if (panelIndex === index) {\n        body.scrollTop = panel.offsetTop;\n        setActiveIndex(index);\n        return;\n      }\n    }\n  }\n\n  const {\n    run: checkActiveIndex\n  } = useThrottleFn(() => {\n    const body = bodyRef.current;\n    if (!body) return;\n    const scrollTop = body.scrollTop;\n    const elements = body.getElementsByClassName(`${classPrefix}-anchor`);\n\n    for (let i = 0; i < elements.length; i++) {\n      const panel = elements.item(i);\n      if (!panel) continue;\n      const panelIndex = panel.dataset['index'];\n      if (!panelIndex) continue;\n\n      if (panel.offsetTop + panel.clientHeight - titleHeight > scrollTop) {\n        setActiveIndex(panelIndex);\n        return;\n      }\n    }\n  }, {\n    wait: 50,\n    trailing: true,\n    leading: true\n  });\n  return withNativeProps(props, React.createElement(\"div\", {\n    className: classNames(`${classPrefix}`, {\n      [`${classPrefix}-sticky`]: props.sticky\n    })\n  }, React.createElement(Sidebar, {\n    indexItems: indexItems,\n    activeIndex: activeIndex,\n    onActive: index => {\n      scrollTo(index);\n    }\n  }), React.createElement(\"div\", {\n    className: `${classPrefix}-body`,\n    ref: bodyRef,\n    onScroll: checkActiveIndex\n  }, panels)));\n});"]},"metadata":{},"sourceType":"module"}