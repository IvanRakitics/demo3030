{"ast":null,"code":"// 找到树的深度\nexport function getTreeDeep(treeData) {\n  let childrenName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'children';\n\n  const walker = tree => {\n    let deep = 0;\n    tree.forEach(item => {\n      if (item[childrenName]) {\n        deep = Math.max(deep, walker(item[childrenName]) + 1);\n      } else {\n        deep = Math.max(deep, 1);\n      }\n    });\n    return deep;\n  };\n\n  return walker(treeData);\n}","map":{"version":3,"sources":["D:/react/project0330/node_modules/antd-mobile/es/utils/tree.js"],"names":["getTreeDeep","treeData","childrenName","walker","tree","deep","forEach","item","Math","max"],"mappings":"AAAA;AACA,OAAO,SAASA,WAAT,CAAqBC,QAArB,EAA0D;AAAA,MAA3BC,YAA2B,uEAAZ,UAAY;;AAC/D,QAAMC,MAAM,GAAGC,IAAI,IAAI;AACrB,QAAIC,IAAI,GAAG,CAAX;AACAD,IAAAA,IAAI,CAACE,OAAL,CAAaC,IAAI,IAAI;AACnB,UAAIA,IAAI,CAACL,YAAD,CAAR,EAAwB;AACtBG,QAAAA,IAAI,GAAGG,IAAI,CAACC,GAAL,CAASJ,IAAT,EAAeF,MAAM,CAACI,IAAI,CAACL,YAAD,CAAL,CAAN,GAA6B,CAA5C,CAAP;AACD,OAFD,MAEO;AACLG,QAAAA,IAAI,GAAGG,IAAI,CAACC,GAAL,CAASJ,IAAT,EAAe,CAAf,CAAP;AACD;AACF,KAND;AAOA,WAAOA,IAAP;AACD,GAVD;;AAYA,SAAOF,MAAM,CAACF,QAAD,CAAb;AACD","sourcesContent":["// 找到树的深度\nexport function getTreeDeep(treeData, childrenName = 'children') {\n  const walker = tree => {\n    let deep = 0;\n    tree.forEach(item => {\n      if (item[childrenName]) {\n        deep = Math.max(deep, walker(item[childrenName]) + 1);\n      } else {\n        deep = Math.max(deep, 1);\n      }\n    });\n    return deep;\n  };\n\n  return walker(treeData);\n}"]},"metadata":{},"sourceType":"module"}