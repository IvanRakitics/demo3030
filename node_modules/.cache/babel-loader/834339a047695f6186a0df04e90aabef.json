{"ast":null,"code":"import { useRef } from 'react';\nconst MIN_DISTANCE = 10;\n\nfunction getDirection(x, y) {\n  if (x > y && x > MIN_DISTANCE) {\n    return 'horizontal';\n  }\n\n  if (y > x && y > MIN_DISTANCE) {\n    return 'vertical';\n  }\n\n  return '';\n}\n\nexport function useTouch() {\n  const startX = useRef(0);\n  const startY = useRef(0);\n  const deltaX = useRef(0);\n  const deltaY = useRef(0);\n  const offsetX = useRef(0);\n  const offsetY = useRef(0);\n  const direction = useRef('');\n\n  const isVertical = () => direction.current === 'vertical';\n\n  const isHorizontal = () => direction.current === 'horizontal';\n\n  const reset = () => {\n    deltaX.current = 0;\n    deltaY.current = 0;\n    offsetX.current = 0;\n    offsetY.current = 0;\n    direction.current = '';\n  };\n\n  const start = event => {\n    reset();\n    startX.current = event.touches[0].clientX;\n    startY.current = event.touches[0].clientY;\n  };\n\n  const move = event => {\n    const touch = event.touches[0]; // Fix: Safari back will set clientX to negative number\n\n    deltaX.current = touch.clientX < 0 ? 0 : touch.clientX - startX.current;\n    deltaY.current = touch.clientY - startY.current;\n    offsetX.current = Math.abs(deltaX.current);\n    offsetY.current = Math.abs(deltaY.current);\n\n    if (!direction.current) {\n      direction.current = getDirection(offsetX.current, offsetY.current);\n    }\n  };\n\n  return {\n    move,\n    start,\n    reset,\n    startX,\n    startY,\n    deltaX,\n    deltaY,\n    offsetX,\n    offsetY,\n    direction,\n    isVertical,\n    isHorizontal\n  };\n}","map":{"version":3,"sources":["D:/react/project0330/node_modules/antd-mobile/es/utils/use-touch.js"],"names":["useRef","MIN_DISTANCE","getDirection","x","y","useTouch","startX","startY","deltaX","deltaY","offsetX","offsetY","direction","isVertical","current","isHorizontal","reset","start","event","touches","clientX","clientY","move","touch","Math","abs"],"mappings":"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","sourcesContent":["import { useRef } from 'react';\nconst MIN_DISTANCE = 10;\n\nfunction getDirection(x, y) {\n  if (x > y && x > MIN_DISTANCE) {\n    return 'horizontal';\n  }\n\n  if (y > x && y > MIN_DISTANCE) {\n    return 'vertical';\n  }\n\n  return '';\n}\n\nexport function useTouch() {\n  const startX = useRef(0);\n  const startY = useRef(0);\n  const deltaX = useRef(0);\n  const deltaY = useRef(0);\n  const offsetX = useRef(0);\n  const offsetY = useRef(0);\n  const direction = useRef('');\n\n  const isVertical = () => direction.current === 'vertical';\n\n  const isHorizontal = () => direction.current === 'horizontal';\n\n  const reset = () => {\n    deltaX.current = 0;\n    deltaY.current = 0;\n    offsetX.current = 0;\n    offsetY.current = 0;\n    direction.current = '';\n  };\n\n  const start = event => {\n    reset();\n    startX.current = event.touches[0].clientX;\n    startY.current = event.touches[0].clientY;\n  };\n\n  const move = event => {\n    const touch = event.touches[0]; // Fix: Safari back will set clientX to negative number\n\n    deltaX.current = touch.clientX < 0 ? 0 : touch.clientX - startX.current;\n    deltaY.current = touch.clientY - startY.current;\n    offsetX.current = Math.abs(deltaX.current);\n    offsetY.current = Math.abs(deltaY.current);\n\n    if (!direction.current) {\n      direction.current = getDirection(offsetX.current, offsetY.current);\n    }\n  };\n\n  return {\n    move,\n    start,\n    reset,\n    startX,\n    startY,\n    deltaX,\n    deltaY,\n    offsetX,\n    offsetY,\n    direction,\n    isVertical,\n    isHorizontal\n  };\n}"]},"metadata":{},"sourceType":"module"}