{"ast":null,"code":"import _slicedToArray from \"D:\\\\react\\\\project0330\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport { useSpring } from '@react-spring/web';\nimport { useMutationEffect } from './use-mutation-effect';\nimport { bound } from './bound';\nimport { useIsomorphicLayoutEffect } from 'ahooks';\nimport { useIsomorphicUpdateLayoutEffect } from './use-isomorphic-update-layout-effect';\nexport var useTabListScroll = function useTabListScroll(targetRef, activeIndex) {\n  var _useSpring = useSpring(function () {\n    return {\n      scrollLeft: 0,\n      config: {\n        tension: 300,\n        clamp: true\n      }\n    };\n  }),\n      _useSpring2 = _slicedToArray(_useSpring, 2),\n      scrollLeft = _useSpring2[0].scrollLeft,\n      api = _useSpring2[1];\n\n  function animate() {\n    var immediate = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    var container = targetRef.current;\n    if (!container) return;\n    if (activeIndex === undefined) return;\n    var activeTabWrapper = container.children.item(activeIndex);\n    var activeTab = activeTabWrapper.children.item(0);\n    var activeTabLeft = activeTab.offsetLeft;\n    var activeTabWidth = activeTab.offsetWidth;\n    var containerWidth = container.offsetWidth;\n    var containerScrollWidth = container.scrollWidth;\n    var containerScrollLeft = container.scrollLeft;\n    var maxScrollDistance = containerScrollWidth - containerWidth;\n    if (maxScrollDistance <= 0) return;\n    var nextScrollLeft = bound(activeTabLeft - (containerWidth - activeTabWidth) / 2, 0, containerScrollWidth - containerWidth);\n    api.start({\n      scrollLeft: nextScrollLeft,\n      from: {\n        scrollLeft: containerScrollLeft\n      },\n      immediate: immediate\n    });\n  }\n\n  useIsomorphicLayoutEffect(function () {\n    animate(true);\n  }, []);\n  useIsomorphicUpdateLayoutEffect(function () {\n    animate();\n  }, [activeIndex]);\n  useMutationEffect(function () {\n    animate(true);\n  }, targetRef, {\n    subtree: true,\n    childList: true,\n    characterData: true\n  });\n  return {\n    scrollLeft: scrollLeft,\n    animate: animate\n  };\n};","map":null,"metadata":{},"sourceType":"module"}