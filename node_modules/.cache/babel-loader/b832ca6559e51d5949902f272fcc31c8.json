{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\react\\\\project0330\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport { __awaiter } from \"tslib\";\nimport { show } from './show';\nimport { mergeProps } from '../../utils/with-default-props';\nimport { getDefaultConfig } from '../config-provider';\nvar defaultProps = {\n  confirmText: '确认',\n  cancelText: '取消'\n};\nexport function confirm(p) {\n  var _this = this;\n\n  var _getDefaultConfig = getDefaultConfig(),\n      locale = _getDefaultConfig.locale;\n\n  var props = mergeProps(defaultProps, {\n    confirmText: locale.common.confirm,\n    cancelText: locale.common.cancel\n  }, p);\n  return new Promise(function (resolve) {\n    show(Object.assign(Object.assign({}, props), {\n      closeOnAction: true,\n      onClose: function onClose() {\n        var _a;\n\n        (_a = props.onClose) === null || _a === void 0 ? void 0 : _a.call(props);\n        resolve(false);\n      },\n      actions: [{\n        key: 'confirm',\n        text: props.confirmText,\n        primary: true,\n        onClick: function onClick() {\n          return __awaiter(_this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n            var _a;\n\n            return _regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    _context.next = 2;\n                    return (_a = props.onConfirm) === null || _a === void 0 ? void 0 : _a.call(props);\n\n                  case 2:\n                    resolve(true);\n\n                  case 3:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee);\n          }));\n        }\n      }, {\n        key: 'cancel',\n        text: props.cancelText,\n        onClick: function onClick() {\n          return __awaiter(_this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n            var _b;\n\n            return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n              while (1) {\n                switch (_context2.prev = _context2.next) {\n                  case 0:\n                    _context2.next = 2;\n                    return (_b = props.onCancel) === null || _b === void 0 ? void 0 : _b.call(props);\n\n                  case 2:\n                    resolve(false);\n\n                  case 3:\n                  case \"end\":\n                    return _context2.stop();\n                }\n              }\n            }, _callee2);\n          }));\n        }\n      }]\n    }));\n  });\n}","map":null,"metadata":{},"sourceType":"module"}