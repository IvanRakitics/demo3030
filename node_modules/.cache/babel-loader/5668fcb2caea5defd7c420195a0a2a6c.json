{"ast":null,"code":"import useLatest from '../useLatest';\nimport { getTargetElement } from '../utils/domTarget';\nimport useEffectWithTarget from '../utils/useEffectWithTarget';\n\nfunction useEventListener(eventName, handler, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var handlerRef = useLatest(handler);\n  useEffectWithTarget(function () {\n    var targetElement = getTargetElement(options.target, window);\n\n    if (!(targetElement === null || targetElement === void 0 ? void 0 : targetElement.addEventListener)) {\n      return;\n    }\n\n    var eventListener = function eventListener(event) {\n      return handlerRef.current(event);\n    };\n\n    targetElement.addEventListener(eventName, eventListener, {\n      capture: options.capture,\n      once: options.once,\n      passive: options.passive\n    });\n    return function () {\n      targetElement.removeEventListener(eventName, eventListener, {\n        capture: options.capture\n      });\n    };\n  }, [eventName, options.capture, options.once, options.passive], options.target);\n}\n\nexport default useEventListener;","map":{"version":3,"sources":["D:/react/project0330/node_modules/ahooks/es/useEventListener/index.js"],"names":["useLatest","getTargetElement","useEffectWithTarget","useEventListener","eventName","handler","options","handlerRef","targetElement","target","window","addEventListener","eventListener","event","current","capture","once","passive","removeEventListener"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,cAAtB;AACA,SAASC,gBAAT,QAAiC,oBAAjC;AACA,OAAOC,mBAAP,MAAgC,8BAAhC;;AAEA,SAASC,gBAAT,CAA0BC,SAA1B,EAAqCC,OAArC,EAA8CC,OAA9C,EAAuD;AACrD,MAAIA,OAAO,KAAK,KAAK,CAArB,EAAwB;AACtBA,IAAAA,OAAO,GAAG,EAAV;AACD;;AAED,MAAIC,UAAU,GAAGP,SAAS,CAACK,OAAD,CAA1B;AACAH,EAAAA,mBAAmB,CAAC,YAAY;AAC9B,QAAIM,aAAa,GAAGP,gBAAgB,CAACK,OAAO,CAACG,MAAT,EAAiBC,MAAjB,CAApC;;AAEA,QAAI,EAAEF,aAAa,KAAK,IAAlB,IAA0BA,aAAa,KAAK,KAAK,CAAjD,GAAqD,KAAK,CAA1D,GAA8DA,aAAa,CAACG,gBAA9E,CAAJ,EAAqG;AACnG;AACD;;AAED,QAAIC,aAAa,GAAG,SAASA,aAAT,CAAuBC,KAAvB,EAA8B;AAChD,aAAON,UAAU,CAACO,OAAX,CAAmBD,KAAnB,CAAP;AACD,KAFD;;AAIAL,IAAAA,aAAa,CAACG,gBAAd,CAA+BP,SAA/B,EAA0CQ,aAA1C,EAAyD;AACvDG,MAAAA,OAAO,EAAET,OAAO,CAACS,OADsC;AAEvDC,MAAAA,IAAI,EAAEV,OAAO,CAACU,IAFyC;AAGvDC,MAAAA,OAAO,EAAEX,OAAO,CAACW;AAHsC,KAAzD;AAKA,WAAO,YAAY;AACjBT,MAAAA,aAAa,CAACU,mBAAd,CAAkCd,SAAlC,EAA6CQ,aAA7C,EAA4D;AAC1DG,QAAAA,OAAO,EAAET,OAAO,CAACS;AADyC,OAA5D;AAGD,KAJD;AAKD,GArBkB,EAqBhB,CAACX,SAAD,EAAYE,OAAO,CAACS,OAApB,EAA6BT,OAAO,CAACU,IAArC,EAA2CV,OAAO,CAACW,OAAnD,CArBgB,EAqB6CX,OAAO,CAACG,MArBrD,CAAnB;AAsBD;;AAED,eAAeN,gBAAf","sourcesContent":["import useLatest from '../useLatest';\nimport { getTargetElement } from '../utils/domTarget';\nimport useEffectWithTarget from '../utils/useEffectWithTarget';\n\nfunction useEventListener(eventName, handler, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var handlerRef = useLatest(handler);\n  useEffectWithTarget(function () {\n    var targetElement = getTargetElement(options.target, window);\n\n    if (!(targetElement === null || targetElement === void 0 ? void 0 : targetElement.addEventListener)) {\n      return;\n    }\n\n    var eventListener = function eventListener(event) {\n      return handlerRef.current(event);\n    };\n\n    targetElement.addEventListener(eventName, eventListener, {\n      capture: options.capture,\n      once: options.once,\n      passive: options.passive\n    });\n    return function () {\n      targetElement.removeEventListener(eventName, eventListener, {\n        capture: options.capture\n      });\n    };\n  }, [eventName, options.capture, options.once, options.passive], options.target);\n}\n\nexport default useEventListener;"]},"metadata":{},"sourceType":"module"}