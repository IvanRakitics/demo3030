{"ast":null,"code":"import _slicedToArray from \"D:\\\\react\\\\project0330\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport React, { forwardRef, useImperativeHandle, useRef, useState } from 'react';\nimport { mergeProps } from '../../utils/with-default-props';\nimport { renderToContainer } from '../../utils/render-to-container';\nimport Mask from '../mask';\nimport { Slide } from './slide';\nimport { Slides } from './slides';\nvar classPrefix = \"adm-image-viewer\";\nvar defaultProps = {\n  maxZoom: 3,\n  getContainer: null,\n  visible: false\n};\nexport var ImageViewer = function ImageViewer(p) {\n  var props = mergeProps(defaultProps, p);\n  var node = React.createElement(Mask, {\n    visible: props.visible,\n    disableBodyScroll: false,\n    opacity: 'thick',\n    afterClose: props.afterClose\n  }, React.createElement(\"div\", {\n    className: \"\".concat(classPrefix, \"-content\")\n  }, props.image && React.createElement(Slide, {\n    image: props.image,\n    onTap: function onTap() {\n      var _a;\n\n      (_a = props.onClose) === null || _a === void 0 ? void 0 : _a.call(props);\n    },\n    maxZoom: props.maxZoom\n  })));\n  return renderToContainer(props.getContainer, node);\n};\nvar multiDefaultProps = Object.assign(Object.assign({}, defaultProps), {\n  defaultIndex: 0\n});\nexport var MultiImageViewer = forwardRef(function (p, ref) {\n  var props = mergeProps(multiDefaultProps, p);\n\n  var _useState = useState(props.defaultIndex),\n      _useState2 = _slicedToArray(_useState, 2),\n      defaultIndex = _useState2[0],\n      setDefaultIndex = _useState2[1];\n\n  var slidesRef = useRef(null);\n  useImperativeHandle(ref, function () {\n    return {\n      swipeTo: function swipeTo(index, immediate) {\n        var _a;\n\n        setDefaultIndex(index);\n        (_a = slidesRef.current) === null || _a === void 0 ? void 0 : _a.swipeTo(index, immediate);\n      }\n    };\n  });\n  var node = React.createElement(Mask, {\n    visible: props.visible,\n    disableBodyScroll: false,\n    opacity: 'thick',\n    afterClose: props.afterClose\n  }, React.createElement(\"div\", {\n    className: \"\".concat(classPrefix, \"-content\")\n  }, props.images && React.createElement(Slides, {\n    ref: slidesRef,\n    defaultIndex: defaultIndex,\n    onIndexChange: props.onIndexChange,\n    images: props.images,\n    onTap: function onTap() {\n      var _a;\n\n      (_a = props.onClose) === null || _a === void 0 ? void 0 : _a.call(props);\n    },\n    maxZoom: props.maxZoom\n  })));\n  return renderToContainer(props.getContainer, node);\n});","map":null,"metadata":{},"sourceType":"module"}