{"ast":null,"code":"import React, { useCallback, useMemo } from 'react';\nimport { useMemoizedFn } from 'ahooks';\nimport Picker from '../picker';\nimport { withNativeProps } from '../../utils/native-props';\nimport { mergeProps } from '../../utils/with-default-props';\nimport { usePropsValue } from '../../utils/use-props-value';\nimport { convertDateToStringArray, convertStringArrayToDate, generateDatePickerColumns, defaultRenderLabel } from './date-picker-utils';\nimport { bound } from '../../utils/bound';\nconst thisYear = new Date().getFullYear();\nconst defaultProps = {\n  min: new Date(new Date().setFullYear(thisYear - 10)),\n  max: new Date(new Date().setFullYear(thisYear + 10)),\n  precision: 'day',\n  renderLabel: defaultRenderLabel,\n  defaultValue: null\n};\nexport const DatePicker = p => {\n  const props = mergeProps(defaultProps, p);\n  const [value, setValue] = usePropsValue({\n    value: props.value,\n    defaultValue: props.defaultValue,\n    onChange: v => {\n      var _a;\n\n      if (v === null) return;\n      (_a = props.onConfirm) === null || _a === void 0 ? void 0 : _a.call(props, v);\n    }\n  });\n  const now = useMemo(() => new Date(), []);\n  const pickerValue = useMemo(() => {\n    let date = value !== null && value !== void 0 ? value : now;\n    date = new Date(bound(date.getTime(), props.min.getTime(), props.max.getTime()));\n    return convertDateToStringArray(date, props.precision);\n  }, [value, props.precision, props.min, props.max]);\n  const onConfirm = useCallback(val => {\n    setValue(convertStringArrayToDate(val, props.precision));\n  }, [setValue, props.precision]);\n  const onSelect = useMemoizedFn(val => {\n    var _a;\n\n    const date = convertStringArrayToDate(val, props.precision);\n    (_a = props.onSelect) === null || _a === void 0 ? void 0 : _a.call(props, date);\n  });\n  const columns = useCallback(selected => generateDatePickerColumns(selected, props.min, props.max, props.precision, props.renderLabel, props.filter), [props.min, props.max, props.precision, props.renderLabel]);\n  return withNativeProps(props, React.createElement(Picker, {\n    columns: columns,\n    value: pickerValue,\n    onCancel: props.onCancel,\n    onClose: props.onClose,\n    visible: props.visible,\n    confirmText: props.confirmText,\n    cancelText: props.cancelText,\n    onConfirm: onConfirm,\n    onSelect: onSelect,\n    getContainer: props.getContainer,\n    afterShow: props.afterShow,\n    afterClose: props.afterClose,\n    onClick: props.onClick,\n    title: props.title,\n    stopPropagation: props.stopPropagation\n  }, () => {\n    var _a;\n\n    return (_a = props.children) === null || _a === void 0 ? void 0 : _a.call(props, value);\n  }));\n};","map":{"version":3,"sources":["D:/react/project0330/node_modules/antd-mobile/es/components/date-picker/date-picker.js"],"names":["React","useCallback","useMemo","useMemoizedFn","Picker","withNativeProps","mergeProps","usePropsValue","convertDateToStringArray","convertStringArrayToDate","generateDatePickerColumns","defaultRenderLabel","bound","thisYear","Date","getFullYear","defaultProps","min","setFullYear","max","precision","renderLabel","defaultValue","DatePicker","p","props","value","setValue","onChange","v","_a","onConfirm","call","now","pickerValue","date","getTime","val","onSelect","columns","selected","filter","createElement","onCancel","onClose","visible","confirmText","cancelText","getContainer","afterShow","afterClose","onClick","title","stopPropagation","children"],"mappings":"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","sourcesContent":["import React, { useCallback, useMemo } from 'react';\nimport { useMemoizedFn } from 'ahooks';\nimport Picker from '../picker';\nimport { withNativeProps } from '../../utils/native-props';\nimport { mergeProps } from '../../utils/with-default-props';\nimport { usePropsValue } from '../../utils/use-props-value';\nimport { convertDateToStringArray, convertStringArrayToDate, generateDatePickerColumns, defaultRenderLabel } from './date-picker-utils';\nimport { bound } from '../../utils/bound';\nconst thisYear = new Date().getFullYear();\nconst defaultProps = {\n  min: new Date(new Date().setFullYear(thisYear - 10)),\n  max: new Date(new Date().setFullYear(thisYear + 10)),\n  precision: 'day',\n  renderLabel: defaultRenderLabel,\n  defaultValue: null\n};\nexport const DatePicker = p => {\n  const props = mergeProps(defaultProps, p);\n  const [value, setValue] = usePropsValue({\n    value: props.value,\n    defaultValue: props.defaultValue,\n    onChange: v => {\n      var _a;\n\n      if (v === null) return;\n      (_a = props.onConfirm) === null || _a === void 0 ? void 0 : _a.call(props, v);\n    }\n  });\n  const now = useMemo(() => new Date(), []);\n  const pickerValue = useMemo(() => {\n    let date = value !== null && value !== void 0 ? value : now;\n    date = new Date(bound(date.getTime(), props.min.getTime(), props.max.getTime()));\n    return convertDateToStringArray(date, props.precision);\n  }, [value, props.precision, props.min, props.max]);\n  const onConfirm = useCallback(val => {\n    setValue(convertStringArrayToDate(val, props.precision));\n  }, [setValue, props.precision]);\n  const onSelect = useMemoizedFn(val => {\n    var _a;\n\n    const date = convertStringArrayToDate(val, props.precision);\n    (_a = props.onSelect) === null || _a === void 0 ? void 0 : _a.call(props, date);\n  });\n  const columns = useCallback(selected => generateDatePickerColumns(selected, props.min, props.max, props.precision, props.renderLabel, props.filter), [props.min, props.max, props.precision, props.renderLabel]);\n  return withNativeProps(props, React.createElement(Picker, {\n    columns: columns,\n    value: pickerValue,\n    onCancel: props.onCancel,\n    onClose: props.onClose,\n    visible: props.visible,\n    confirmText: props.confirmText,\n    cancelText: props.cancelText,\n    onConfirm: onConfirm,\n    onSelect: onSelect,\n    getContainer: props.getContainer,\n    afterShow: props.afterShow,\n    afterClose: props.afterClose,\n    onClick: props.onClick,\n    title: props.title,\n    stopPropagation: props.stopPropagation\n  }, () => {\n    var _a;\n\n    return (_a = props.children) === null || _a === void 0 ? void 0 : _a.call(props, value);\n  }));\n};"]},"metadata":{},"sourceType":"module"}