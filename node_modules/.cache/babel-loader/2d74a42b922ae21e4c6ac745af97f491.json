{"ast":null,"code":"import React from 'react';\nimport classNames from 'classnames';\nimport { mergeProps } from '../../utils/with-default-props';\nimport { withNativeProps } from '../../utils/native-props';\nimport { useConfig } from '../config-provider';\nimport { imageRecord } from './images';\nconst classPrefix = `adm-error-block`;\nconst defaultProps = {\n  status: 'default'\n};\nexport const ErrorBlock = p => {\n  const props = mergeProps(defaultProps, p);\n  const {\n    locale\n  } = useConfig();\n  const contentPack = locale.ErrorBlock[props.status];\n  const des = 'description' in props ? props.description : contentPack.description;\n  const title = 'title' in props ? props.title : contentPack.title;\n  let imageNode = imageRecord[props.status];\n\n  if (props.image) {\n    if (typeof props.image === 'string') {\n      imageNode = React.createElement(\"img\", {\n        src: props.image,\n        alt: 'error block image'\n      });\n    } else {\n      imageNode = props.image;\n    }\n  }\n\n  return withNativeProps(props, React.createElement(\"div\", {\n    className: classNames(classPrefix, {\n      [`${classPrefix}-full-page`]: props.fullPage\n    })\n  }, React.createElement(\"div\", {\n    className: `${classPrefix}-image`\n  }, imageNode), React.createElement(\"div\", {\n    className: `${classPrefix}-description`\n  }, title && React.createElement(\"div\", {\n    className: `${classPrefix}-description-title`\n  }, title), des && React.createElement(\"div\", {\n    className: `${classPrefix}-description-subtitle`\n  }, des)), props.children && React.createElement(\"div\", {\n    className: `${classPrefix}-content`\n  }, props.children)));\n};","map":{"version":3,"sources":["D:/react/project0330/node_modules/antd-mobile/es/components/error-block/error-block.js"],"names":["React","classNames","mergeProps","withNativeProps","useConfig","imageRecord","classPrefix","defaultProps","status","ErrorBlock","p","props","locale","contentPack","des","description","title","imageNode","image","createElement","src","alt","className","fullPage","children"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,UAAT,QAA2B,gCAA3B;AACA,SAASC,eAAT,QAAgC,0BAAhC;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,SAASC,WAAT,QAA4B,UAA5B;AACA,MAAMC,WAAW,GAAI,iBAArB;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE;AADW,CAArB;AAGA,OAAO,MAAMC,UAAU,GAAGC,CAAC,IAAI;AAC7B,QAAMC,KAAK,GAAGT,UAAU,CAACK,YAAD,EAAeG,CAAf,CAAxB;AACA,QAAM;AACJE,IAAAA;AADI,MAEFR,SAAS,EAFb;AAGA,QAAMS,WAAW,GAAGD,MAAM,CAACH,UAAP,CAAkBE,KAAK,CAACH,MAAxB,CAApB;AACA,QAAMM,GAAG,GAAG,iBAAiBH,KAAjB,GAAyBA,KAAK,CAACI,WAA/B,GAA6CF,WAAW,CAACE,WAArE;AACA,QAAMC,KAAK,GAAG,WAAWL,KAAX,GAAmBA,KAAK,CAACK,KAAzB,GAAiCH,WAAW,CAACG,KAA3D;AACA,MAAIC,SAAS,GAAGZ,WAAW,CAACM,KAAK,CAACH,MAAP,CAA3B;;AAEA,MAAIG,KAAK,CAACO,KAAV,EAAiB;AACf,QAAI,OAAOP,KAAK,CAACO,KAAb,KAAuB,QAA3B,EAAqC;AACnCD,MAAAA,SAAS,GAAGjB,KAAK,CAACmB,aAAN,CAAoB,KAApB,EAA2B;AACrCC,QAAAA,GAAG,EAAET,KAAK,CAACO,KAD0B;AAErCG,QAAAA,GAAG,EAAE;AAFgC,OAA3B,CAAZ;AAID,KALD,MAKO;AACLJ,MAAAA,SAAS,GAAGN,KAAK,CAACO,KAAlB;AACD;AACF;;AAED,SAAOf,eAAe,CAACQ,KAAD,EAAQX,KAAK,CAACmB,aAAN,CAAoB,KAApB,EAA2B;AACvDG,IAAAA,SAAS,EAAErB,UAAU,CAACK,WAAD,EAAc;AACjC,OAAE,GAAEA,WAAY,YAAhB,GAA8BK,KAAK,CAACY;AADH,KAAd;AADkC,GAA3B,EAI3BvB,KAAK,CAACmB,aAAN,CAAoB,KAApB,EAA2B;AAC5BG,IAAAA,SAAS,EAAG,GAAEhB,WAAY;AADE,GAA3B,EAEAW,SAFA,CAJ2B,EAMfjB,KAAK,CAACmB,aAAN,CAAoB,KAApB,EAA2B;AACxCG,IAAAA,SAAS,EAAG,GAAEhB,WAAY;AADc,GAA3B,EAEZU,KAAK,IAAIhB,KAAK,CAACmB,aAAN,CAAoB,KAApB,EAA2B;AACrCG,IAAAA,SAAS,EAAG,GAAEhB,WAAY;AADW,GAA3B,EAETU,KAFS,CAFG,EAIJF,GAAG,IAAId,KAAK,CAACmB,aAAN,CAAoB,KAApB,EAA2B;AAC3CG,IAAAA,SAAS,EAAG,GAAEhB,WAAY;AADiB,GAA3B,EAEfQ,GAFe,CAJH,CANe,EAYpBH,KAAK,CAACa,QAAN,IAAkBxB,KAAK,CAACmB,aAAN,CAAoB,KAApB,EAA2B;AACrDG,IAAAA,SAAS,EAAG,GAAEhB,WAAY;AAD2B,GAA3B,EAEzBK,KAAK,CAACa,QAFmB,CAZE,CAAR,CAAtB;AAeD,CApCM","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { mergeProps } from '../../utils/with-default-props';\nimport { withNativeProps } from '../../utils/native-props';\nimport { useConfig } from '../config-provider';\nimport { imageRecord } from './images';\nconst classPrefix = `adm-error-block`;\nconst defaultProps = {\n  status: 'default'\n};\nexport const ErrorBlock = p => {\n  const props = mergeProps(defaultProps, p);\n  const {\n    locale\n  } = useConfig();\n  const contentPack = locale.ErrorBlock[props.status];\n  const des = 'description' in props ? props.description : contentPack.description;\n  const title = 'title' in props ? props.title : contentPack.title;\n  let imageNode = imageRecord[props.status];\n\n  if (props.image) {\n    if (typeof props.image === 'string') {\n      imageNode = React.createElement(\"img\", {\n        src: props.image,\n        alt: 'error block image'\n      });\n    } else {\n      imageNode = props.image;\n    }\n  }\n\n  return withNativeProps(props, React.createElement(\"div\", {\n    className: classNames(classPrefix, {\n      [`${classPrefix}-full-page`]: props.fullPage\n    })\n  }, React.createElement(\"div\", {\n    className: `${classPrefix}-image`\n  }, imageNode), React.createElement(\"div\", {\n    className: `${classPrefix}-description`\n  }, title && React.createElement(\"div\", {\n    className: `${classPrefix}-description-title`\n  }, title), des && React.createElement(\"div\", {\n    className: `${classPrefix}-description-subtitle`\n  }, des)), props.children && React.createElement(\"div\", {\n    className: `${classPrefix}-content`\n  }, props.children)));\n};"]},"metadata":{},"sourceType":"module"}