{"ast":null,"code":"import React, { useContext } from 'react';\nimport List from '../list';\nimport { withNativeProps } from '../../utils/native-props';\nimport { CheckListContext } from './context';\nimport { devWarning } from '../../utils/dev-log';\nimport classNames from 'classnames';\nvar classPrefix = \"adm-check-list-item\";\nexport var CheckListItem = function CheckListItem(props) {\n  var context = useContext(CheckListContext);\n\n  if (context === null) {\n    devWarning('CheckList.Item', 'CheckList.Item can only be used inside CheckList.');\n    return null;\n  }\n\n  var active = context.value.includes(props.value);\n  var readOnly = props.readOnly || context.readOnly;\n  var extra = React.createElement(\"div\", {\n    className: \"\".concat(classPrefix, \"-extra\")\n  }, active ? context.activeIcon : null);\n  return withNativeProps(props, React.createElement(List.Item, {\n    title: props.title,\n    className: classNames(classPrefix, readOnly && \"\".concat(classPrefix, \"-readonly\"), active && \"\".concat(classPrefix, \"-active\")),\n    description: props.description,\n    prefix: props.prefix,\n    onClick: function onClick(e) {\n      var _a;\n\n      if (readOnly) return;\n\n      if (active) {\n        context.uncheck(props.value);\n      } else {\n        context.check(props.value);\n      }\n\n      (_a = props.onClick) === null || _a === void 0 ? void 0 : _a.call(props, e);\n    },\n    arrow: false,\n    clickable: !readOnly,\n    extra: extra,\n    disabled: props.disabled || context.disabled\n  }, props.children));\n};","map":null,"metadata":{},"sourceType":"module"}