{"ast":null,"code":"import React, { forwardRef, useCallback, useImperativeHandle, useMemo, useRef } from 'react';\nimport classNames from 'classnames';\nimport { Popover } from './popover';\nvar classPrefix = \"adm-popover-menu\";\nexport var PopoverMenu = forwardRef(function (props, ref) {\n  var innerRef = useRef(null);\n  useImperativeHandle(ref, function () {\n    return innerRef.current;\n  }, []);\n\n  var _onClick = useCallback(function (e) {\n    var _a;\n\n    var onAction = props.onAction;\n\n    if (onAction) {\n      onAction(e);\n    }\n\n    (_a = innerRef.current) === null || _a === void 0 ? void 0 : _a.hide();\n  }, [props.onAction]);\n\n  var overlay = useMemo(function () {\n    return React.createElement(\"div\", {\n      className: \"\".concat(classPrefix, \"-list\")\n    }, React.createElement(\"div\", {\n      className: \"\".concat(classPrefix, \"-list-inner\")\n    }, props.actions.map(function (action, index) {\n      var _a;\n\n      return React.createElement(\"a\", {\n        key: (_a = action.key) !== null && _a !== void 0 ? _a : index,\n        className: classNames(\"\".concat(classPrefix, \"-item\"), 'adm-plain-anchor', action.disabled && \"\".concat(classPrefix, \"-item-disabled\")),\n        onClick: function onClick() {\n          var _a;\n\n          if (action.disabled) return;\n\n          _onClick(action);\n\n          (_a = action.onClick) === null || _a === void 0 ? void 0 : _a.call(action);\n        }\n      }, action.icon && React.createElement(\"div\", {\n        className: \"\".concat(classPrefix, \"-item-icon\")\n      }, action.icon), React.createElement(\"div\", {\n        className: \"\".concat(classPrefix, \"-item-text\")\n      }, action.text));\n    })));\n  }, [props.actions, _onClick]);\n  return React.createElement(Popover, Object.assign({\n    ref: innerRef\n  }, props, {\n    className: classNames(classPrefix, props.className),\n    content: overlay\n  }), props.children);\n});","map":null,"metadata":{},"sourceType":"module"}