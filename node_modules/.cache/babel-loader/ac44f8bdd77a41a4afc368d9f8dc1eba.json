{"ast":null,"code":"import * as dateUtils from './date-picker-date-utils';\nimport * as weekUtils from './date-picker-week-utils';\nconst precisionLengthRecord = {\n  year: 1,\n  month: 2,\n  day: 3,\n  hour: 4,\n  minute: 5,\n  second: 6\n};\nexport const convertDateToStringArray = (date, precision) => {\n  if (precision.includes('week')) {\n    return weekUtils.convertDateToStringArray(date);\n  } else {\n    const datePrecision = precision;\n    const stringArray = dateUtils.convertDateToStringArray(date);\n    return stringArray.slice(0, precisionLengthRecord[datePrecision]);\n  }\n};\nexport const convertStringArrayToDate = (value, precision) => {\n  if (precision.includes('week')) {\n    return weekUtils.convertStringArrayToDate(value);\n  } else {\n    return dateUtils.convertStringArrayToDate(value);\n  }\n};\nexport const generateDatePickerColumns = (selected, min, max, precision, renderLabel, filter) => {\n  if (precision.startsWith('week')) {\n    return weekUtils.generateDatePickerColumns(selected, min, max, precision, renderLabel, filter);\n  } else {\n    return dateUtils.generateDatePickerColumns(selected, min, max, precision, renderLabel, filter);\n  }\n};\nexport const defaultRenderLabel = (precision, data) => {\n  if (precision.includes('week')) {\n    return weekUtils.defaultRenderLabel(precision, data);\n  } else {\n    return dateUtils.defaultRenderLabel(precision, data);\n  }\n};","map":{"version":3,"sources":["D:/react/project0330/node_modules/antd-mobile/es/components/date-picker/date-picker-utils.js"],"names":["dateUtils","weekUtils","precisionLengthRecord","year","month","day","hour","minute","second","convertDateToStringArray","date","precision","includes","datePrecision","stringArray","slice","convertStringArrayToDate","value","generateDatePickerColumns","selected","min","max","renderLabel","filter","startsWith","defaultRenderLabel","data"],"mappings":"AAAA,OAAO,KAAKA,SAAZ,MAA2B,0BAA3B;AACA,OAAO,KAAKC,SAAZ,MAA2B,0BAA3B;AACA,MAAMC,qBAAqB,GAAG;AAC5BC,EAAAA,IAAI,EAAE,CADsB;AAE5BC,EAAAA,KAAK,EAAE,CAFqB;AAG5BC,EAAAA,GAAG,EAAE,CAHuB;AAI5BC,EAAAA,IAAI,EAAE,CAJsB;AAK5BC,EAAAA,MAAM,EAAE,CALoB;AAM5BC,EAAAA,MAAM,EAAE;AANoB,CAA9B;AAQA,OAAO,MAAMC,wBAAwB,GAAG,CAACC,IAAD,EAAOC,SAAP,KAAqB;AAC3D,MAAIA,SAAS,CAACC,QAAV,CAAmB,MAAnB,CAAJ,EAAgC;AAC9B,WAAOX,SAAS,CAACQ,wBAAV,CAAmCC,IAAnC,CAAP;AACD,GAFD,MAEO;AACL,UAAMG,aAAa,GAAGF,SAAtB;AACA,UAAMG,WAAW,GAAGd,SAAS,CAACS,wBAAV,CAAmCC,IAAnC,CAApB;AACA,WAAOI,WAAW,CAACC,KAAZ,CAAkB,CAAlB,EAAqBb,qBAAqB,CAACW,aAAD,CAA1C,CAAP;AACD;AACF,CARM;AASP,OAAO,MAAMG,wBAAwB,GAAG,CAACC,KAAD,EAAQN,SAAR,KAAsB;AAC5D,MAAIA,SAAS,CAACC,QAAV,CAAmB,MAAnB,CAAJ,EAAgC;AAC9B,WAAOX,SAAS,CAACe,wBAAV,CAAmCC,KAAnC,CAAP;AACD,GAFD,MAEO;AACL,WAAOjB,SAAS,CAACgB,wBAAV,CAAmCC,KAAnC,CAAP;AACD;AACF,CANM;AAOP,OAAO,MAAMC,yBAAyB,GAAG,CAACC,QAAD,EAAWC,GAAX,EAAgBC,GAAhB,EAAqBV,SAArB,EAAgCW,WAAhC,EAA6CC,MAA7C,KAAwD;AAC/F,MAAIZ,SAAS,CAACa,UAAV,CAAqB,MAArB,CAAJ,EAAkC;AAChC,WAAOvB,SAAS,CAACiB,yBAAV,CAAoCC,QAApC,EAA8CC,GAA9C,EAAmDC,GAAnD,EAAwDV,SAAxD,EAAmEW,WAAnE,EAAgFC,MAAhF,CAAP;AACD,GAFD,MAEO;AACL,WAAOvB,SAAS,CAACkB,yBAAV,CAAoCC,QAApC,EAA8CC,GAA9C,EAAmDC,GAAnD,EAAwDV,SAAxD,EAAmEW,WAAnE,EAAgFC,MAAhF,CAAP;AACD;AACF,CANM;AAOP,OAAO,MAAME,kBAAkB,GAAG,CAACd,SAAD,EAAYe,IAAZ,KAAqB;AACrD,MAAIf,SAAS,CAACC,QAAV,CAAmB,MAAnB,CAAJ,EAAgC;AAC9B,WAAOX,SAAS,CAACwB,kBAAV,CAA6Bd,SAA7B,EAAwCe,IAAxC,CAAP;AACD,GAFD,MAEO;AACL,WAAO1B,SAAS,CAACyB,kBAAV,CAA6Bd,SAA7B,EAAwCe,IAAxC,CAAP;AACD;AACF,CANM","sourcesContent":["import * as dateUtils from './date-picker-date-utils';\nimport * as weekUtils from './date-picker-week-utils';\nconst precisionLengthRecord = {\n  year: 1,\n  month: 2,\n  day: 3,\n  hour: 4,\n  minute: 5,\n  second: 6\n};\nexport const convertDateToStringArray = (date, precision) => {\n  if (precision.includes('week')) {\n    return weekUtils.convertDateToStringArray(date);\n  } else {\n    const datePrecision = precision;\n    const stringArray = dateUtils.convertDateToStringArray(date);\n    return stringArray.slice(0, precisionLengthRecord[datePrecision]);\n  }\n};\nexport const convertStringArrayToDate = (value, precision) => {\n  if (precision.includes('week')) {\n    return weekUtils.convertStringArrayToDate(value);\n  } else {\n    return dateUtils.convertStringArrayToDate(value);\n  }\n};\nexport const generateDatePickerColumns = (selected, min, max, precision, renderLabel, filter) => {\n  if (precision.startsWith('week')) {\n    return weekUtils.generateDatePickerColumns(selected, min, max, precision, renderLabel, filter);\n  } else {\n    return dateUtils.generateDatePickerColumns(selected, min, max, precision, renderLabel, filter);\n  }\n};\nexport const defaultRenderLabel = (precision, data) => {\n  if (precision.includes('week')) {\n    return weekUtils.defaultRenderLabel(precision, data);\n  } else {\n    return dateUtils.defaultRenderLabel(precision, data);\n  }\n};"]},"metadata":{},"sourceType":"module"}