{"ast":null,"code":"import React from 'react';\nimport classNames from 'classnames';\nexport function withNativeProps(props, element) {\n  const p = Object.assign({}, element.props);\n\n  if (props.className) {\n    p.className = classNames(element.props.className, props.className);\n  }\n\n  if (props.style) {\n    p.style = Object.assign(Object.assign({}, p.style), props.style);\n  }\n\n  if (props.tabIndex !== undefined) {\n    p.tabIndex = props.tabIndex;\n  }\n\n  for (const key in props) {\n    if (!props.hasOwnProperty(key)) continue;\n\n    if (key.startsWith('data-') || key.startsWith('aria-')) {\n      p[key] = props[key];\n    }\n  }\n\n  return React.cloneElement(element, p);\n}","map":{"version":3,"sources":["D:/react/project0330/node_modules/antd-mobile/es/utils/native-props.js"],"names":["React","classNames","withNativeProps","props","element","p","Object","assign","className","style","tabIndex","undefined","key","hasOwnProperty","startsWith","cloneElement"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAO,SAASC,eAAT,CAAyBC,KAAzB,EAAgCC,OAAhC,EAAyC;AAC9C,QAAMC,CAAC,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBH,OAAO,CAACD,KAA1B,CAAV;;AAEA,MAAIA,KAAK,CAACK,SAAV,EAAqB;AACnBH,IAAAA,CAAC,CAACG,SAAF,GAAcP,UAAU,CAACG,OAAO,CAACD,KAAR,CAAcK,SAAf,EAA0BL,KAAK,CAACK,SAAhC,CAAxB;AACD;;AAED,MAAIL,KAAK,CAACM,KAAV,EAAiB;AACfJ,IAAAA,CAAC,CAACI,KAAF,GAAUH,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBF,CAAC,CAACI,KAApB,CAAd,EAA0CN,KAAK,CAACM,KAAhD,CAAV;AACD;;AAED,MAAIN,KAAK,CAACO,QAAN,KAAmBC,SAAvB,EAAkC;AAChCN,IAAAA,CAAC,CAACK,QAAF,GAAaP,KAAK,CAACO,QAAnB;AACD;;AAED,OAAK,MAAME,GAAX,IAAkBT,KAAlB,EAAyB;AACvB,QAAI,CAACA,KAAK,CAACU,cAAN,CAAqBD,GAArB,CAAL,EAAgC;;AAEhC,QAAIA,GAAG,CAACE,UAAJ,CAAe,OAAf,KAA2BF,GAAG,CAACE,UAAJ,CAAe,OAAf,CAA/B,EAAwD;AACtDT,MAAAA,CAAC,CAACO,GAAD,CAAD,GAAST,KAAK,CAACS,GAAD,CAAd;AACD;AACF;;AAED,SAAOZ,KAAK,CAACe,YAAN,CAAmBX,OAAnB,EAA4BC,CAA5B,CAAP;AACD","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nexport function withNativeProps(props, element) {\n  const p = Object.assign({}, element.props);\n\n  if (props.className) {\n    p.className = classNames(element.props.className, props.className);\n  }\n\n  if (props.style) {\n    p.style = Object.assign(Object.assign({}, p.style), props.style);\n  }\n\n  if (props.tabIndex !== undefined) {\n    p.tabIndex = props.tabIndex;\n  }\n\n  for (const key in props) {\n    if (!props.hasOwnProperty(key)) continue;\n\n    if (key.startsWith('data-') || key.startsWith('aria-')) {\n      p[key] = props[key];\n    }\n  }\n\n  return React.cloneElement(element, p);\n}"]},"metadata":{},"sourceType":"module"}