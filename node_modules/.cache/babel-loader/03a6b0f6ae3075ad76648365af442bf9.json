{"ast":null,"code":"import { useRef } from 'react';\nimport useUnmount from '../useUnmount';\nimport depsAreSame from './depsAreSame';\nimport { getTargetElement } from './domTarget';\n\nvar createEffectWithTarget = function createEffectWithTarget(useEffectType) {\n  /**\n   *\n   * @param effect\n   * @param deps\n   * @param target target should compare ref.current vs ref.current, dom vs dom, ()=>dom vs ()=>dom\n   */\n  var useEffectWithTarget = function useEffectWithTarget(effect, deps, target) {\n    var hasInitRef = useRef(false);\n    var lastElementRef = useRef([]);\n    var lastDepsRef = useRef([]);\n    var unLoadRef = useRef();\n    useEffectType(function () {\n      var _a;\n\n      var targets = Array.isArray(target) ? target : [target];\n      var els = targets.map(function (item) {\n        return getTargetElement(item);\n      }); // init run\n\n      if (!hasInitRef.current) {\n        hasInitRef.current = true;\n        lastElementRef.current = els;\n        lastDepsRef.current = deps;\n        unLoadRef.current = effect();\n        return;\n      }\n\n      if (els.length !== lastElementRef.current.length || !depsAreSame(els, lastElementRef.current) || !depsAreSame(deps, lastDepsRef.current)) {\n        (_a = unLoadRef.current) === null || _a === void 0 ? void 0 : _a.call(unLoadRef);\n        lastElementRef.current = els;\n        lastDepsRef.current = deps;\n        unLoadRef.current = effect();\n      }\n    });\n    useUnmount(function () {\n      var _a;\n\n      (_a = unLoadRef.current) === null || _a === void 0 ? void 0 : _a.call(unLoadRef); // for react-refresh\n\n      hasInitRef.current = false;\n    });\n  };\n\n  return useEffectWithTarget;\n};\n\nexport default createEffectWithTarget;","map":{"version":3,"sources":["D:/react/project0330/node_modules/ahooks/es/utils/createEffectWithTarget.js"],"names":["useRef","useUnmount","depsAreSame","getTargetElement","createEffectWithTarget","useEffectType","useEffectWithTarget","effect","deps","target","hasInitRef","lastElementRef","lastDepsRef","unLoadRef","_a","targets","Array","isArray","els","map","item","current","length","call"],"mappings":"AAAA,SAASA,MAAT,QAAuB,OAAvB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,gBAAT,QAAiC,aAAjC;;AAEA,IAAIC,sBAAsB,GAAG,SAASA,sBAAT,CAAgCC,aAAhC,EAA+C;AAC1E;AACF;AACA;AACA;AACA;AACA;AACE,MAAIC,mBAAmB,GAAG,SAASA,mBAAT,CAA6BC,MAA7B,EAAqCC,IAArC,EAA2CC,MAA3C,EAAmD;AAC3E,QAAIC,UAAU,GAAGV,MAAM,CAAC,KAAD,CAAvB;AACA,QAAIW,cAAc,GAAGX,MAAM,CAAC,EAAD,CAA3B;AACA,QAAIY,WAAW,GAAGZ,MAAM,CAAC,EAAD,CAAxB;AACA,QAAIa,SAAS,GAAGb,MAAM,EAAtB;AACAK,IAAAA,aAAa,CAAC,YAAY;AACxB,UAAIS,EAAJ;;AAEA,UAAIC,OAAO,GAAGC,KAAK,CAACC,OAAN,CAAcR,MAAd,IAAwBA,MAAxB,GAAiC,CAACA,MAAD,CAA/C;AACA,UAAIS,GAAG,GAAGH,OAAO,CAACI,GAAR,CAAY,UAAUC,IAAV,EAAgB;AACpC,eAAOjB,gBAAgB,CAACiB,IAAD,CAAvB;AACD,OAFS,CAAV,CAJwB,CAMpB;;AAEJ,UAAI,CAACV,UAAU,CAACW,OAAhB,EAAyB;AACvBX,QAAAA,UAAU,CAACW,OAAX,GAAqB,IAArB;AACAV,QAAAA,cAAc,CAACU,OAAf,GAAyBH,GAAzB;AACAN,QAAAA,WAAW,CAACS,OAAZ,GAAsBb,IAAtB;AACAK,QAAAA,SAAS,CAACQ,OAAV,GAAoBd,MAAM,EAA1B;AACA;AACD;;AAED,UAAIW,GAAG,CAACI,MAAJ,KAAeX,cAAc,CAACU,OAAf,CAAuBC,MAAtC,IAAgD,CAACpB,WAAW,CAACgB,GAAD,EAAMP,cAAc,CAACU,OAArB,CAA5D,IAA6F,CAACnB,WAAW,CAACM,IAAD,EAAOI,WAAW,CAACS,OAAnB,CAA7G,EAA0I;AACxI,SAACP,EAAE,GAAGD,SAAS,CAACQ,OAAhB,MAA6B,IAA7B,IAAqCP,EAAE,KAAK,KAAK,CAAjD,GAAqD,KAAK,CAA1D,GAA8DA,EAAE,CAACS,IAAH,CAAQV,SAAR,CAA9D;AACAF,QAAAA,cAAc,CAACU,OAAf,GAAyBH,GAAzB;AACAN,QAAAA,WAAW,CAACS,OAAZ,GAAsBb,IAAtB;AACAK,QAAAA,SAAS,CAACQ,OAAV,GAAoBd,MAAM,EAA1B;AACD;AACF,KAtBY,CAAb;AAuBAN,IAAAA,UAAU,CAAC,YAAY;AACrB,UAAIa,EAAJ;;AAEA,OAACA,EAAE,GAAGD,SAAS,CAACQ,OAAhB,MAA6B,IAA7B,IAAqCP,EAAE,KAAK,KAAK,CAAjD,GAAqD,KAAK,CAA1D,GAA8DA,EAAE,CAACS,IAAH,CAAQV,SAAR,CAA9D,CAHqB,CAG6D;;AAElFH,MAAAA,UAAU,CAACW,OAAX,GAAqB,KAArB;AACD,KANS,CAAV;AAOD,GAnCD;;AAqCA,SAAOf,mBAAP;AACD,CA7CD;;AA+CA,eAAeF,sBAAf","sourcesContent":["import { useRef } from 'react';\nimport useUnmount from '../useUnmount';\nimport depsAreSame from './depsAreSame';\nimport { getTargetElement } from './domTarget';\n\nvar createEffectWithTarget = function createEffectWithTarget(useEffectType) {\n  /**\n   *\n   * @param effect\n   * @param deps\n   * @param target target should compare ref.current vs ref.current, dom vs dom, ()=>dom vs ()=>dom\n   */\n  var useEffectWithTarget = function useEffectWithTarget(effect, deps, target) {\n    var hasInitRef = useRef(false);\n    var lastElementRef = useRef([]);\n    var lastDepsRef = useRef([]);\n    var unLoadRef = useRef();\n    useEffectType(function () {\n      var _a;\n\n      var targets = Array.isArray(target) ? target : [target];\n      var els = targets.map(function (item) {\n        return getTargetElement(item);\n      }); // init run\n\n      if (!hasInitRef.current) {\n        hasInitRef.current = true;\n        lastElementRef.current = els;\n        lastDepsRef.current = deps;\n        unLoadRef.current = effect();\n        return;\n      }\n\n      if (els.length !== lastElementRef.current.length || !depsAreSame(els, lastElementRef.current) || !depsAreSame(deps, lastDepsRef.current)) {\n        (_a = unLoadRef.current) === null || _a === void 0 ? void 0 : _a.call(unLoadRef);\n        lastElementRef.current = els;\n        lastDepsRef.current = deps;\n        unLoadRef.current = effect();\n      }\n    });\n    useUnmount(function () {\n      var _a;\n\n      (_a = unLoadRef.current) === null || _a === void 0 ? void 0 : _a.call(unLoadRef); // for react-refresh\n\n      hasInitRef.current = false;\n    });\n  };\n\n  return useEffectWithTarget;\n};\n\nexport default createEffectWithTarget;"]},"metadata":{},"sourceType":"module"}