{"ast":null,"code":"import React, { useState, useEffect, useRef, forwardRef, useImperativeHandle } from 'react';\nimport { mergeProps } from '../../utils/with-default-props';\nimport { withNativeProps } from '../../utils/native-props';\nimport classNames from 'classnames';\nimport { bound } from '../../utils/bound';\nimport { usePropsValue } from '../../utils/use-props-value';\nconst classPrefix = 'adm-passcode-input';\nconst defaultProps = {\n  defaultValue: '',\n  length: 6,\n  plain: false,\n  error: false,\n  seperated: false,\n  caret: true\n};\nexport const PasscodeInput = forwardRef((p, ref) => {\n  const props = mergeProps(defaultProps, p); // 防止 length 值不合法\n\n  const cellLength = props.length > 0 && props.length < Infinity ? Math.floor(props.length) : defaultProps.length;\n  const [focused, setFocused] = useState(false);\n  const [value, setValue] = usePropsValue(props);\n  const rootRef = useRef(null);\n  const nativeInputRef = useRef(null);\n  useEffect(() => {\n    var _a;\n\n    if (value.length >= cellLength) {\n      (_a = props.onFill) === null || _a === void 0 ? void 0 : _a.call(props, value);\n    }\n  }, [value, cellLength]);\n\n  const onFocus = () => {\n    var _a, _b;\n\n    if (!props.keyboard) {\n      (_a = nativeInputRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n\n    setFocused(true);\n    (_b = props.onFocus) === null || _b === void 0 ? void 0 : _b.call(props);\n  };\n\n  useEffect(() => {\n    if (!focused) return;\n    const timeout = window.setTimeout(() => {\n      var _a;\n\n      (_a = rootRef.current) === null || _a === void 0 ? void 0 : _a.scrollIntoView({\n        block: 'center',\n        inline: 'center',\n        behavior: 'smooth'\n      });\n    }, 100);\n    return () => {\n      window.clearTimeout(timeout);\n    };\n  }, [focused]);\n\n  const onBlur = () => {\n    var _a;\n\n    setFocused(false);\n    (_a = props.onBlur) === null || _a === void 0 ? void 0 : _a.call(props);\n  };\n\n  useImperativeHandle(ref, () => ({\n    focus: () => {\n      var _a;\n\n      return (_a = rootRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n    },\n    blur: () => {\n      var _a, _b;\n\n      (_a = rootRef.current) === null || _a === void 0 ? void 0 : _a.blur();\n      (_b = nativeInputRef.current) === null || _b === void 0 ? void 0 : _b.blur();\n    }\n  }));\n\n  const renderCells = () => {\n    const cells = [];\n    const chars = value.split('');\n    const caretIndex = chars.length; // 光标位置index等于当前文字长度\n\n    const focusedIndex = bound(chars.length, 0, cellLength - 1);\n\n    for (let i = 0; i < cellLength; i++) {\n      cells.push(React.createElement(\"div\", {\n        className: classNames(`${classPrefix}-cell`, {\n          caret: props.caret && caretIndex === i && focused,\n          focused: focusedIndex === i && focused,\n          dot: !props.plain && chars[i]\n        }),\n        key: i\n      }, chars[i] && props.plain ? chars[i] : ''));\n    }\n\n    return cells;\n  };\n\n  const cls = classNames(classPrefix, {\n    focused: focused,\n    error: props.error,\n    seperated: props.seperated\n  });\n  return React.createElement(React.Fragment, null, withNativeProps(props, React.createElement(\"div\", {\n    ref: rootRef,\n    tabIndex: 0,\n    className: cls,\n    onFocus: onFocus,\n    onBlur: onBlur\n  }, React.createElement(\"div\", {\n    className: `${classPrefix}-cell-container`\n  }, renderCells()), React.createElement(\"input\", {\n    ref: nativeInputRef,\n    className: `${classPrefix}-native-input`,\n    value: value,\n    type: 'text',\n    pattern: '[0-9]*',\n    inputMode: 'numeric',\n    onChange: e => {\n      setValue(e.target.value.slice(0, props.length));\n    }\n  }))), props.keyboard && React.cloneElement(props.keyboard, {\n    visible: focused,\n    onInput: v => {\n      if (value.length < cellLength) {\n        setValue((value + v).slice(0, props.length));\n      }\n    },\n    onDelete: () => {\n      setValue(value.slice(0, -1));\n    },\n    onClose: () => {\n      var _a;\n\n      (_a = rootRef.current) === null || _a === void 0 ? void 0 : _a.blur();\n    }\n  }));\n});","map":{"version":3,"sources":["D:/react/project0330/node_modules/antd-mobile/es/components/passcode-input/passcode-input.js"],"names":["React","useState","useEffect","useRef","forwardRef","useImperativeHandle","mergeProps","withNativeProps","classNames","bound","usePropsValue","classPrefix","defaultProps","defaultValue","length","plain","error","seperated","caret","PasscodeInput","p","ref","props","cellLength","Infinity","Math","floor","focused","setFocused","value","setValue","rootRef","nativeInputRef","_a","onFill","call","onFocus","_b","keyboard","current","focus","timeout","window","setTimeout","scrollIntoView","block","inline","behavior","clearTimeout","onBlur","blur","renderCells","cells","chars","split","caretIndex","focusedIndex","i","push","createElement","className","dot","key","cls","Fragment","tabIndex","type","pattern","inputMode","onChange","e","target","slice","cloneElement","visible","onInput","v","onDelete","onClose"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef, forwardRef, useImperativeHandle } from 'react';\nimport { mergeProps } from '../../utils/with-default-props';\nimport { withNativeProps } from '../../utils/native-props';\nimport classNames from 'classnames';\nimport { bound } from '../../utils/bound';\nimport { usePropsValue } from '../../utils/use-props-value';\nconst classPrefix = 'adm-passcode-input';\nconst defaultProps = {\n  defaultValue: '',\n  length: 6,\n  plain: false,\n  error: false,\n  seperated: false,\n  caret: true\n};\nexport const PasscodeInput = forwardRef((p, ref) => {\n  const props = mergeProps(defaultProps, p); // 防止 length 值不合法\n\n  const cellLength = props.length > 0 && props.length < Infinity ? Math.floor(props.length) : defaultProps.length;\n  const [focused, setFocused] = useState(false);\n  const [value, setValue] = usePropsValue(props);\n  const rootRef = useRef(null);\n  const nativeInputRef = useRef(null);\n  useEffect(() => {\n    var _a;\n\n    if (value.length >= cellLength) {\n      (_a = props.onFill) === null || _a === void 0 ? void 0 : _a.call(props, value);\n    }\n  }, [value, cellLength]);\n\n  const onFocus = () => {\n    var _a, _b;\n\n    if (!props.keyboard) {\n      (_a = nativeInputRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n\n    setFocused(true);\n    (_b = props.onFocus) === null || _b === void 0 ? void 0 : _b.call(props);\n  };\n\n  useEffect(() => {\n    if (!focused) return;\n    const timeout = window.setTimeout(() => {\n      var _a;\n\n      (_a = rootRef.current) === null || _a === void 0 ? void 0 : _a.scrollIntoView({\n        block: 'center',\n        inline: 'center',\n        behavior: 'smooth'\n      });\n    }, 100);\n    return () => {\n      window.clearTimeout(timeout);\n    };\n  }, [focused]);\n\n  const onBlur = () => {\n    var _a;\n\n    setFocused(false);\n    (_a = props.onBlur) === null || _a === void 0 ? void 0 : _a.call(props);\n  };\n\n  useImperativeHandle(ref, () => ({\n    focus: () => {\n      var _a;\n\n      return (_a = rootRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n    },\n    blur: () => {\n      var _a, _b;\n\n      (_a = rootRef.current) === null || _a === void 0 ? void 0 : _a.blur();\n      (_b = nativeInputRef.current) === null || _b === void 0 ? void 0 : _b.blur();\n    }\n  }));\n\n  const renderCells = () => {\n    const cells = [];\n    const chars = value.split('');\n    const caretIndex = chars.length; // 光标位置index等于当前文字长度\n\n    const focusedIndex = bound(chars.length, 0, cellLength - 1);\n\n    for (let i = 0; i < cellLength; i++) {\n      cells.push(React.createElement(\"div\", {\n        className: classNames(`${classPrefix}-cell`, {\n          caret: props.caret && caretIndex === i && focused,\n          focused: focusedIndex === i && focused,\n          dot: !props.plain && chars[i]\n        }),\n        key: i\n      }, chars[i] && props.plain ? chars[i] : ''));\n    }\n\n    return cells;\n  };\n\n  const cls = classNames(classPrefix, {\n    focused: focused,\n    error: props.error,\n    seperated: props.seperated\n  });\n  return React.createElement(React.Fragment, null, withNativeProps(props, React.createElement(\"div\", {\n    ref: rootRef,\n    tabIndex: 0,\n    className: cls,\n    onFocus: onFocus,\n    onBlur: onBlur\n  }, React.createElement(\"div\", {\n    className: `${classPrefix}-cell-container`\n  }, renderCells()), React.createElement(\"input\", {\n    ref: nativeInputRef,\n    className: `${classPrefix}-native-input`,\n    value: value,\n    type: 'text',\n    pattern: '[0-9]*',\n    inputMode: 'numeric',\n    onChange: e => {\n      setValue(e.target.value.slice(0, props.length));\n    }\n  }))), props.keyboard && React.cloneElement(props.keyboard, {\n    visible: focused,\n    onInput: v => {\n      if (value.length < cellLength) {\n        setValue((value + v).slice(0, props.length));\n      }\n    },\n    onDelete: () => {\n      setValue(value.slice(0, -1));\n    },\n    onClose: () => {\n      var _a;\n\n      (_a = rootRef.current) === null || _a === void 0 ? void 0 : _a.blur();\n    }\n  }));\n});"]},"metadata":{},"sourceType":"module"}