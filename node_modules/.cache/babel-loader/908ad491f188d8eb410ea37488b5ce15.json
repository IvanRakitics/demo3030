{"ast":null,"code":"import { useMemo, useRef } from 'react';\n\nfunction useMemoizedFn(fn) {\n  if (process.env.NODE_ENV === 'development') {\n    if (typeof fn !== 'function') {\n      console.error(\"useMemoizedFn expected parameter is a function, got \" + typeof fn);\n    }\n  }\n\n  var fnRef = useRef(fn); // why not write `fnRef.current = fn`?\n  // https://github.com/alibaba/hooks/issues/728\n\n  fnRef.current = useMemo(function () {\n    return fn;\n  }, [fn]);\n  var memoizedFn = useRef();\n\n  if (!memoizedFn.current) {\n    memoizedFn.current = function () {\n      var args = [];\n\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n\n      return fnRef.current.apply(this, args);\n    };\n  }\n\n  return memoizedFn.current;\n}\n\nexport default useMemoizedFn;","map":{"version":3,"sources":["D:/react/project0330/node_modules/ahooks/es/useMemoizedFn/index.js"],"names":["useMemo","useRef","useMemoizedFn","fn","process","env","NODE_ENV","console","error","fnRef","current","memoizedFn","args","_i","arguments","length","apply"],"mappings":"AAAA,SAASA,OAAT,EAAkBC,MAAlB,QAAgC,OAAhC;;AAEA,SAASC,aAAT,CAAuBC,EAAvB,EAA2B;AACzB,MAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AAC1C,QAAI,OAAOH,EAAP,KAAc,UAAlB,EAA8B;AAC5BI,MAAAA,OAAO,CAACC,KAAR,CAAc,yDAAyD,OAAOL,EAA9E;AACD;AACF;;AAED,MAAIM,KAAK,GAAGR,MAAM,CAACE,EAAD,CAAlB,CAPyB,CAOD;AACxB;;AAEAM,EAAAA,KAAK,CAACC,OAAN,GAAgBV,OAAO,CAAC,YAAY;AAClC,WAAOG,EAAP;AACD,GAFsB,EAEpB,CAACA,EAAD,CAFoB,CAAvB;AAGA,MAAIQ,UAAU,GAAGV,MAAM,EAAvB;;AAEA,MAAI,CAACU,UAAU,CAACD,OAAhB,EAAyB;AACvBC,IAAAA,UAAU,CAACD,OAAX,GAAqB,YAAY;AAC/B,UAAIE,IAAI,GAAG,EAAX;;AAEA,WAAK,IAAIC,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAGC,SAAS,CAACC,MAAhC,EAAwCF,EAAE,EAA1C,EAA8C;AAC5CD,QAAAA,IAAI,CAACC,EAAD,CAAJ,GAAWC,SAAS,CAACD,EAAD,CAApB;AACD;;AAED,aAAOJ,KAAK,CAACC,OAAN,CAAcM,KAAd,CAAoB,IAApB,EAA0BJ,IAA1B,CAAP;AACD,KARD;AASD;;AAED,SAAOD,UAAU,CAACD,OAAlB;AACD;;AAED,eAAeR,aAAf","sourcesContent":["import { useMemo, useRef } from 'react';\n\nfunction useMemoizedFn(fn) {\n  if (process.env.NODE_ENV === 'development') {\n    if (typeof fn !== 'function') {\n      console.error(\"useMemoizedFn expected parameter is a function, got \" + typeof fn);\n    }\n  }\n\n  var fnRef = useRef(fn); // why not write `fnRef.current = fn`?\n  // https://github.com/alibaba/hooks/issues/728\n\n  fnRef.current = useMemo(function () {\n    return fn;\n  }, [fn]);\n  var memoizedFn = useRef();\n\n  if (!memoizedFn.current) {\n    memoizedFn.current = function () {\n      var args = [];\n\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n\n      return fnRef.current.apply(this, args);\n    };\n  }\n\n  return memoizedFn.current;\n}\n\nexport default useMemoizedFn;"]},"metadata":{},"sourceType":"module"}