{"ast":null,"code":"import React, { useState, useRef, memo } from 'react';\nimport classNames from 'classnames';\nimport { CloseOutline, SoundOutline } from 'antd-mobile-icons';\nimport { useTimeout } from 'ahooks';\nimport { mergeProps } from '../../utils/with-default-props';\nimport { withNativeProps } from '../../utils/native-props';\nimport { useResizeEffect } from '../../utils/use-resize-effect';\nimport { useMutationEffect } from '../../utils/use-mutation-effect';\nconst classPrefix = `adm-notice-bar`;\nconst defaultProps = {\n  color: 'default',\n  delay: 2000,\n  speed: 50,\n  icon: React.createElement(SoundOutline, null)\n};\nexport const NoticeBar = memo(p => {\n  const props = mergeProps(defaultProps, p);\n  const containerRef = useRef(null);\n  const textRef = useRef(null);\n  const [visible, setVisible] = useState(true);\n  const speed = props.speed;\n  const delayLockRef = useRef(true);\n  const animatingRef = useRef(false);\n\n  function start() {\n    if (delayLockRef.current) return;\n    const container = containerRef.current;\n    const text = textRef.current;\n    if (!container || !text) return;\n\n    if (container.offsetWidth >= text.offsetWidth) {\n      animatingRef.current = false;\n      text.style.removeProperty('transition-duration');\n      text.style.removeProperty('transform');\n      return;\n    }\n\n    if (animatingRef.current) return;\n    const initial = !text.style.transform;\n    text.style.transitionDuration = '0s';\n\n    if (initial) {\n      text.style.transform = 'translateX(0)';\n    } else {\n      text.style.transform = `translateX(${container.offsetWidth}px)`;\n    }\n\n    const distance = initial ? text.offsetWidth : container.offsetWidth + text.offsetWidth;\n    animatingRef.current = true;\n    text.style.transitionDuration = `${Math.round(distance / speed)}s`;\n    text.style.transform = `translateX(-${text.offsetWidth}px)`;\n  }\n\n  useTimeout(() => {\n    delayLockRef.current = false;\n    start();\n  }, props.delay);\n  useResizeEffect(() => {\n    start();\n  }, containerRef);\n  useMutationEffect(() => {\n    start();\n  }, textRef, {\n    subtree: true,\n    childList: true,\n    characterData: true\n  });\n  if (!visible) return null;\n  return withNativeProps(props, React.createElement(\"div\", {\n    className: classNames(classPrefix, `${classPrefix}-${props.color}`)\n  }, props.icon && React.createElement(\"span\", {\n    className: `${classPrefix}-left`\n  }, props.icon), React.createElement(\"span\", {\n    ref: containerRef,\n    className: `${classPrefix}-content`\n  }, React.createElement(\"span\", {\n    onTransitionEnd: () => {\n      animatingRef.current = false;\n      start();\n    },\n    ref: textRef,\n    className: `${classPrefix}-content-inner`\n  }, props.content)), (props.closeable || props.extra) && React.createElement(\"span\", {\n    className: `${classPrefix}-right`\n  }, props.extra, props.closeable && React.createElement(CloseOutline, {\n    className: `${classPrefix}-close-icon`,\n    onClick: () => {\n      var _a;\n\n      setVisible(false);\n      (_a = props.onClose) === null || _a === void 0 ? void 0 : _a.call(props);\n    }\n  }))));\n});","map":{"version":3,"sources":["D:/react/project0330/node_modules/antd-mobile/es/components/notice-bar/notice-bar.js"],"names":["React","useState","useRef","memo","classNames","CloseOutline","SoundOutline","useTimeout","mergeProps","withNativeProps","useResizeEffect","useMutationEffect","classPrefix","defaultProps","color","delay","speed","icon","createElement","NoticeBar","p","props","containerRef","textRef","visible","setVisible","delayLockRef","animatingRef","start","current","container","text","offsetWidth","style","removeProperty","initial","transform","transitionDuration","distance","Math","round","subtree","childList","characterData","className","ref","onTransitionEnd","content","closeable","extra","onClick","_a","onClose","call"],"mappings":"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","sourcesContent":["import React, { useState, useRef, memo } from 'react';\nimport classNames from 'classnames';\nimport { CloseOutline, SoundOutline } from 'antd-mobile-icons';\nimport { useTimeout } from 'ahooks';\nimport { mergeProps } from '../../utils/with-default-props';\nimport { withNativeProps } from '../../utils/native-props';\nimport { useResizeEffect } from '../../utils/use-resize-effect';\nimport { useMutationEffect } from '../../utils/use-mutation-effect';\nconst classPrefix = `adm-notice-bar`;\nconst defaultProps = {\n  color: 'default',\n  delay: 2000,\n  speed: 50,\n  icon: React.createElement(SoundOutline, null)\n};\nexport const NoticeBar = memo(p => {\n  const props = mergeProps(defaultProps, p);\n  const containerRef = useRef(null);\n  const textRef = useRef(null);\n  const [visible, setVisible] = useState(true);\n  const speed = props.speed;\n  const delayLockRef = useRef(true);\n  const animatingRef = useRef(false);\n\n  function start() {\n    if (delayLockRef.current) return;\n    const container = containerRef.current;\n    const text = textRef.current;\n    if (!container || !text) return;\n\n    if (container.offsetWidth >= text.offsetWidth) {\n      animatingRef.current = false;\n      text.style.removeProperty('transition-duration');\n      text.style.removeProperty('transform');\n      return;\n    }\n\n    if (animatingRef.current) return;\n    const initial = !text.style.transform;\n    text.style.transitionDuration = '0s';\n\n    if (initial) {\n      text.style.transform = 'translateX(0)';\n    } else {\n      text.style.transform = `translateX(${container.offsetWidth}px)`;\n    }\n\n    const distance = initial ? text.offsetWidth : container.offsetWidth + text.offsetWidth;\n    animatingRef.current = true;\n    text.style.transitionDuration = `${Math.round(distance / speed)}s`;\n    text.style.transform = `translateX(-${text.offsetWidth}px)`;\n  }\n\n  useTimeout(() => {\n    delayLockRef.current = false;\n    start();\n  }, props.delay);\n  useResizeEffect(() => {\n    start();\n  }, containerRef);\n  useMutationEffect(() => {\n    start();\n  }, textRef, {\n    subtree: true,\n    childList: true,\n    characterData: true\n  });\n  if (!visible) return null;\n  return withNativeProps(props, React.createElement(\"div\", {\n    className: classNames(classPrefix, `${classPrefix}-${props.color}`)\n  }, props.icon && React.createElement(\"span\", {\n    className: `${classPrefix}-left`\n  }, props.icon), React.createElement(\"span\", {\n    ref: containerRef,\n    className: `${classPrefix}-content`\n  }, React.createElement(\"span\", {\n    onTransitionEnd: () => {\n      animatingRef.current = false;\n      start();\n    },\n    ref: textRef,\n    className: `${classPrefix}-content-inner`\n  }, props.content)), (props.closeable || props.extra) && React.createElement(\"span\", {\n    className: `${classPrefix}-right`\n  }, props.extra, props.closeable && React.createElement(CloseOutline, {\n    className: `${classPrefix}-close-icon`,\n    onClick: () => {\n      var _a;\n\n      setVisible(false);\n      (_a = props.onClose) === null || _a === void 0 ? void 0 : _a.call(props);\n    }\n  }))));\n});"]},"metadata":{},"sourceType":"module"}