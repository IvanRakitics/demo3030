{"ast":null,"code":"import _slicedToArray from \"D:\\\\react\\\\project0330\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport Popup from '../popup';\nimport { mergeProps } from '../../utils/with-default-props';\nimport { withNativeProps } from '../../utils/native-props';\nimport { usePropsValue } from '../../utils/use-props-value';\nimport CascaderView from '../cascader-view';\nimport { useConfig } from '../config-provider';\nimport { useCascaderValueExtend } from '../cascader-view/use-cascader-value-extend';\nvar classPrefix = \"adm-cascader\";\nvar defaultProps = {\n  defaultValue: []\n};\nexport var Cascader = function Cascader(p) {\n  var _a;\n\n  var _useConfig = useConfig(),\n      locale = _useConfig.locale;\n\n  var props = mergeProps(defaultProps, {\n    confirmText: locale.common.confirm,\n    cancelText: locale.common.cancel,\n    placeholder: locale.Cascader.placeholder\n  }, p);\n\n  var _usePropsValue = usePropsValue(Object.assign(Object.assign({}, props), {\n    onChange: function onChange(val) {\n      var _a;\n\n      (_a = props.onConfirm) === null || _a === void 0 ? void 0 : _a.call(props, val, generateValueExtend(val));\n    }\n  })),\n      _usePropsValue2 = _slicedToArray(_usePropsValue, 2),\n      value = _usePropsValue2[0],\n      setValue = _usePropsValue2[1];\n\n  var generateValueExtend = useCascaderValueExtend(props.options);\n\n  var _useState = useState(value),\n      _useState2 = _slicedToArray(_useState, 2),\n      innerValue = _useState2[0],\n      setInnerValue = _useState2[1];\n\n  useEffect(function () {\n    if (!props.visible) {\n      setInnerValue(value);\n    }\n  }, [props.visible]);\n  useEffect(function () {\n    if (!props.visible) {\n      setInnerValue(value);\n    }\n  }, [value]);\n  var cascaderElement = withNativeProps(props, React.createElement(\"div\", {\n    className: classPrefix\n  }, React.createElement(\"div\", {\n    className: \"\".concat(classPrefix, \"-header\")\n  }, React.createElement(\"a\", {\n    className: \"\".concat(classPrefix, \"-header-button\"),\n    onClick: function onClick() {\n      var _a, _b;\n\n      (_a = props.onCancel) === null || _a === void 0 ? void 0 : _a.call(props);\n      (_b = props.onClose) === null || _b === void 0 ? void 0 : _b.call(props);\n    }\n  }, props.cancelText), React.createElement(\"div\", {\n    className: \"\".concat(classPrefix, \"-header-title\")\n  }, props.title), React.createElement(\"a\", {\n    className: \"\".concat(classPrefix, \"-header-button\"),\n    onClick: function onClick() {\n      var _a;\n\n      setValue(innerValue);\n      (_a = props.onClose) === null || _a === void 0 ? void 0 : _a.call(props);\n    }\n  }, props.confirmText)), React.createElement(\"div\", {\n    className: \"\".concat(classPrefix, \"-body\")\n  }, React.createElement(CascaderView, Object.assign({}, props, {\n    value: innerValue,\n    onChange: function onChange(val, ext) {\n      var _a;\n\n      setInnerValue(val);\n\n      if (props.visible) {\n        (_a = props.onSelect) === null || _a === void 0 ? void 0 : _a.call(props, val, ext);\n      }\n    }\n  })))));\n  var popupElement = React.createElement(Popup, {\n    visible: props.visible,\n    position: 'bottom',\n    onMaskClick: function onMaskClick() {\n      var _a, _b;\n\n      (_a = props.onCancel) === null || _a === void 0 ? void 0 : _a.call(props);\n      (_b = props.onClose) === null || _b === void 0 ? void 0 : _b.call(props);\n    },\n    getContainer: props.getContainer,\n    destroyOnClose: true,\n    afterShow: props.afterShow,\n    afterClose: props.afterClose,\n    onClick: props.onClick,\n    stopPropagation: props.stopPropagation\n  }, cascaderElement);\n  return React.createElement(React.Fragment, null, popupElement, (_a = props.children) === null || _a === void 0 ? void 0 : _a.call(props, generateValueExtend(value).items));\n};","map":null,"metadata":{},"sourceType":"module"}