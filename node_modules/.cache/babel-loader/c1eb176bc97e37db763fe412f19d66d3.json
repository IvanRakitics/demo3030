{"ast":null,"code":"import _toConsumableArray from \"D:\\\\react\\\\project0330\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"D:\\\\react\\\\project0330\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport React, { memo, useCallback, useEffect, useState } from 'react';\nimport { mergeProps } from '../../utils/with-default-props';\nimport { Wheel } from './wheel';\nimport { useColumnsExtend } from './columns-extend';\nimport { withNativeProps } from '../../utils/native-props';\nimport { useDebounceEffect } from 'ahooks';\nimport { defaultRenderLabel } from '../picker/picker-utils';\nvar classPrefix = \"adm-picker-view\";\nvar defaultProps = {\n  defaultValue: [],\n  renderLabel: defaultRenderLabel\n};\nexport var PickerView = memo(function (p) {\n  var props = mergeProps(defaultProps, p);\n\n  var _useState = useState(props.value === undefined ? props.defaultValue : props.value),\n      _useState2 = _slicedToArray(_useState, 2),\n      innerValue = _useState2[0],\n      setInnerValue = _useState2[1]; // Sync `value` to `innerValue`\n\n\n  useEffect(function () {\n    if (props.value === undefined) return; // Uncontrolled mode\n\n    if (props.value === innerValue) return;\n    setInnerValue(props.value);\n  }, [props.value]);\n  useEffect(function () {\n    if (props.value === innerValue) return;\n    var timeout = window.setTimeout(function () {\n      if (props.value !== undefined && props.value !== innerValue) {\n        setInnerValue(props.value);\n      }\n    }, 1000);\n    return function () {\n      window.clearTimeout(timeout);\n    };\n  }, [props.value, innerValue]);\n  var extend = useColumnsExtend(props.columns, innerValue);\n  var columns = extend.columns;\n  useDebounceEffect(function () {\n    var _a;\n\n    if (props.value === innerValue) return;\n    (_a = props.onChange) === null || _a === void 0 ? void 0 : _a.call(props, innerValue, extend);\n  }, [innerValue], {\n    wait: 0,\n    leading: false,\n    trailing: true\n  });\n  var handleSelect = useCallback(function (val, index) {\n    setInnerValue(function (prev) {\n      var next = _toConsumableArray(prev);\n\n      next[index] = val;\n      return next;\n    });\n  }, []);\n  return withNativeProps(props, React.createElement(\"div\", {\n    className: \"\".concat(classPrefix)\n  }, columns.map(function (column, index) {\n    return React.createElement(Wheel, {\n      key: index,\n      index: index,\n      column: column,\n      value: innerValue[index],\n      onSelect: handleSelect,\n      renderLabel: props.renderLabel\n    });\n  }), React.createElement(\"div\", {\n    className: \"\".concat(classPrefix, \"-mask\")\n  }, React.createElement(\"div\", {\n    className: \"\".concat(classPrefix, \"-mask-top\")\n  }), React.createElement(\"div\", {\n    className: \"\".concat(classPrefix, \"-mask-middle\")\n  }), React.createElement(\"div\", {\n    className: \"\".concat(classPrefix, \"-mask-bottom\")\n  }))));\n});\nPickerView.displayName = 'PickerView';","map":null,"metadata":{},"sourceType":"module"}