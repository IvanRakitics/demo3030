{"ast":null,"code":"import _defineProperty from \"D:\\\\react\\\\project0330\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"D:\\\\react\\\\project0330\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _slicedToArray from \"D:\\\\react\\\\project0330\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport { __awaiter } from \"tslib\";\nimport classNames from 'classnames';\nimport React, { useState } from 'react';\nimport { withNativeProps } from '../../utils/native-props';\nimport { usePropsValue } from '../../utils/use-props-value';\nimport { mergeProps } from '../../utils/with-default-props';\nimport { SpinIcon } from './spin-icon';\nvar classPrefix = \"adm-switch\";\nvar defaultProps = {\n  defaultChecked: false\n};\nexport var Switch = function Switch(p) {\n  var _classNames;\n\n  var props = mergeProps(defaultProps, p);\n  var disabled = props.disabled || props.loading || false;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      changing = _useState2[0],\n      setChanging = _useState2[1];\n\n  var _usePropsValue = usePropsValue({\n    value: props.checked,\n    defaultValue: props.defaultChecked,\n    onChange: props.onChange\n  }),\n      _usePropsValue2 = _slicedToArray(_usePropsValue, 2),\n      checked = _usePropsValue2[0],\n      setChecked = _usePropsValue2[1];\n\n  function onClick() {\n    return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var nextChecked;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(disabled || props.loading || changing)) {\n                _context.next = 2;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 2:\n              nextChecked = !checked;\n\n              if (!props.beforeChange) {\n                _context.next = 18;\n                break;\n              }\n\n              setChanging(true);\n              _context.prev = 5;\n              _context.next = 8;\n              return props.beforeChange(nextChecked);\n\n            case 8:\n              setChecked(nextChecked);\n              setChanging(false);\n              _context.next = 16;\n              break;\n\n            case 12:\n              _context.prev = 12;\n              _context.t0 = _context[\"catch\"](5);\n              setChanging(false);\n              throw _context.t0;\n\n            case 16:\n              _context.next = 19;\n              break;\n\n            case 18:\n              setChecked(nextChecked);\n\n            case 19:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[5, 12]]);\n    }));\n  }\n\n  return withNativeProps(props, React.createElement(\"div\", {\n    onClick: onClick,\n    className: classNames(classPrefix, (_classNames = {}, _defineProperty(_classNames, \"\".concat(classPrefix, \"-checked\"), checked), _defineProperty(_classNames, \"\".concat(classPrefix, \"-disabled\"), disabled || changing), _classNames))\n  }, React.createElement(\"div\", {\n    className: \"\".concat(classPrefix, \"-checkbox\")\n  }, React.createElement(\"div\", {\n    className: \"\".concat(classPrefix, \"-handle\")\n  }, (props.loading || changing) && React.createElement(SpinIcon, {\n    className: \"\".concat(classPrefix, \"-spin-icon\")\n  })), React.createElement(\"div\", {\n    className: \"\".concat(classPrefix, \"-inner\")\n  }, checked ? props.checkedText : props.uncheckedText))));\n};","map":null,"metadata":{},"sourceType":"module"}