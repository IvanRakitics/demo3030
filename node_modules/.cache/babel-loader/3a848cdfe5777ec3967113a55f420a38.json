{"ast":null,"code":"import _defineProperty from \"D:\\\\react\\\\project0330\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"D:\\\\react\\\\project0330\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"D:\\\\react\\\\project0330\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport React, { useRef } from 'react';\nimport { withNativeProps } from '../../utils/native-props';\nimport List from '../list';\nimport { DownOutline } from 'antd-mobile-icons';\nimport classNames from 'classnames';\nimport { useSpring, animated } from '@react-spring/web';\nimport { usePropsValue } from '../../utils/use-props-value';\nimport { useMount } from 'ahooks';\nimport { useShouldRender } from '../../utils/should-render';\nimport { useIsomorphicUpdateLayoutEffect } from '../../utils/use-isomorphic-update-layout-effect';\nvar classPrefix = \"adm-collapse\";\nexport var CollapsePanel = function CollapsePanel() {\n  return null;\n};\n\nvar CollapsePanelContent = function CollapsePanelContent(props) {\n  var visible = props.visible;\n  var innerRef = useRef(null);\n  var shouldRender = useShouldRender(visible, props.forceRender, props.destroyOnClose);\n\n  var _useSpring = useSpring(function () {\n    return {\n      from: {\n        height: 0\n      },\n      config: {\n        precision: 0.01,\n        mass: 1,\n        tension: 200,\n        friction: 25,\n        clamp: true\n      }\n    };\n  }),\n      _useSpring2 = _slicedToArray(_useSpring, 2),\n      height = _useSpring2[0].height,\n      api = _useSpring2[1];\n\n  useMount(function () {\n    if (!visible) return;\n    var inner = innerRef.current;\n    if (!inner) return;\n    api.start({\n      height: inner.offsetHeight,\n      immediate: true\n    });\n  });\n  useIsomorphicUpdateLayoutEffect(function () {\n    var inner = innerRef.current;\n    if (!inner) return;\n\n    if (visible) {\n      api.start({\n        height: inner.offsetHeight\n      });\n    } else {\n      api.start({\n        height: inner.offsetHeight,\n        immediate: true\n      });\n      api.start({\n        height: 0\n      });\n    }\n  }, [visible]);\n  return React.createElement(animated.div, {\n    className: \"\".concat(classPrefix, \"-panel-content\"),\n    style: {\n      height: height.to(function (v) {\n        if (height.idle && visible) {\n          return 'auto';\n        } else {\n          return v;\n        }\n      })\n    }\n  }, React.createElement(\"div\", {\n    className: \"\".concat(classPrefix, \"-panel-content-inner\"),\n    ref: innerRef\n  }, React.createElement(List.Item, null, shouldRender && props.children)));\n};\n\nexport var Collapse = function Collapse(props) {\n  var _a;\n\n  var panels = [];\n  React.Children.forEach(props.children, function (child) {\n    if (!React.isValidElement(child)) return;\n    var key = child.key;\n    if (typeof key !== 'string') return;\n    panels.push(child);\n  });\n\n  var _usePropsValue = usePropsValue(props.accordion ? {\n    value: props.activeKey === undefined ? undefined : props.activeKey === null ? [] : [props.activeKey],\n    defaultValue: props.defaultActiveKey === undefined || props.defaultActiveKey === null ? [] : [props.defaultActiveKey],\n    onChange: function onChange(v) {\n      var _a, _b;\n\n      (_a = props.onChange) === null || _a === void 0 ? void 0 : _a.call(props, (_b = v[0]) !== null && _b !== void 0 ? _b : null);\n    }\n  } : {\n    value: props.activeKey,\n    defaultValue: (_a = props.defaultActiveKey) !== null && _a !== void 0 ? _a : [],\n    onChange: props.onChange\n  }),\n      _usePropsValue2 = _slicedToArray(_usePropsValue, 2),\n      activeKey = _usePropsValue2[0],\n      setActiveKey = _usePropsValue2[1];\n\n  var activeKeyList = activeKey === null ? [] : Array.isArray(activeKey) ? activeKey : [activeKey];\n  return withNativeProps(props, React.createElement(\"div\", {\n    className: classPrefix\n  }, React.createElement(List, null, panels.map(function (panel) {\n    var key = panel.key;\n    var active = activeKeyList.includes(key);\n\n    function handleClick(event) {\n      var _a, _b;\n\n      if (props.accordion) {\n        if (active) {\n          setActiveKey([]);\n        } else {\n          setActiveKey([key]);\n        }\n      } else {\n        if (active) {\n          setActiveKey(activeKeyList.filter(function (v) {\n            return v !== key;\n          }));\n        } else {\n          setActiveKey([].concat(_toConsumableArray(activeKeyList), [key]));\n        }\n      }\n\n      (_b = (_a = panel.props).onClick) === null || _b === void 0 ? void 0 : _b.call(_a, event);\n    }\n\n    var renderArrow = function renderArrow() {\n      var arrow = React.createElement(DownOutline, null);\n\n      if (props.arrow !== undefined) {\n        arrow = props.arrow;\n      }\n\n      if (panel.props.arrow !== undefined) {\n        arrow = panel.props.arrow;\n      }\n\n      return typeof arrow === 'function' ? arrow(active) : React.createElement(\"div\", {\n        className: classNames(\"\".concat(classPrefix, \"-arrow\"), _defineProperty({}, \"\".concat(classPrefix, \"-arrow-active\"), active))\n      }, arrow);\n    };\n\n    return React.createElement(React.Fragment, {\n      key: key\n    }, withNativeProps(panel.props, React.createElement(List.Item, {\n      className: \"\".concat(classPrefix, \"-panel-header\"),\n      onClick: handleClick,\n      disabled: panel.props.disabled,\n      arrow: renderArrow()\n    }, panel.props.title)), React.createElement(CollapsePanelContent, {\n      visible: active,\n      forceRender: !!panel.props.forceRender,\n      destroyOnClose: !!panel.props.destroyOnClose\n    }, panel.props.children));\n  }))));\n};","map":null,"metadata":{},"sourceType":"module"}