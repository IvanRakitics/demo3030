{"ast":null,"code":"import React, { useRef } from 'react';\nimport { useSpring, animated, to } from '@react-spring/web';\nimport { useDrag } from '@use-gesture/react';\nimport { mergeProps } from '../../utils/with-default-props';\nimport { withNativeProps } from '../../utils/native-props';\nconst classPrefix = `adm-floating-bubble`;\nconst defaultProps = {\n  axis: 'y'\n};\nexport const FloatingBubble = p => {\n  const props = mergeProps(defaultProps, p);\n  const boundaryRef = useRef(null);\n  const buttonRef = useRef(null);\n  /**\n   * memoize the `to` function\n   * inside a component that renders frequently\n   * to prevent an unintended restart\n   */\n\n  const [{\n    x,\n    y,\n    opacity\n  }, api] = useSpring(() => ({\n    x: 0,\n    y: 0,\n    opacity: 1\n  }));\n  const bind = useDrag(state => {\n    let nextX = state.offset[0];\n    let nextY = state.offset[1];\n\n    if (state.last && props.magnetic) {\n      const boundary = boundaryRef.current;\n      const button = buttonRef.current;\n      if (!boundary || !button) return;\n      const boundaryRect = boundary.getBoundingClientRect();\n      const buttonRect = button.getBoundingClientRect();\n\n      if (props.magnetic === 'x') {\n        const compensation = x.goal - x.get();\n        const leftDistance = buttonRect.left + compensation - boundaryRect.left;\n        const rightDistance = boundaryRect.right - (buttonRect.right + compensation);\n\n        if (rightDistance <= leftDistance) {\n          nextX += rightDistance;\n        } else {\n          nextX -= leftDistance;\n        }\n      } else if (props.magnetic === 'y') {\n        const compensation = y.goal - y.get();\n        const topDistance = buttonRect.top + compensation - boundaryRect.top;\n        const bottomDistance = boundaryRect.bottom - (buttonRect.bottom + compensation);\n\n        if (bottomDistance <= topDistance) {\n          nextY += bottomDistance;\n        } else {\n          nextY -= topDistance;\n        }\n      }\n    }\n\n    api.start({\n      x: nextX,\n      y: nextY\n    }); // active status\n\n    api.start({\n      opacity: state.active ? 0.8 : 1\n    });\n  }, {\n    axis: props.axis === 'xy' ? undefined : props.axis,\n    pointer: {\n      touch: true\n    },\n    // the component won't trigger drag logic if the user just clicked on the component.\n    filterTaps: true,\n    // set constraints to the user gesture\n    bounds: boundaryRef,\n    from: () => [x.get(), y.get()]\n  });\n  return withNativeProps(props, React.createElement(\"div\", {\n    className: classPrefix\n  }, React.createElement(\"div\", {\n    className: `${classPrefix}-boundary-outer`\n  }, React.createElement(\"div\", {\n    className: `${classPrefix}-boundary`,\n    ref: boundaryRef\n  })), React.createElement(animated.div, Object.assign({}, bind(), {\n    style: {\n      opacity,\n      transform: to([x, y], (x, y) => `translate(${x}px, ${y}px)`)\n    },\n    onClick: props.onClick,\n    className: `${classPrefix}-button`,\n    ref: buttonRef\n  }), props.children)));\n};","map":{"version":3,"sources":["D:/react/project0330/node_modules/antd-mobile/es/components/floating-bubble/floating-bubble.js"],"names":["React","useRef","useSpring","animated","to","useDrag","mergeProps","withNativeProps","classPrefix","defaultProps","axis","FloatingBubble","p","props","boundaryRef","buttonRef","x","y","opacity","api","bind","state","nextX","offset","nextY","last","magnetic","boundary","current","button","boundaryRect","getBoundingClientRect","buttonRect","compensation","goal","get","leftDistance","left","rightDistance","right","topDistance","top","bottomDistance","bottom","start","active","undefined","pointer","touch","filterTaps","bounds","from","createElement","className","ref","div","Object","assign","style","transform","onClick","children"],"mappings":"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","sourcesContent":["import React, { useRef } from 'react';\nimport { useSpring, animated, to } from '@react-spring/web';\nimport { useDrag } from '@use-gesture/react';\nimport { mergeProps } from '../../utils/with-default-props';\nimport { withNativeProps } from '../../utils/native-props';\nconst classPrefix = `adm-floating-bubble`;\nconst defaultProps = {\n  axis: 'y'\n};\nexport const FloatingBubble = p => {\n  const props = mergeProps(defaultProps, p);\n  const boundaryRef = useRef(null);\n  const buttonRef = useRef(null);\n  /**\n   * memoize the `to` function\n   * inside a component that renders frequently\n   * to prevent an unintended restart\n   */\n\n  const [{\n    x,\n    y,\n    opacity\n  }, api] = useSpring(() => ({\n    x: 0,\n    y: 0,\n    opacity: 1\n  }));\n  const bind = useDrag(state => {\n    let nextX = state.offset[0];\n    let nextY = state.offset[1];\n\n    if (state.last && props.magnetic) {\n      const boundary = boundaryRef.current;\n      const button = buttonRef.current;\n      if (!boundary || !button) return;\n      const boundaryRect = boundary.getBoundingClientRect();\n      const buttonRect = button.getBoundingClientRect();\n\n      if (props.magnetic === 'x') {\n        const compensation = x.goal - x.get();\n        const leftDistance = buttonRect.left + compensation - boundaryRect.left;\n        const rightDistance = boundaryRect.right - (buttonRect.right + compensation);\n\n        if (rightDistance <= leftDistance) {\n          nextX += rightDistance;\n        } else {\n          nextX -= leftDistance;\n        }\n      } else if (props.magnetic === 'y') {\n        const compensation = y.goal - y.get();\n        const topDistance = buttonRect.top + compensation - boundaryRect.top;\n        const bottomDistance = boundaryRect.bottom - (buttonRect.bottom + compensation);\n\n        if (bottomDistance <= topDistance) {\n          nextY += bottomDistance;\n        } else {\n          nextY -= topDistance;\n        }\n      }\n    }\n\n    api.start({\n      x: nextX,\n      y: nextY\n    }); // active status\n\n    api.start({\n      opacity: state.active ? 0.8 : 1\n    });\n  }, {\n    axis: props.axis === 'xy' ? undefined : props.axis,\n    pointer: {\n      touch: true\n    },\n    // the component won't trigger drag logic if the user just clicked on the component.\n    filterTaps: true,\n    // set constraints to the user gesture\n    bounds: boundaryRef,\n    from: () => [x.get(), y.get()]\n  });\n  return withNativeProps(props, React.createElement(\"div\", {\n    className: classPrefix\n  }, React.createElement(\"div\", {\n    className: `${classPrefix}-boundary-outer`\n  }, React.createElement(\"div\", {\n    className: `${classPrefix}-boundary`,\n    ref: boundaryRef\n  })), React.createElement(animated.div, Object.assign({}, bind(), {\n    style: {\n      opacity,\n      transform: to([x, y], (x, y) => `translate(${x}px, ${y}px)`)\n    },\n    onClick: props.onClick,\n    className: `${classPrefix}-button`,\n    ref: buttonRef\n  }), props.children)));\n};"]},"metadata":{},"sourceType":"module"}