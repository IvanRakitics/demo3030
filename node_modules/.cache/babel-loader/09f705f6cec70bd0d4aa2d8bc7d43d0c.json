{"ast":null,"code":"import { useRef } from 'react';\n\nvar useLoadingDelayPlugin = function useLoadingDelayPlugin(fetchInstance, _a) {\n  var loadingDelay = _a.loadingDelay;\n  var timerRef = useRef();\n\n  if (!loadingDelay) {\n    return {};\n  }\n\n  var cancelTimeout = function cancelTimeout() {\n    if (timerRef.current) {\n      clearTimeout(timerRef.current);\n    }\n  };\n\n  return {\n    onBefore: function onBefore() {\n      cancelTimeout();\n      timerRef.current = setTimeout(function () {\n        fetchInstance.setState({\n          loading: true\n        });\n      }, loadingDelay);\n      return {\n        loading: false\n      };\n    },\n    onFinally: function onFinally() {\n      cancelTimeout();\n    },\n    onCancel: function onCancel() {\n      cancelTimeout();\n    }\n  };\n};\n\nexport default useLoadingDelayPlugin;","map":{"version":3,"sources":["D:/react/project0330/node_modules/ahooks/es/useRequest/src/plugins/useLoadingDelayPlugin.js"],"names":["useRef","useLoadingDelayPlugin","fetchInstance","_a","loadingDelay","timerRef","cancelTimeout","current","clearTimeout","onBefore","setTimeout","setState","loading","onFinally","onCancel"],"mappings":"AAAA,SAASA,MAAT,QAAuB,OAAvB;;AAEA,IAAIC,qBAAqB,GAAG,SAASA,qBAAT,CAA+BC,aAA/B,EAA8CC,EAA9C,EAAkD;AAC5E,MAAIC,YAAY,GAAGD,EAAE,CAACC,YAAtB;AACA,MAAIC,QAAQ,GAAGL,MAAM,EAArB;;AAEA,MAAI,CAACI,YAAL,EAAmB;AACjB,WAAO,EAAP;AACD;;AAED,MAAIE,aAAa,GAAG,SAASA,aAAT,GAAyB;AAC3C,QAAID,QAAQ,CAACE,OAAb,EAAsB;AACpBC,MAAAA,YAAY,CAACH,QAAQ,CAACE,OAAV,CAAZ;AACD;AACF,GAJD;;AAMA,SAAO;AACLE,IAAAA,QAAQ,EAAE,SAASA,QAAT,GAAoB;AAC5BH,MAAAA,aAAa;AACbD,MAAAA,QAAQ,CAACE,OAAT,GAAmBG,UAAU,CAAC,YAAY;AACxCR,QAAAA,aAAa,CAACS,QAAd,CAAuB;AACrBC,UAAAA,OAAO,EAAE;AADY,SAAvB;AAGD,OAJ4B,EAI1BR,YAJ0B,CAA7B;AAKA,aAAO;AACLQ,QAAAA,OAAO,EAAE;AADJ,OAAP;AAGD,KAXI;AAYLC,IAAAA,SAAS,EAAE,SAASA,SAAT,GAAqB;AAC9BP,MAAAA,aAAa;AACd,KAdI;AAeLQ,IAAAA,QAAQ,EAAE,SAASA,QAAT,GAAoB;AAC5BR,MAAAA,aAAa;AACd;AAjBI,GAAP;AAmBD,CAjCD;;AAmCA,eAAeL,qBAAf","sourcesContent":["import { useRef } from 'react';\n\nvar useLoadingDelayPlugin = function useLoadingDelayPlugin(fetchInstance, _a) {\n  var loadingDelay = _a.loadingDelay;\n  var timerRef = useRef();\n\n  if (!loadingDelay) {\n    return {};\n  }\n\n  var cancelTimeout = function cancelTimeout() {\n    if (timerRef.current) {\n      clearTimeout(timerRef.current);\n    }\n  };\n\n  return {\n    onBefore: function onBefore() {\n      cancelTimeout();\n      timerRef.current = setTimeout(function () {\n        fetchInstance.setState({\n          loading: true\n        });\n      }, loadingDelay);\n      return {\n        loading: false\n      };\n    },\n    onFinally: function onFinally() {\n      cancelTimeout();\n    },\n    onCancel: function onCancel() {\n      cancelTimeout();\n    }\n  };\n};\n\nexport default useLoadingDelayPlugin;"]},"metadata":{},"sourceType":"module"}