{"ast":null,"code":"import { __rest } from \"tslib\";\nimport React, { forwardRef, useMemo } from 'react';\nimport classNames from 'classnames';\nimport List from '../list';\nimport RcForm from 'rc-field-form';\nimport { defaultFormContext, FormContext } from './context';\nimport { mergeProps } from '../../utils/with-default-props';\nimport { Header } from './header';\nimport { useConfig } from '../config-provider';\nimport merge from 'lodash/merge';\nimport { FormArray } from './form-array';\nconst classPrefix = 'adm-form';\nconst defaultProps = defaultFormContext;\nexport const Form = forwardRef((p, ref) => {\n  const props = mergeProps(defaultProps, p);\n\n  const {\n    className,\n    style,\n    hasFeedback,\n    children,\n    layout,\n    footer,\n    mode,\n    requiredMarkStyle\n  } = props,\n        formProps = __rest(props, [\"className\", \"style\", \"hasFeedback\", \"children\", \"layout\", \"footer\", \"mode\", \"requiredMarkStyle\"]);\n\n  const {\n    locale\n  } = useConfig();\n  const validateMessages = useMemo(() => merge({}, locale.Form.defaultValidateMessages, formProps.validateMessages), [locale.Form.defaultValidateMessages, formProps.validateMessages]);\n  const lists = [];\n  let currentHeader = null;\n  let items = [];\n  let count = 0;\n\n  function collect() {\n    if (items.length === 0) return;\n    count += 1;\n    lists.push(React.createElement(List, {\n      header: currentHeader,\n      key: count,\n      mode: mode\n    }, items));\n    items = [];\n  }\n\n  React.Children.forEach(props.children, child => {\n    if (React.isValidElement(child)) {\n      if (child.type === Header) {\n        collect();\n        currentHeader = child.props.children;\n        return;\n      }\n\n      if (child.type === FormArray) {\n        collect();\n        lists.push(child);\n        return;\n      }\n    }\n\n    items.push(child);\n  });\n  collect();\n  return React.createElement(RcForm, Object.assign({\n    className: classNames(classPrefix, className),\n    style: style,\n    ref: ref\n  }, formProps, {\n    validateMessages: validateMessages\n  }), React.createElement(FormContext.Provider, {\n    value: {\n      name: formProps.name,\n      hasFeedback,\n      layout,\n      requiredMarkStyle\n    }\n  }, lists), footer && React.createElement(\"div\", {\n    className: `${classPrefix}-footer`\n  }, footer));\n});","map":{"version":3,"sources":["D:/react/project0330/node_modules/antd-mobile/es/components/form/form.js"],"names":["__rest","React","forwardRef","useMemo","classNames","List","RcForm","defaultFormContext","FormContext","mergeProps","Header","useConfig","merge","FormArray","classPrefix","defaultProps","Form","p","ref","props","className","style","hasFeedback","children","layout","footer","mode","requiredMarkStyle","formProps","locale","validateMessages","defaultValidateMessages","lists","currentHeader","items","count","collect","length","push","createElement","header","key","Children","forEach","child","isValidElement","type","Object","assign","Provider","value","name"],"mappings":"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","sourcesContent":["import { __rest } from \"tslib\";\nimport React, { forwardRef, useMemo } from 'react';\nimport classNames from 'classnames';\nimport List from '../list';\nimport RcForm from 'rc-field-form';\nimport { defaultFormContext, FormContext } from './context';\nimport { mergeProps } from '../../utils/with-default-props';\nimport { Header } from './header';\nimport { useConfig } from '../config-provider';\nimport merge from 'lodash/merge';\nimport { FormArray } from './form-array';\nconst classPrefix = 'adm-form';\nconst defaultProps = defaultFormContext;\nexport const Form = forwardRef((p, ref) => {\n  const props = mergeProps(defaultProps, p);\n\n  const {\n    className,\n    style,\n    hasFeedback,\n    children,\n    layout,\n    footer,\n    mode,\n    requiredMarkStyle\n  } = props,\n        formProps = __rest(props, [\"className\", \"style\", \"hasFeedback\", \"children\", \"layout\", \"footer\", \"mode\", \"requiredMarkStyle\"]);\n\n  const {\n    locale\n  } = useConfig();\n  const validateMessages = useMemo(() => merge({}, locale.Form.defaultValidateMessages, formProps.validateMessages), [locale.Form.defaultValidateMessages, formProps.validateMessages]);\n  const lists = [];\n  let currentHeader = null;\n  let items = [];\n  let count = 0;\n\n  function collect() {\n    if (items.length === 0) return;\n    count += 1;\n    lists.push(React.createElement(List, {\n      header: currentHeader,\n      key: count,\n      mode: mode\n    }, items));\n    items = [];\n  }\n\n  React.Children.forEach(props.children, child => {\n    if (React.isValidElement(child)) {\n      if (child.type === Header) {\n        collect();\n        currentHeader = child.props.children;\n        return;\n      }\n\n      if (child.type === FormArray) {\n        collect();\n        lists.push(child);\n        return;\n      }\n    }\n\n    items.push(child);\n  });\n  collect();\n  return React.createElement(RcForm, Object.assign({\n    className: classNames(classPrefix, className),\n    style: style,\n    ref: ref\n  }, formProps, {\n    validateMessages: validateMessages\n  }), React.createElement(FormContext.Provider, {\n    value: {\n      name: formProps.name,\n      hasFeedback,\n      layout,\n      requiredMarkStyle\n    }\n  }, lists), footer && React.createElement(\"div\", {\n    className: `${classPrefix}-footer`\n  }, footer));\n});"]},"metadata":{},"sourceType":"module"}