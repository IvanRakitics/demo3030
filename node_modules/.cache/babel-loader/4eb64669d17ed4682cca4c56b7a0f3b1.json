{"ast":null,"code":"import _defineProperty from \"D:\\\\react\\\\project0330\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"D:\\\\react\\\\project0330\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport React, { useState } from 'react';\nimport classNames from 'classnames';\nvar classPrefix = \"adm-index-bar\";\nexport var Sidebar = function Sidebar(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      interacting = _useState2[0],\n      setInteracting = _useState2[1];\n\n  return React.createElement(\"div\", {\n    className: classNames(\"\".concat(classPrefix, \"-sidebar\"), _defineProperty({}, \"\".concat(classPrefix, \"-sidebar-interacting\"), interacting)),\n    onMouseDown: function onMouseDown() {\n      setInteracting(true);\n    },\n    onMouseUp: function onMouseUp() {\n      setInteracting(false);\n    },\n    onTouchStart: function onTouchStart() {\n      setInteracting(true);\n    },\n    onTouchEnd: function onTouchEnd() {\n      setInteracting(false);\n    },\n    onTouchMove: function onTouchMove(e) {\n      if (!interacting) return;\n      var _e$touches$ = e.touches[0],\n          clientX = _e$touches$.clientX,\n          clientY = _e$touches$.clientY;\n      var target = document.elementFromPoint(clientX, clientY);\n      if (!target) return;\n      var index = target.dataset['index'];\n\n      if (index) {\n        props.onActive(index);\n      }\n    }\n  }, props.indexItems.map(function (_ref) {\n    var index = _ref.index,\n        brief = _ref.brief;\n    var active = index === props.activeIndex;\n    return React.createElement(\"div\", {\n      className: \"\".concat(classPrefix, \"-sidebar-row\"),\n      onMouseDown: function onMouseDown() {\n        props.onActive(index);\n      },\n      onTouchStart: function onTouchStart() {\n        props.onActive(index);\n      },\n      onMouseEnter: function onMouseEnter() {\n        if (interacting) {\n          props.onActive(index);\n        }\n      },\n      \"data-index\": index,\n      key: index\n    }, interacting && active && React.createElement(\"div\", {\n      className: \"\".concat(classPrefix, \"-sidebar-bubble\")\n    }, brief), React.createElement(\"div\", {\n      className: classNames(\"\".concat(classPrefix, \"-sidebar-item\"), _defineProperty({}, \"\".concat(classPrefix, \"-sidebar-item-active\"), active)),\n      \"data-index\": index\n    }, React.createElement(\"div\", null, brief)));\n  }));\n};","map":null,"metadata":{},"sourceType":"module"}