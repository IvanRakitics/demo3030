{"ast":null,"code":"import React, { useContext } from 'react';\nimport List from '../list';\nimport { withNativeProps } from '../../utils/native-props';\nimport { CheckListContext } from './context';\nimport { devWarning } from '../../utils/dev-log';\nimport classNames from 'classnames';\nconst classPrefix = `adm-check-list-item`;\nexport const CheckListItem = props => {\n  const context = useContext(CheckListContext);\n\n  if (context === null) {\n    devWarning('CheckList.Item', 'CheckList.Item can only be used inside CheckList.');\n    return null;\n  }\n\n  const active = context.value.includes(props.value);\n  const readOnly = props.readOnly || context.readOnly;\n  const extra = React.createElement(\"div\", {\n    className: `${classPrefix}-extra`\n  }, active ? context.activeIcon : null);\n  return withNativeProps(props, React.createElement(List.Item, {\n    title: props.title,\n    className: classNames(classPrefix, readOnly && `${classPrefix}-readonly`, active && `${classPrefix}-active`),\n    description: props.description,\n    prefix: props.prefix,\n    onClick: e => {\n      var _a;\n\n      if (readOnly) return;\n\n      if (active) {\n        context.uncheck(props.value);\n      } else {\n        context.check(props.value);\n      }\n\n      (_a = props.onClick) === null || _a === void 0 ? void 0 : _a.call(props, e);\n    },\n    arrow: false,\n    clickable: !readOnly,\n    extra: extra,\n    disabled: props.disabled || context.disabled\n  }, props.children));\n};","map":{"version":3,"sources":["D:/react/project0330/node_modules/antd-mobile/es/components/check-list/check-list-item.js"],"names":["React","useContext","List","withNativeProps","CheckListContext","devWarning","classNames","classPrefix","CheckListItem","props","context","active","value","includes","readOnly","extra","createElement","className","activeIcon","Item","title","description","prefix","onClick","e","_a","uncheck","check","call","arrow","clickable","disabled","children"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,SAASC,eAAT,QAAgC,0BAAhC;AACA,SAASC,gBAAT,QAAiC,WAAjC;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,MAAMC,WAAW,GAAI,qBAArB;AACA,OAAO,MAAMC,aAAa,GAAGC,KAAK,IAAI;AACpC,QAAMC,OAAO,GAAGT,UAAU,CAACG,gBAAD,CAA1B;;AAEA,MAAIM,OAAO,KAAK,IAAhB,EAAsB;AACpBL,IAAAA,UAAU,CAAC,gBAAD,EAAmB,mDAAnB,CAAV;AACA,WAAO,IAAP;AACD;;AAED,QAAMM,MAAM,GAAGD,OAAO,CAACE,KAAR,CAAcC,QAAd,CAAuBJ,KAAK,CAACG,KAA7B,CAAf;AACA,QAAME,QAAQ,GAAGL,KAAK,CAACK,QAAN,IAAkBJ,OAAO,CAACI,QAA3C;AACA,QAAMC,KAAK,GAAGf,KAAK,CAACgB,aAAN,CAAoB,KAApB,EAA2B;AACvCC,IAAAA,SAAS,EAAG,GAAEV,WAAY;AADa,GAA3B,EAEXI,MAAM,GAAGD,OAAO,CAACQ,UAAX,GAAwB,IAFnB,CAAd;AAGA,SAAOf,eAAe,CAACM,KAAD,EAAQT,KAAK,CAACgB,aAAN,CAAoBd,IAAI,CAACiB,IAAzB,EAA+B;AAC3DC,IAAAA,KAAK,EAAEX,KAAK,CAACW,KAD8C;AAE3DH,IAAAA,SAAS,EAAEX,UAAU,CAACC,WAAD,EAAcO,QAAQ,IAAK,GAAEP,WAAY,WAAzC,EAAqDI,MAAM,IAAK,GAAEJ,WAAY,SAA9E,CAFsC;AAG3Dc,IAAAA,WAAW,EAAEZ,KAAK,CAACY,WAHwC;AAI3DC,IAAAA,MAAM,EAAEb,KAAK,CAACa,MAJ6C;AAK3DC,IAAAA,OAAO,EAAEC,CAAC,IAAI;AACZ,UAAIC,EAAJ;;AAEA,UAAIX,QAAJ,EAAc;;AAEd,UAAIH,MAAJ,EAAY;AACVD,QAAAA,OAAO,CAACgB,OAAR,CAAgBjB,KAAK,CAACG,KAAtB;AACD,OAFD,MAEO;AACLF,QAAAA,OAAO,CAACiB,KAAR,CAAclB,KAAK,CAACG,KAApB;AACD;;AAED,OAACa,EAAE,GAAGhB,KAAK,CAACc,OAAZ,MAAyB,IAAzB,IAAiCE,EAAE,KAAK,KAAK,CAA7C,GAAiD,KAAK,CAAtD,GAA0DA,EAAE,CAACG,IAAH,CAAQnB,KAAR,EAAee,CAAf,CAA1D;AACD,KAjB0D;AAkB3DK,IAAAA,KAAK,EAAE,KAlBoD;AAmB3DC,IAAAA,SAAS,EAAE,CAAChB,QAnB+C;AAoB3DC,IAAAA,KAAK,EAAEA,KApBoD;AAqB3DgB,IAAAA,QAAQ,EAAEtB,KAAK,CAACsB,QAAN,IAAkBrB,OAAO,CAACqB;AArBuB,GAA/B,EAsB3BtB,KAAK,CAACuB,QAtBqB,CAAR,CAAtB;AAuBD,CApCM","sourcesContent":["import React, { useContext } from 'react';\nimport List from '../list';\nimport { withNativeProps } from '../../utils/native-props';\nimport { CheckListContext } from './context';\nimport { devWarning } from '../../utils/dev-log';\nimport classNames from 'classnames';\nconst classPrefix = `adm-check-list-item`;\nexport const CheckListItem = props => {\n  const context = useContext(CheckListContext);\n\n  if (context === null) {\n    devWarning('CheckList.Item', 'CheckList.Item can only be used inside CheckList.');\n    return null;\n  }\n\n  const active = context.value.includes(props.value);\n  const readOnly = props.readOnly || context.readOnly;\n  const extra = React.createElement(\"div\", {\n    className: `${classPrefix}-extra`\n  }, active ? context.activeIcon : null);\n  return withNativeProps(props, React.createElement(List.Item, {\n    title: props.title,\n    className: classNames(classPrefix, readOnly && `${classPrefix}-readonly`, active && `${classPrefix}-active`),\n    description: props.description,\n    prefix: props.prefix,\n    onClick: e => {\n      var _a;\n\n      if (readOnly) return;\n\n      if (active) {\n        context.uncheck(props.value);\n      } else {\n        context.check(props.value);\n      }\n\n      (_a = props.onClick) === null || _a === void 0 ? void 0 : _a.call(props, e);\n    },\n    arrow: false,\n    clickable: !readOnly,\n    extra: extra,\n    disabled: props.disabled || context.disabled\n  }, props.children));\n};"]},"metadata":{},"sourceType":"module"}