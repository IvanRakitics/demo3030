{"ast":null,"code":"import React, { useRef } from 'react';\nimport { useSpring, animated } from '@react-spring/web';\nimport { rubberbandIfOutOfBounds } from '../../utils/rubberband';\nimport { useDragAndPinch } from '../../utils/use-drag-and-pinch';\nimport { bound } from '../../utils/bound';\nconst classPrefix = `adm-image-viewer`;\nexport const Slide = props => {\n  const {\n    dragLockRef\n  } = props;\n  const controlRef = useRef(null);\n  const imgRef = useRef(null);\n  const [{\n    zoom,\n    x,\n    y\n  }, api] = useSpring(() => ({\n    zoom: 1,\n    x: 0,\n    y: 0,\n    config: {\n      tension: 200\n    }\n  }));\n  const pinchLockRef = useRef(false);\n\n  function boundXY(_ref, rubberband) {\n    let [x, y] = _ref;\n    const currentZoom = zoom.get();\n    let xOffset = 0,\n        yOffset = 0;\n\n    if (imgRef.current && controlRef.current) {\n      xOffset = ((currentZoom * imgRef.current.width || 0) - controlRef.current.clientWidth) / 2;\n      yOffset = ((currentZoom * imgRef.current.height || 0) - controlRef.current.clientHeight) / 2;\n    }\n\n    xOffset = xOffset > 0 ? xOffset : 0;\n    yOffset = yOffset > 0 ? yOffset : 0;\n    const bounds = {\n      left: -xOffset,\n      right: xOffset,\n      top: -yOffset,\n      bottom: yOffset\n    };\n\n    if (rubberband) {\n      return [rubberbandIfOutOfBounds(x, bounds.left, bounds.right, currentZoom * 50), rubberbandIfOutOfBounds(y, bounds.top, bounds.bottom, currentZoom * 50)];\n    } else {\n      return [bound(x, bounds.left, bounds.right), bound(y, bounds.top, bounds.bottom)];\n    }\n  }\n\n  useDragAndPinch({\n    onDrag: state => {\n      if (state.tap && state.elapsedTime > 0 && state.elapsedTime < 1000) {\n        // 判断点击时间>0是为了过滤掉非正常操作，例如用户长按选择图片之后的取消操作（也是一次点击）\n        props.onTap();\n        return;\n      }\n\n      const currentZoom = zoom.get();\n\n      if (dragLockRef) {\n        dragLockRef.current = currentZoom !== 1;\n      }\n\n      if (!pinchLockRef.current && currentZoom <= 1) {\n        api.start({\n          x: 0,\n          y: 0\n        });\n      } else {\n        if (state.last) {\n          const [x, y] = boundXY([state.offset[0] + state.velocity[0] * state.direction[0] * 200, state.offset[1] + state.velocity[1] * state.direction[1] * 200], false);\n          api.start({\n            x,\n            y\n          });\n        } else {\n          const [x, y] = boundXY(state.offset, true);\n          api.start({\n            x,\n            y,\n            immediate: true\n          });\n        }\n      }\n    },\n    onPinch: state => {\n      var _a;\n\n      pinchLockRef.current = !state.last;\n      const [d] = state.offset;\n      if (d < 0) return;\n      const nextZoom = state.last ? bound(d, 1, props.maxZoom) : d;\n      api.start({\n        zoom: nextZoom,\n        immediate: !state.last\n      });\n      (_a = props.onZoomChange) === null || _a === void 0 ? void 0 : _a.call(props, nextZoom);\n\n      if (state.last && nextZoom <= 1) {\n        api.start({\n          x: 0,\n          y: 0\n        });\n\n        if (dragLockRef) {\n          dragLockRef.current = false;\n        }\n      } else {\n        if (dragLockRef) {\n          dragLockRef.current = true;\n        }\n      }\n    }\n  }, {\n    target: controlRef,\n    drag: {\n      // filterTaps: true,\n      from: () => [x.get(), y.get()],\n      pointer: {\n        touch: true\n      }\n    },\n    pinch: {\n      from: () => [zoom.get(), 0],\n      pointer: {\n        touch: true\n      }\n    }\n  });\n  return React.createElement(\"div\", {\n    className: `${classPrefix}-slide`,\n    onPointerMove: e => {\n      if (zoom.get() !== 1) {\n        e.stopPropagation();\n      }\n    }\n  }, React.createElement(\"div\", {\n    className: `${classPrefix}-control`,\n    ref: controlRef\n  }, React.createElement(animated.div, {\n    className: `${classPrefix}-image-wrapper`,\n    style: {\n      translateX: x,\n      translateY: y,\n      scale: zoom\n    }\n  }, React.createElement(\"img\", {\n    ref: imgRef,\n    src: props.image,\n    draggable: false,\n    alt: props.image\n  }))));\n};","map":{"version":3,"sources":["D:/react/project0330/node_modules/antd-mobile/es/components/image-viewer/slide.js"],"names":["React","useRef","useSpring","animated","rubberbandIfOutOfBounds","useDragAndPinch","bound","classPrefix","Slide","props","dragLockRef","controlRef","imgRef","zoom","x","y","api","config","tension","pinchLockRef","boundXY","rubberband","currentZoom","get","xOffset","yOffset","current","width","clientWidth","height","clientHeight","bounds","left","right","top","bottom","onDrag","state","tap","elapsedTime","onTap","start","last","offset","velocity","direction","immediate","onPinch","_a","d","nextZoom","maxZoom","onZoomChange","call","target","drag","from","pointer","touch","pinch","createElement","className","onPointerMove","e","stopPropagation","ref","div","style","translateX","translateY","scale","src","image","draggable","alt"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,mBAApC;AACA,SAASC,uBAAT,QAAwC,wBAAxC;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,KAAT,QAAsB,mBAAtB;AACA,MAAMC,WAAW,GAAI,kBAArB;AACA,OAAO,MAAMC,KAAK,GAAGC,KAAK,IAAI;AAC5B,QAAM;AACJC,IAAAA;AADI,MAEFD,KAFJ;AAGA,QAAME,UAAU,GAAGV,MAAM,CAAC,IAAD,CAAzB;AACA,QAAMW,MAAM,GAAGX,MAAM,CAAC,IAAD,CAArB;AACA,QAAM,CAAC;AACLY,IAAAA,IADK;AAELC,IAAAA,CAFK;AAGLC,IAAAA;AAHK,GAAD,EAIHC,GAJG,IAIId,SAAS,CAAC,OAAO;AACzBW,IAAAA,IAAI,EAAE,CADmB;AAEzBC,IAAAA,CAAC,EAAE,CAFsB;AAGzBC,IAAAA,CAAC,EAAE,CAHsB;AAIzBE,IAAAA,MAAM,EAAE;AACNC,MAAAA,OAAO,EAAE;AADH;AAJiB,GAAP,CAAD,CAJnB;AAYA,QAAMC,YAAY,GAAGlB,MAAM,CAAC,KAAD,CAA3B;;AAEA,WAASmB,OAAT,OAAyBC,UAAzB,EAAqC;AAAA,QAApB,CAACP,CAAD,EAAIC,CAAJ,CAAoB;AACnC,UAAMO,WAAW,GAAGT,IAAI,CAACU,GAAL,EAApB;AACA,QAAIC,OAAO,GAAG,CAAd;AAAA,QACIC,OAAO,GAAG,CADd;;AAGA,QAAIb,MAAM,CAACc,OAAP,IAAkBf,UAAU,CAACe,OAAjC,EAA0C;AACxCF,MAAAA,OAAO,GAAG,CAAC,CAACF,WAAW,GAAGV,MAAM,CAACc,OAAP,CAAeC,KAA7B,IAAsC,CAAvC,IAA4ChB,UAAU,CAACe,OAAX,CAAmBE,WAAhE,IAA+E,CAAzF;AACAH,MAAAA,OAAO,GAAG,CAAC,CAACH,WAAW,GAAGV,MAAM,CAACc,OAAP,CAAeG,MAA7B,IAAuC,CAAxC,IAA6ClB,UAAU,CAACe,OAAX,CAAmBI,YAAjE,IAAiF,CAA3F;AACD;;AAEDN,IAAAA,OAAO,GAAGA,OAAO,GAAG,CAAV,GAAcA,OAAd,GAAwB,CAAlC;AACAC,IAAAA,OAAO,GAAGA,OAAO,GAAG,CAAV,GAAcA,OAAd,GAAwB,CAAlC;AACA,UAAMM,MAAM,GAAG;AACbC,MAAAA,IAAI,EAAE,CAACR,OADM;AAEbS,MAAAA,KAAK,EAAET,OAFM;AAGbU,MAAAA,GAAG,EAAE,CAACT,OAHO;AAIbU,MAAAA,MAAM,EAAEV;AAJK,KAAf;;AAOA,QAAIJ,UAAJ,EAAgB;AACd,aAAO,CAACjB,uBAAuB,CAACU,CAAD,EAAIiB,MAAM,CAACC,IAAX,EAAiBD,MAAM,CAACE,KAAxB,EAA+BX,WAAW,GAAG,EAA7C,CAAxB,EAA0ElB,uBAAuB,CAACW,CAAD,EAAIgB,MAAM,CAACG,GAAX,EAAgBH,MAAM,CAACI,MAAvB,EAA+Bb,WAAW,GAAG,EAA7C,CAAjG,CAAP;AACD,KAFD,MAEO;AACL,aAAO,CAAChB,KAAK,CAACQ,CAAD,EAAIiB,MAAM,CAACC,IAAX,EAAiBD,MAAM,CAACE,KAAxB,CAAN,EAAsC3B,KAAK,CAACS,CAAD,EAAIgB,MAAM,CAACG,GAAX,EAAgBH,MAAM,CAACI,MAAvB,CAA3C,CAAP;AACD;AACF;;AAED9B,EAAAA,eAAe,CAAC;AACd+B,IAAAA,MAAM,EAAEC,KAAK,IAAI;AACf,UAAIA,KAAK,CAACC,GAAN,IAAaD,KAAK,CAACE,WAAN,GAAoB,CAAjC,IAAsCF,KAAK,CAACE,WAAN,GAAoB,IAA9D,EAAoE;AAClE;AACA9B,QAAAA,KAAK,CAAC+B,KAAN;AACA;AACD;;AAED,YAAMlB,WAAW,GAAGT,IAAI,CAACU,GAAL,EAApB;;AAEA,UAAIb,WAAJ,EAAiB;AACfA,QAAAA,WAAW,CAACgB,OAAZ,GAAsBJ,WAAW,KAAK,CAAtC;AACD;;AAED,UAAI,CAACH,YAAY,CAACO,OAAd,IAAyBJ,WAAW,IAAI,CAA5C,EAA+C;AAC7CN,QAAAA,GAAG,CAACyB,KAAJ,CAAU;AACR3B,UAAAA,CAAC,EAAE,CADK;AAERC,UAAAA,CAAC,EAAE;AAFK,SAAV;AAID,OALD,MAKO;AACL,YAAIsB,KAAK,CAACK,IAAV,EAAgB;AACd,gBAAM,CAAC5B,CAAD,EAAIC,CAAJ,IAASK,OAAO,CAAC,CAACiB,KAAK,CAACM,MAAN,CAAa,CAAb,IAAkBN,KAAK,CAACO,QAAN,CAAe,CAAf,IAAoBP,KAAK,CAACQ,SAAN,CAAgB,CAAhB,CAApB,GAAyC,GAA5D,EAAiER,KAAK,CAACM,MAAN,CAAa,CAAb,IAAkBN,KAAK,CAACO,QAAN,CAAe,CAAf,IAAoBP,KAAK,CAACQ,SAAN,CAAgB,CAAhB,CAApB,GAAyC,GAA5H,CAAD,EAAmI,KAAnI,CAAtB;AACA7B,UAAAA,GAAG,CAACyB,KAAJ,CAAU;AACR3B,YAAAA,CADQ;AAERC,YAAAA;AAFQ,WAAV;AAID,SAND,MAMO;AACL,gBAAM,CAACD,CAAD,EAAIC,CAAJ,IAASK,OAAO,CAACiB,KAAK,CAACM,MAAP,EAAe,IAAf,CAAtB;AACA3B,UAAAA,GAAG,CAACyB,KAAJ,CAAU;AACR3B,YAAAA,CADQ;AAERC,YAAAA,CAFQ;AAGR+B,YAAAA,SAAS,EAAE;AAHH,WAAV;AAKD;AACF;AACF,KAnCa;AAoCdC,IAAAA,OAAO,EAAEV,KAAK,IAAI;AAChB,UAAIW,EAAJ;;AAEA7B,MAAAA,YAAY,CAACO,OAAb,GAAuB,CAACW,KAAK,CAACK,IAA9B;AACA,YAAM,CAACO,CAAD,IAAMZ,KAAK,CAACM,MAAlB;AACA,UAAIM,CAAC,GAAG,CAAR,EAAW;AACX,YAAMC,QAAQ,GAAGb,KAAK,CAACK,IAAN,GAAapC,KAAK,CAAC2C,CAAD,EAAI,CAAJ,EAAOxC,KAAK,CAAC0C,OAAb,CAAlB,GAA0CF,CAA3D;AACAjC,MAAAA,GAAG,CAACyB,KAAJ,CAAU;AACR5B,QAAAA,IAAI,EAAEqC,QADE;AAERJ,QAAAA,SAAS,EAAE,CAACT,KAAK,CAACK;AAFV,OAAV;AAIA,OAACM,EAAE,GAAGvC,KAAK,CAAC2C,YAAZ,MAA8B,IAA9B,IAAsCJ,EAAE,KAAK,KAAK,CAAlD,GAAsD,KAAK,CAA3D,GAA+DA,EAAE,CAACK,IAAH,CAAQ5C,KAAR,EAAeyC,QAAf,CAA/D;;AAEA,UAAIb,KAAK,CAACK,IAAN,IAAcQ,QAAQ,IAAI,CAA9B,EAAiC;AAC/BlC,QAAAA,GAAG,CAACyB,KAAJ,CAAU;AACR3B,UAAAA,CAAC,EAAE,CADK;AAERC,UAAAA,CAAC,EAAE;AAFK,SAAV;;AAKA,YAAIL,WAAJ,EAAiB;AACfA,UAAAA,WAAW,CAACgB,OAAZ,GAAsB,KAAtB;AACD;AACF,OATD,MASO;AACL,YAAIhB,WAAJ,EAAiB;AACfA,UAAAA,WAAW,CAACgB,OAAZ,GAAsB,IAAtB;AACD;AACF;AACF;AA/Da,GAAD,EAgEZ;AACD4B,IAAAA,MAAM,EAAE3C,UADP;AAED4C,IAAAA,IAAI,EAAE;AACJ;AACAC,MAAAA,IAAI,EAAE,MAAM,CAAC1C,CAAC,CAACS,GAAF,EAAD,EAAUR,CAAC,CAACQ,GAAF,EAAV,CAFR;AAGJkC,MAAAA,OAAO,EAAE;AACPC,QAAAA,KAAK,EAAE;AADA;AAHL,KAFL;AASDC,IAAAA,KAAK,EAAE;AACLH,MAAAA,IAAI,EAAE,MAAM,CAAC3C,IAAI,CAACU,GAAL,EAAD,EAAa,CAAb,CADP;AAELkC,MAAAA,OAAO,EAAE;AACPC,QAAAA,KAAK,EAAE;AADA;AAFJ;AATN,GAhEY,CAAf;AAgFA,SAAO1D,KAAK,CAAC4D,aAAN,CAAoB,KAApB,EAA2B;AAChCC,IAAAA,SAAS,EAAG,GAAEtD,WAAY,QADM;AAEhCuD,IAAAA,aAAa,EAAEC,CAAC,IAAI;AAClB,UAAIlD,IAAI,CAACU,GAAL,OAAe,CAAnB,EAAsB;AACpBwC,QAAAA,CAAC,CAACC,eAAF;AACD;AACF;AAN+B,GAA3B,EAOJhE,KAAK,CAAC4D,aAAN,CAAoB,KAApB,EAA2B;AAC5BC,IAAAA,SAAS,EAAG,GAAEtD,WAAY,UADE;AAE5B0D,IAAAA,GAAG,EAAEtD;AAFuB,GAA3B,EAGAX,KAAK,CAAC4D,aAAN,CAAoBzD,QAAQ,CAAC+D,GAA7B,EAAkC;AACnCL,IAAAA,SAAS,EAAG,GAAEtD,WAAY,gBADS;AAEnC4D,IAAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,EAAEtD,CADP;AAELuD,MAAAA,UAAU,EAAEtD,CAFP;AAGLuD,MAAAA,KAAK,EAAEzD;AAHF;AAF4B,GAAlC,EAOAb,KAAK,CAAC4D,aAAN,CAAoB,KAApB,EAA2B;AAC5BK,IAAAA,GAAG,EAAErD,MADuB;AAE5B2D,IAAAA,GAAG,EAAE9D,KAAK,CAAC+D,KAFiB;AAG5BC,IAAAA,SAAS,EAAE,KAHiB;AAI5BC,IAAAA,GAAG,EAAEjE,KAAK,CAAC+D;AAJiB,GAA3B,CAPA,CAHA,CAPI,CAAP;AAuBD,CArJM","sourcesContent":["import React, { useRef } from 'react';\nimport { useSpring, animated } from '@react-spring/web';\nimport { rubberbandIfOutOfBounds } from '../../utils/rubberband';\nimport { useDragAndPinch } from '../../utils/use-drag-and-pinch';\nimport { bound } from '../../utils/bound';\nconst classPrefix = `adm-image-viewer`;\nexport const Slide = props => {\n  const {\n    dragLockRef\n  } = props;\n  const controlRef = useRef(null);\n  const imgRef = useRef(null);\n  const [{\n    zoom,\n    x,\n    y\n  }, api] = useSpring(() => ({\n    zoom: 1,\n    x: 0,\n    y: 0,\n    config: {\n      tension: 200\n    }\n  }));\n  const pinchLockRef = useRef(false);\n\n  function boundXY([x, y], rubberband) {\n    const currentZoom = zoom.get();\n    let xOffset = 0,\n        yOffset = 0;\n\n    if (imgRef.current && controlRef.current) {\n      xOffset = ((currentZoom * imgRef.current.width || 0) - controlRef.current.clientWidth) / 2;\n      yOffset = ((currentZoom * imgRef.current.height || 0) - controlRef.current.clientHeight) / 2;\n    }\n\n    xOffset = xOffset > 0 ? xOffset : 0;\n    yOffset = yOffset > 0 ? yOffset : 0;\n    const bounds = {\n      left: -xOffset,\n      right: xOffset,\n      top: -yOffset,\n      bottom: yOffset\n    };\n\n    if (rubberband) {\n      return [rubberbandIfOutOfBounds(x, bounds.left, bounds.right, currentZoom * 50), rubberbandIfOutOfBounds(y, bounds.top, bounds.bottom, currentZoom * 50)];\n    } else {\n      return [bound(x, bounds.left, bounds.right), bound(y, bounds.top, bounds.bottom)];\n    }\n  }\n\n  useDragAndPinch({\n    onDrag: state => {\n      if (state.tap && state.elapsedTime > 0 && state.elapsedTime < 1000) {\n        // 判断点击时间>0是为了过滤掉非正常操作，例如用户长按选择图片之后的取消操作（也是一次点击）\n        props.onTap();\n        return;\n      }\n\n      const currentZoom = zoom.get();\n\n      if (dragLockRef) {\n        dragLockRef.current = currentZoom !== 1;\n      }\n\n      if (!pinchLockRef.current && currentZoom <= 1) {\n        api.start({\n          x: 0,\n          y: 0\n        });\n      } else {\n        if (state.last) {\n          const [x, y] = boundXY([state.offset[0] + state.velocity[0] * state.direction[0] * 200, state.offset[1] + state.velocity[1] * state.direction[1] * 200], false);\n          api.start({\n            x,\n            y\n          });\n        } else {\n          const [x, y] = boundXY(state.offset, true);\n          api.start({\n            x,\n            y,\n            immediate: true\n          });\n        }\n      }\n    },\n    onPinch: state => {\n      var _a;\n\n      pinchLockRef.current = !state.last;\n      const [d] = state.offset;\n      if (d < 0) return;\n      const nextZoom = state.last ? bound(d, 1, props.maxZoom) : d;\n      api.start({\n        zoom: nextZoom,\n        immediate: !state.last\n      });\n      (_a = props.onZoomChange) === null || _a === void 0 ? void 0 : _a.call(props, nextZoom);\n\n      if (state.last && nextZoom <= 1) {\n        api.start({\n          x: 0,\n          y: 0\n        });\n\n        if (dragLockRef) {\n          dragLockRef.current = false;\n        }\n      } else {\n        if (dragLockRef) {\n          dragLockRef.current = true;\n        }\n      }\n    }\n  }, {\n    target: controlRef,\n    drag: {\n      // filterTaps: true,\n      from: () => [x.get(), y.get()],\n      pointer: {\n        touch: true\n      }\n    },\n    pinch: {\n      from: () => [zoom.get(), 0],\n      pointer: {\n        touch: true\n      }\n    }\n  });\n  return React.createElement(\"div\", {\n    className: `${classPrefix}-slide`,\n    onPointerMove: e => {\n      if (zoom.get() !== 1) {\n        e.stopPropagation();\n      }\n    }\n  }, React.createElement(\"div\", {\n    className: `${classPrefix}-control`,\n    ref: controlRef\n  }, React.createElement(animated.div, {\n    className: `${classPrefix}-image-wrapper`,\n    style: {\n      translateX: x,\n      translateY: y,\n      scale: zoom\n    }\n  }, React.createElement(\"img\", {\n    ref: imgRef,\n    src: props.image,\n    draggable: false,\n    alt: props.image\n  }))));\n};"]},"metadata":{},"sourceType":"module"}