{"ast":null,"code":"import _slicedToArray from \"D:\\\\react\\\\project0330\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport { mergeProps } from '../../utils/with-default-props';\nimport React, { useState, useRef } from 'react';\nimport { withNativeProps } from '../../utils/native-props';\nimport { PictureOutline, PictureWrongOutline } from 'antd-mobile-icons';\nimport { staged } from 'staged-components';\nimport { toCSSLength } from '../../utils/to-css-length';\nimport { LazyDetector } from './lazy-detector';\nimport { useIsomorphicUpdateLayoutEffect } from '../../utils/use-isomorphic-update-layout-effect';\nvar classPrefix = \"adm-image\";\nvar defaultProps = {\n  fit: 'fill',\n  placeholder: React.createElement(\"div\", {\n    className: \"\".concat(classPrefix, \"-tip\")\n  }, React.createElement(PictureOutline, null)),\n  fallback: React.createElement(\"div\", {\n    className: \"\".concat(classPrefix, \"-tip\")\n  }, React.createElement(PictureWrongOutline, null)),\n  lazy: false\n};\nexport var Image = staged(function (p) {\n  var props = mergeProps(defaultProps, p);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loaded = _useState2[0],\n      setLoaded = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      failed = _useState4[0],\n      setFailed = _useState4[1];\n\n  var ref = useRef(null);\n  var src = props.src;\n  var srcSet = props.srcSet;\n\n  var _useState5 = useState(!props.lazy),\n      _useState6 = _slicedToArray(_useState5, 2),\n      initialized = _useState6[0],\n      setInitialized = _useState6[1];\n\n  src = initialized ? props.src : undefined;\n  srcSet = initialized ? props.srcSet : undefined;\n  useIsomorphicUpdateLayoutEffect(function () {\n    setLoaded(false);\n    setFailed(false);\n  }, [src]);\n\n  function renderInner() {\n    if (failed) {\n      return React.createElement(React.Fragment, null, props.fallback);\n    }\n\n    var img = React.createElement(\"img\", {\n      className: \"\".concat(classPrefix, \"-img\"),\n      src: src,\n      alt: props.alt,\n      onClick: props.onClick,\n      onLoad: function onLoad(e) {\n        var _a;\n\n        setLoaded(true);\n        (_a = props.onLoad) === null || _a === void 0 ? void 0 : _a.call(props, e);\n      },\n      onError: function onError(e) {\n        var _a;\n\n        setFailed(true);\n        (_a = props.onError) === null || _a === void 0 ? void 0 : _a.call(props, e);\n      },\n      style: {\n        objectFit: props.fit,\n        display: loaded ? 'block' : 'none'\n      },\n      crossOrigin: props.crossOrigin,\n      decoding: props.decoding,\n      loading: props.loading,\n      referrerPolicy: props.referrerPolicy,\n      sizes: props.sizes,\n      srcSet: srcSet,\n      useMap: props.useMap\n    });\n    return React.createElement(React.Fragment, null, !loaded && props.placeholder, img);\n  }\n\n  var style = {};\n\n  if (props.width) {\n    style['--width'] = toCSSLength(props.width);\n  }\n\n  if (props.height) {\n    style['--height'] = toCSSLength(props.height);\n  }\n\n  return withNativeProps(props, React.createElement(\"div\", {\n    ref: ref,\n    className: classPrefix,\n    style: style\n  }, props.lazy && !initialized && React.createElement(LazyDetector, {\n    onActive: function onActive() {\n      setInitialized(true);\n    }\n  }), renderInner()));\n});","map":null,"metadata":{},"sourceType":"module"}