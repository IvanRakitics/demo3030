{"ast":null,"code":"import { useEffect } from 'react';\nimport useLatest from '../useLatest';\n\nvar setRafTimeout = function setRafTimeout(callback, delay) {\n  if (delay === void 0) {\n    delay = 0;\n  }\n\n  if (typeof requestAnimationFrame === typeof undefined) {\n    return {\n      id: setTimeout(callback, delay)\n    };\n  }\n\n  var handle = {\n    id: 0\n  };\n  var startTime = new Date().getTime();\n\n  var loop = function loop() {\n    var current = new Date().getTime();\n\n    if (current - startTime >= delay) {\n      callback();\n    } else {\n      handle.id = requestAnimationFrame(loop);\n    }\n  };\n\n  handle.id = requestAnimationFrame(loop);\n  return handle;\n};\n\nfunction cancelAnimationFrameIsNotDefined(t) {\n  return typeof cancelAnimationFrame === typeof undefined;\n}\n\nvar clearRafTimeout = function clearRafTimeout(handle) {\n  if (cancelAnimationFrameIsNotDefined(handle.id)) {\n    return clearTimeout(handle.id);\n  }\n\n  cancelAnimationFrame(handle.id);\n};\n\nfunction useRafTimeout(fn, delay) {\n  var fnRef = useLatest(fn);\n  useEffect(function () {\n    if (typeof delay !== 'number' || delay < 0) return;\n    var timer = setRafTimeout(function () {\n      fnRef.current();\n    }, delay);\n    return function () {\n      clearRafTimeout(timer);\n    };\n  }, [delay]);\n}\n\nexport default useRafTimeout;","map":{"version":3,"sources":["D:/react/project0330/node_modules/ahooks/es/useRafTimeout/index.js"],"names":["useEffect","useLatest","setRafTimeout","callback","delay","requestAnimationFrame","undefined","id","setTimeout","handle","startTime","Date","getTime","loop","current","cancelAnimationFrameIsNotDefined","t","cancelAnimationFrame","clearRafTimeout","clearTimeout","useRafTimeout","fn","fnRef","timer"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,SAAP,MAAsB,cAAtB;;AAEA,IAAIC,aAAa,GAAG,SAASA,aAAT,CAAuBC,QAAvB,EAAiCC,KAAjC,EAAwC;AAC1D,MAAIA,KAAK,KAAK,KAAK,CAAnB,EAAsB;AACpBA,IAAAA,KAAK,GAAG,CAAR;AACD;;AAED,MAAI,OAAOC,qBAAP,KAAiC,OAAOC,SAA5C,EAAuD;AACrD,WAAO;AACLC,MAAAA,EAAE,EAAEC,UAAU,CAACL,QAAD,EAAWC,KAAX;AADT,KAAP;AAGD;;AAED,MAAIK,MAAM,GAAG;AACXF,IAAAA,EAAE,EAAE;AADO,GAAb;AAGA,MAAIG,SAAS,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAAhB;;AAEA,MAAIC,IAAI,GAAG,SAASA,IAAT,GAAgB;AACzB,QAAIC,OAAO,GAAG,IAAIH,IAAJ,GAAWC,OAAX,EAAd;;AAEA,QAAIE,OAAO,GAAGJ,SAAV,IAAuBN,KAA3B,EAAkC;AAChCD,MAAAA,QAAQ;AACT,KAFD,MAEO;AACLM,MAAAA,MAAM,CAACF,EAAP,GAAYF,qBAAqB,CAACQ,IAAD,CAAjC;AACD;AACF,GARD;;AAUAJ,EAAAA,MAAM,CAACF,EAAP,GAAYF,qBAAqB,CAACQ,IAAD,CAAjC;AACA,SAAOJ,MAAP;AACD,CA5BD;;AA8BA,SAASM,gCAAT,CAA0CC,CAA1C,EAA6C;AAC3C,SAAO,OAAOC,oBAAP,KAAgC,OAAOX,SAA9C;AACD;;AAED,IAAIY,eAAe,GAAG,SAASA,eAAT,CAAyBT,MAAzB,EAAiC;AACrD,MAAIM,gCAAgC,CAACN,MAAM,CAACF,EAAR,CAApC,EAAiD;AAC/C,WAAOY,YAAY,CAACV,MAAM,CAACF,EAAR,CAAnB;AACD;;AAEDU,EAAAA,oBAAoB,CAACR,MAAM,CAACF,EAAR,CAApB;AACD,CAND;;AAQA,SAASa,aAAT,CAAuBC,EAAvB,EAA2BjB,KAA3B,EAAkC;AAChC,MAAIkB,KAAK,GAAGrB,SAAS,CAACoB,EAAD,CAArB;AACArB,EAAAA,SAAS,CAAC,YAAY;AACpB,QAAI,OAAOI,KAAP,KAAiB,QAAjB,IAA6BA,KAAK,GAAG,CAAzC,EAA4C;AAC5C,QAAImB,KAAK,GAAGrB,aAAa,CAAC,YAAY;AACpCoB,MAAAA,KAAK,CAACR,OAAN;AACD,KAFwB,EAEtBV,KAFsB,CAAzB;AAGA,WAAO,YAAY;AACjBc,MAAAA,eAAe,CAACK,KAAD,CAAf;AACD,KAFD;AAGD,GARQ,EAQN,CAACnB,KAAD,CARM,CAAT;AASD;;AAED,eAAegB,aAAf","sourcesContent":["import { useEffect } from 'react';\nimport useLatest from '../useLatest';\n\nvar setRafTimeout = function setRafTimeout(callback, delay) {\n  if (delay === void 0) {\n    delay = 0;\n  }\n\n  if (typeof requestAnimationFrame === typeof undefined) {\n    return {\n      id: setTimeout(callback, delay)\n    };\n  }\n\n  var handle = {\n    id: 0\n  };\n  var startTime = new Date().getTime();\n\n  var loop = function loop() {\n    var current = new Date().getTime();\n\n    if (current - startTime >= delay) {\n      callback();\n    } else {\n      handle.id = requestAnimationFrame(loop);\n    }\n  };\n\n  handle.id = requestAnimationFrame(loop);\n  return handle;\n};\n\nfunction cancelAnimationFrameIsNotDefined(t) {\n  return typeof cancelAnimationFrame === typeof undefined;\n}\n\nvar clearRafTimeout = function clearRafTimeout(handle) {\n  if (cancelAnimationFrameIsNotDefined(handle.id)) {\n    return clearTimeout(handle.id);\n  }\n\n  cancelAnimationFrame(handle.id);\n};\n\nfunction useRafTimeout(fn, delay) {\n  var fnRef = useLatest(fn);\n  useEffect(function () {\n    if (typeof delay !== 'number' || delay < 0) return;\n    var timer = setRafTimeout(function () {\n      fnRef.current();\n    }, delay);\n    return function () {\n      clearRafTimeout(timer);\n    };\n  }, [delay]);\n}\n\nexport default useRafTimeout;"]},"metadata":{},"sourceType":"module"}