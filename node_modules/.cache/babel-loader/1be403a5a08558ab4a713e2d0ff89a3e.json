{"ast":null,"code":"import _defineProperty from \"D:\\\\react\\\\project0330\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"D:\\\\react\\\\project0330\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport React from 'react';\nimport classNames from 'classnames';\nimport { withNativeProps } from '../../utils/native-props';\nimport { mergeProps } from '../../utils/with-default-props';\nimport Badge from '../badge';\nimport SafeArea from '../safe-area';\nimport { usePropsValue } from '../../utils/use-props-value';\nexport var TabBarItem = function TabBarItem() {\n  return null;\n};\nvar classPrefix = \"adm-tab-bar\";\nvar defaultProps = {\n  safeArea: false\n};\nexport var TabBar = function TabBar(p) {\n  var _a;\n\n  var props = mergeProps(defaultProps, p);\n  var firstActiveKey = null;\n  var items = [];\n  React.Children.forEach(props.children, function (child, index) {\n    if (!React.isValidElement(child)) return;\n    var key = child.key;\n    if (typeof key !== 'string') return;\n\n    if (index === 0) {\n      firstActiveKey = key;\n    }\n\n    items.push(child);\n  });\n\n  var _usePropsValue = usePropsValue({\n    value: props.activeKey,\n    defaultValue: (_a = props.defaultActiveKey) !== null && _a !== void 0 ? _a : firstActiveKey,\n    onChange: function onChange(v) {\n      var _a;\n\n      if (v === null) return;\n      (_a = props.onChange) === null || _a === void 0 ? void 0 : _a.call(props, v);\n    }\n  }),\n      _usePropsValue2 = _slicedToArray(_usePropsValue, 2),\n      activeKey = _usePropsValue2[0],\n      setActiveKey = _usePropsValue2[1];\n\n  return withNativeProps(props, React.createElement(\"div\", {\n    className: classPrefix\n  }, React.createElement(\"div\", {\n    className: \"\".concat(classPrefix, \"-wrap\")\n  }, items.map(function (item) {\n    var active = item.key === activeKey;\n\n    function renderContent() {\n      var iconElement = item.props.icon && React.createElement(\"div\", {\n        className: \"\".concat(classPrefix, \"-item-icon\")\n      }, typeof item.props.icon === 'function' ? item.props.icon(active) : item.props.icon);\n      var titleElement = item.props.title && React.createElement(\"div\", {\n        className: \"\".concat(classPrefix, \"-item-title\")\n      }, typeof item.props.title === 'function' ? item.props.title(active) : item.props.title);\n\n      if (iconElement) {\n        return React.createElement(React.Fragment, null, React.createElement(Badge, {\n          content: item.props.badge,\n          className: \"\".concat(classPrefix, \"-icon-badge\")\n        }, iconElement), titleElement);\n      } else if (titleElement) {\n        return React.createElement(Badge, {\n          content: item.props.badge,\n          className: \"\".concat(classPrefix, \"-title-badge\")\n        }, titleElement);\n      }\n\n      return null;\n    }\n\n    return withNativeProps(item.props, React.createElement(\"div\", {\n      key: item.key,\n      onClick: function onClick() {\n        var key = item.key;\n        if (key === undefined || key === null) return;\n        setActiveKey(key.toString());\n      },\n      className: classNames(\"\".concat(classPrefix, \"-item\"), _defineProperty({}, \"\".concat(classPrefix, \"-item-active\"), active))\n    }, renderContent()));\n  })), props.safeArea && React.createElement(SafeArea, {\n    position: 'bottom'\n  })));\n};","map":null,"metadata":{},"sourceType":"module"}