{"ast":null,"code":"import React, { memo, useCallback, useEffect, useState } from 'react';\nimport { mergeProps } from '../../utils/with-default-props';\nimport { Wheel } from './wheel';\nimport { useColumnsExtend } from './columns-extend';\nimport { withNativeProps } from '../../utils/native-props';\nimport { useDebounceEffect } from 'ahooks';\nimport { defaultRenderLabel } from '../picker/picker-utils';\nconst classPrefix = `adm-picker-view`;\nconst defaultProps = {\n  defaultValue: [],\n  renderLabel: defaultRenderLabel\n};\nexport const PickerView = memo(p => {\n  const props = mergeProps(defaultProps, p);\n  const [innerValue, setInnerValue] = useState(props.value === undefined ? props.defaultValue : props.value); // Sync `value` to `innerValue`\n\n  useEffect(() => {\n    if (props.value === undefined) return; // Uncontrolled mode\n\n    if (props.value === innerValue) return;\n    setInnerValue(props.value);\n  }, [props.value]);\n  useEffect(() => {\n    if (props.value === innerValue) return;\n    const timeout = window.setTimeout(() => {\n      if (props.value !== undefined && props.value !== innerValue) {\n        setInnerValue(props.value);\n      }\n    }, 1000);\n    return () => {\n      window.clearTimeout(timeout);\n    };\n  }, [props.value, innerValue]);\n  const extend = useColumnsExtend(props.columns, innerValue);\n  const columns = extend.columns;\n  useDebounceEffect(() => {\n    var _a;\n\n    if (props.value === innerValue) return;\n    (_a = props.onChange) === null || _a === void 0 ? void 0 : _a.call(props, innerValue, extend);\n  }, [innerValue], {\n    wait: 0,\n    leading: false,\n    trailing: true\n  });\n  const handleSelect = useCallback((val, index) => {\n    setInnerValue(prev => {\n      const next = [...prev];\n      next[index] = val;\n      return next;\n    });\n  }, []);\n  return withNativeProps(props, React.createElement(\"div\", {\n    className: `${classPrefix}`\n  }, columns.map((column, index) => React.createElement(Wheel, {\n    key: index,\n    index: index,\n    column: column,\n    value: innerValue[index],\n    onSelect: handleSelect,\n    renderLabel: props.renderLabel\n  })), React.createElement(\"div\", {\n    className: `${classPrefix}-mask`\n  }, React.createElement(\"div\", {\n    className: `${classPrefix}-mask-top`\n  }), React.createElement(\"div\", {\n    className: `${classPrefix}-mask-middle`\n  }), React.createElement(\"div\", {\n    className: `${classPrefix}-mask-bottom`\n  }))));\n});\nPickerView.displayName = 'PickerView';","map":{"version":3,"sources":["D:/react/project0330/node_modules/antd-mobile/es/components/picker-view/picker-view.js"],"names":["React","memo","useCallback","useEffect","useState","mergeProps","Wheel","useColumnsExtend","withNativeProps","useDebounceEffect","defaultRenderLabel","classPrefix","defaultProps","defaultValue","renderLabel","PickerView","p","props","innerValue","setInnerValue","value","undefined","timeout","window","setTimeout","clearTimeout","extend","columns","_a","onChange","call","wait","leading","trailing","handleSelect","val","index","prev","next","createElement","className","map","column","key","onSelect","displayName"],"mappings":"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","sourcesContent":["import React, { memo, useCallback, useEffect, useState } from 'react';\nimport { mergeProps } from '../../utils/with-default-props';\nimport { Wheel } from './wheel';\nimport { useColumnsExtend } from './columns-extend';\nimport { withNativeProps } from '../../utils/native-props';\nimport { useDebounceEffect } from 'ahooks';\nimport { defaultRenderLabel } from '../picker/picker-utils';\nconst classPrefix = `adm-picker-view`;\nconst defaultProps = {\n  defaultValue: [],\n  renderLabel: defaultRenderLabel\n};\nexport const PickerView = memo(p => {\n  const props = mergeProps(defaultProps, p);\n  const [innerValue, setInnerValue] = useState(props.value === undefined ? props.defaultValue : props.value); // Sync `value` to `innerValue`\n\n  useEffect(() => {\n    if (props.value === undefined) return; // Uncontrolled mode\n\n    if (props.value === innerValue) return;\n    setInnerValue(props.value);\n  }, [props.value]);\n  useEffect(() => {\n    if (props.value === innerValue) return;\n    const timeout = window.setTimeout(() => {\n      if (props.value !== undefined && props.value !== innerValue) {\n        setInnerValue(props.value);\n      }\n    }, 1000);\n    return () => {\n      window.clearTimeout(timeout);\n    };\n  }, [props.value, innerValue]);\n  const extend = useColumnsExtend(props.columns, innerValue);\n  const columns = extend.columns;\n  useDebounceEffect(() => {\n    var _a;\n\n    if (props.value === innerValue) return;\n    (_a = props.onChange) === null || _a === void 0 ? void 0 : _a.call(props, innerValue, extend);\n  }, [innerValue], {\n    wait: 0,\n    leading: false,\n    trailing: true\n  });\n  const handleSelect = useCallback((val, index) => {\n    setInnerValue(prev => {\n      const next = [...prev];\n      next[index] = val;\n      return next;\n    });\n  }, []);\n  return withNativeProps(props, React.createElement(\"div\", {\n    className: `${classPrefix}`\n  }, columns.map((column, index) => React.createElement(Wheel, {\n    key: index,\n    index: index,\n    column: column,\n    value: innerValue[index],\n    onSelect: handleSelect,\n    renderLabel: props.renderLabel\n  })), React.createElement(\"div\", {\n    className: `${classPrefix}-mask`\n  }, React.createElement(\"div\", {\n    className: `${classPrefix}-mask-top`\n  }), React.createElement(\"div\", {\n    className: `${classPrefix}-mask-middle`\n  }), React.createElement(\"div\", {\n    className: `${classPrefix}-mask-bottom`\n  }))));\n});\nPickerView.displayName = 'PickerView';"]},"metadata":{},"sourceType":"module"}