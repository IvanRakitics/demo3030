{"ast":null,"code":"import _defineProperty from \"D:\\\\react\\\\project0330\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { withNativeProps } from '../../utils/native-props';\nimport { useShouldRender } from '../../utils/should-render';\nimport { DownFill } from 'antd-mobile-icons';\nvar classPrefix = \"adm-dropdown-item\";\n\nvar Item = function Item(props) {\n  var _classNames;\n\n  var _a;\n\n  var cls = classNames(classPrefix, (_classNames = {}, _defineProperty(_classNames, \"\".concat(classPrefix, \"-active\"), props.active), _defineProperty(_classNames, \"\".concat(classPrefix, \"-highlight\"), (_a = props.highlight) !== null && _a !== void 0 ? _a : props.active), _classNames));\n  return withNativeProps(props, React.createElement(\"div\", {\n    className: cls,\n    onClick: props.onClick\n  }, React.createElement(\"div\", {\n    className: \"\".concat(classPrefix, \"-title\")\n  }, React.createElement(\"span\", {\n    className: \"\".concat(classPrefix, \"-title-text\")\n  }, props.title), React.createElement(\"span\", {\n    className: classNames(\"\".concat(classPrefix, \"-title-arrow\"), _defineProperty({}, \"\".concat(classPrefix, \"-title-arrow-active\"), props.active))\n  }, props.arrow === undefined ? React.createElement(DownFill, null) : props.arrow))));\n};\n\nexport default Item;\nexport var ItemChildrenWrap = function ItemChildrenWrap(props) {\n  var _props$active = props.active,\n      active = _props$active === void 0 ? false : _props$active;\n  var shouldRender = useShouldRender(active, props.forceRender, props.destroyOnClose);\n  var cls = classNames(\"\".concat(classPrefix, \"-content\"), _defineProperty({}, \"\".concat(classPrefix, \"-content-hidden\"), !active));\n  return shouldRender ? React.createElement(\"div\", {\n    className: cls,\n    onClick: props.onClick\n  }, props.children) : null;\n};","map":null,"metadata":{},"sourceType":"module"}