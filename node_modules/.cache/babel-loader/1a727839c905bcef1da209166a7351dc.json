{"ast":null,"code":"import React, { useState, useEffect, useMemo } from 'react';\nimport classNames from 'classnames';\nimport Tabs from '../tabs';\nimport CheckList from '../check-list';\nimport { withNativeProps } from '../../utils/native-props';\nimport { mergeProps } from '../../utils/with-default-props';\nimport { usePropsValue } from '../../utils/use-props-value';\nimport { useCascaderValueExtend } from './use-cascader-value-extend';\nimport { useConfig } from '../config-provider';\nimport { optionSkeleton } from './option-skeleton';\nimport Skeleton from '../skeleton';\nconst classPrefix = `adm-cascader-view`;\nconst defaultProps = {\n  defaultValue: []\n};\nexport const CascaderView = p => {\n  const {\n    locale\n  } = useConfig();\n  const props = mergeProps(defaultProps, {\n    placeholder: locale.Cascader.placeholder\n  }, p);\n  const [value, setValue] = usePropsValue(Object.assign(Object.assign({}, props), {\n    onChange: val => {\n      var _a;\n\n      (_a = props.onChange) === null || _a === void 0 ? void 0 : _a.call(props, val, generateValueExtend(val));\n    }\n  }));\n  const [tabActiveKey, setTabActiveKey] = useState(0);\n  const generateValueExtend = useCascaderValueExtend(props.options);\n  const levels = useMemo(() => {\n    const ret = [];\n    let currentOptions = props.options;\n    let reachedEnd = false;\n\n    for (const v of value) {\n      const target = currentOptions.find(option => option.value === v);\n      ret.push({\n        selected: target,\n        options: currentOptions\n      });\n\n      if (!target || !target.children) {\n        reachedEnd = true;\n        break;\n      }\n\n      currentOptions = target.children;\n    }\n\n    if (!reachedEnd) {\n      ret.push({\n        selected: undefined,\n        options: currentOptions\n      });\n    }\n\n    return ret;\n  }, [value, props.options]);\n  useEffect(() => {\n    setTabActiveKey(levels.length - 1);\n  }, [value]);\n  useEffect(() => {\n    const max = levels.length - 1;\n\n    if (tabActiveKey > max) {\n      setTabActiveKey(max);\n    }\n  }, [tabActiveKey, levels]);\n\n  const onItemSelect = (selectValue, depth) => {\n    const next = value.slice(0, depth);\n\n    if (selectValue !== undefined) {\n      next[depth] = selectValue;\n    }\n\n    setValue(next);\n  };\n\n  return withNativeProps(props, React.createElement(\"div\", {\n    className: classPrefix\n  }, React.createElement(Tabs, {\n    activeKey: tabActiveKey.toString(),\n    onChange: key => setTabActiveKey(parseInt(key)),\n    stretch: false,\n    className: `${classPrefix}-tabs`\n  }, levels.map((level, index) => {\n    const selected = level.selected;\n    return React.createElement(Tabs.Tab, {\n      key: index,\n      title: React.createElement(\"div\", {\n        className: `${classPrefix}-header-title`\n      }, selected ? selected.label : props.placeholder),\n      forceRender: true\n    }, React.createElement(\"div\", {\n      className: `${classPrefix}-content`\n    }, level.options === optionSkeleton ? React.createElement(\"div\", {\n      className: `${classPrefix}-skeleton`\n    }, React.createElement(Skeleton, {\n      className: `${classPrefix}-skeleton-line-1`,\n      animated: true\n    }), React.createElement(Skeleton, {\n      className: `${classPrefix}-skeleton-line-2`,\n      animated: true\n    }), React.createElement(Skeleton, {\n      className: `${classPrefix}-skeleton-line-3`,\n      animated: true\n    }), React.createElement(Skeleton, {\n      className: `${classPrefix}-skeleton-line-4`,\n      animated: true\n    })) : React.createElement(CheckList, {\n      value: [value[index]],\n      onChange: selectValue => onItemSelect(selectValue[0], index)\n    }, level.options.map(option => {\n      const active = value[index] === option.value;\n      return React.createElement(CheckList.Item, {\n        value: option.value,\n        key: option.value,\n        disabled: option.disabled,\n        className: classNames(`${classPrefix}-item`, {\n          [`${classPrefix}-item-active`]: active\n        })\n      }, option.label);\n    }))));\n  }))));\n};","map":{"version":3,"sources":["D:/react/project0330/node_modules/antd-mobile/es/components/cascader-view/cascader-view.js"],"names":["React","useState","useEffect","useMemo","classNames","Tabs","CheckList","withNativeProps","mergeProps","usePropsValue","useCascaderValueExtend","useConfig","optionSkeleton","Skeleton","classPrefix","defaultProps","defaultValue","CascaderView","p","locale","props","placeholder","Cascader","value","setValue","Object","assign","onChange","val","_a","call","generateValueExtend","tabActiveKey","setTabActiveKey","options","levels","ret","currentOptions","reachedEnd","v","target","find","option","push","selected","children","undefined","length","max","onItemSelect","selectValue","depth","next","slice","createElement","className","activeKey","toString","key","parseInt","stretch","map","level","index","Tab","title","label","forceRender","animated","active","Item","disabled"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\nimport classNames from 'classnames';\nimport Tabs from '../tabs';\nimport CheckList from '../check-list';\nimport { withNativeProps } from '../../utils/native-props';\nimport { mergeProps } from '../../utils/with-default-props';\nimport { usePropsValue } from '../../utils/use-props-value';\nimport { useCascaderValueExtend } from './use-cascader-value-extend';\nimport { useConfig } from '../config-provider';\nimport { optionSkeleton } from './option-skeleton';\nimport Skeleton from '../skeleton';\nconst classPrefix = `adm-cascader-view`;\nconst defaultProps = {\n  defaultValue: []\n};\nexport const CascaderView = p => {\n  const {\n    locale\n  } = useConfig();\n  const props = mergeProps(defaultProps, {\n    placeholder: locale.Cascader.placeholder\n  }, p);\n  const [value, setValue] = usePropsValue(Object.assign(Object.assign({}, props), {\n    onChange: val => {\n      var _a;\n\n      (_a = props.onChange) === null || _a === void 0 ? void 0 : _a.call(props, val, generateValueExtend(val));\n    }\n  }));\n  const [tabActiveKey, setTabActiveKey] = useState(0);\n  const generateValueExtend = useCascaderValueExtend(props.options);\n  const levels = useMemo(() => {\n    const ret = [];\n    let currentOptions = props.options;\n    let reachedEnd = false;\n\n    for (const v of value) {\n      const target = currentOptions.find(option => option.value === v);\n      ret.push({\n        selected: target,\n        options: currentOptions\n      });\n\n      if (!target || !target.children) {\n        reachedEnd = true;\n        break;\n      }\n\n      currentOptions = target.children;\n    }\n\n    if (!reachedEnd) {\n      ret.push({\n        selected: undefined,\n        options: currentOptions\n      });\n    }\n\n    return ret;\n  }, [value, props.options]);\n  useEffect(() => {\n    setTabActiveKey(levels.length - 1);\n  }, [value]);\n  useEffect(() => {\n    const max = levels.length - 1;\n\n    if (tabActiveKey > max) {\n      setTabActiveKey(max);\n    }\n  }, [tabActiveKey, levels]);\n\n  const onItemSelect = (selectValue, depth) => {\n    const next = value.slice(0, depth);\n\n    if (selectValue !== undefined) {\n      next[depth] = selectValue;\n    }\n\n    setValue(next);\n  };\n\n  return withNativeProps(props, React.createElement(\"div\", {\n    className: classPrefix\n  }, React.createElement(Tabs, {\n    activeKey: tabActiveKey.toString(),\n    onChange: key => setTabActiveKey(parseInt(key)),\n    stretch: false,\n    className: `${classPrefix}-tabs`\n  }, levels.map((level, index) => {\n    const selected = level.selected;\n    return React.createElement(Tabs.Tab, {\n      key: index,\n      title: React.createElement(\"div\", {\n        className: `${classPrefix}-header-title`\n      }, selected ? selected.label : props.placeholder),\n      forceRender: true\n    }, React.createElement(\"div\", {\n      className: `${classPrefix}-content`\n    }, level.options === optionSkeleton ? React.createElement(\"div\", {\n      className: `${classPrefix}-skeleton`\n    }, React.createElement(Skeleton, {\n      className: `${classPrefix}-skeleton-line-1`,\n      animated: true\n    }), React.createElement(Skeleton, {\n      className: `${classPrefix}-skeleton-line-2`,\n      animated: true\n    }), React.createElement(Skeleton, {\n      className: `${classPrefix}-skeleton-line-3`,\n      animated: true\n    }), React.createElement(Skeleton, {\n      className: `${classPrefix}-skeleton-line-4`,\n      animated: true\n    })) : React.createElement(CheckList, {\n      value: [value[index]],\n      onChange: selectValue => onItemSelect(selectValue[0], index)\n    }, level.options.map(option => {\n      const active = value[index] === option.value;\n      return React.createElement(CheckList.Item, {\n        value: option.value,\n        key: option.value,\n        disabled: option.disabled,\n        className: classNames(`${classPrefix}-item`, {\n          [`${classPrefix}-item-active`]: active\n        })\n      }, option.label);\n    }))));\n  }))));\n};"]},"metadata":{},"sourceType":"module"}