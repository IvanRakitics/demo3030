{"ast":null,"code":"import { useClickAway } from 'ahooks';\nimport classNames from 'classnames';\nimport React, { cloneElement, useEffect, useRef, useState, forwardRef, useImperativeHandle } from 'react';\nimport Popup from '../popup';\nimport { ItemChildrenWrap } from './item';\nimport { withNativeProps } from '../../utils/native-props';\nimport { mergeProps } from '../../utils/with-default-props';\nimport { usePropsValue } from '../../utils/use-props-value';\nconst classPrefix = `adm-dropdown`;\nconst defaultProps = {\n  defaultActiveKey: null,\n  closeOnMaskClick: true,\n  closeOnClickAway: false\n};\nconst Dropdown = forwardRef((p, ref) => {\n  const props = mergeProps(defaultProps, p);\n  const [value, setValue] = usePropsValue({\n    value: props.activeKey,\n    defaultValue: props.defaultActiveKey,\n    onChange: props.onChange\n  });\n  const navRef = useRef(null);\n  const contentRef = useRef(null); // 点击外部区域，关闭\n\n  useClickAway(() => {\n    if (!props.closeOnClickAway) return;\n    setValue(null);\n  }, [navRef, contentRef]); // 计算 navs 的 top 值\n\n  const [top, setTop] = useState();\n  const containerRef = useRef(null);\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return;\n\n    if (value) {\n      const rect = container.getBoundingClientRect();\n      setTop(rect.bottom);\n    }\n  }, [value]);\n\n  const changeActive = key => {\n    if (value === key) {\n      setValue(null);\n    } else {\n      setValue(key);\n    }\n  };\n\n  let popupForceRender = false;\n  const items = [];\n  const navs = React.Children.map(props.children, child => {\n    if (React.isValidElement(child)) {\n      const childProps = Object.assign(Object.assign({}, child.props), {\n        onClick: () => {\n          changeActive(child.key);\n        },\n        active: child.key === value,\n        arrow: child.props.arrow === undefined ? props.arrow : child.props.arrow\n      });\n      items.push(child);\n      if (child.props.forceRender) popupForceRender = true;\n      return cloneElement(child, childProps);\n    } else {\n      return child;\n    }\n  });\n  useImperativeHandle(ref, () => ({\n    close: () => {\n      setValue(null);\n    }\n  }), [setValue]);\n  return withNativeProps(props, React.createElement(\"div\", {\n    className: classNames(classPrefix, {\n      [`${classPrefix}-open`]: !!value\n    }),\n    ref: containerRef\n  }, React.createElement(\"div\", {\n    className: `${classPrefix}-nav`,\n    ref: navRef\n  }, navs), React.createElement(Popup, {\n    visible: !!value,\n    position: 'top',\n    className: `${classPrefix}-popup`,\n    maskClassName: `${classPrefix}-popup-mask`,\n    bodyClassName: `${classPrefix}-popup-body`,\n    style: {\n      top\n    },\n    forceRender: popupForceRender,\n    onMaskClick: props.closeOnMaskClick ? () => {\n      changeActive(null);\n    } : undefined\n  }, React.createElement(\"div\", {\n    ref: contentRef\n  }, items.map(item => {\n    const isActive = item.key === value;\n    return React.createElement(ItemChildrenWrap, {\n      key: item.key,\n      active: isActive,\n      forceRender: item.props.forceRender,\n      destroyOnClose: item.props.destroyOnClose\n    }, item.props.children);\n  })))));\n});\nexport default Dropdown;","map":{"version":3,"sources":["D:/react/project0330/node_modules/antd-mobile/es/components/dropdown/dropdown.js"],"names":["useClickAway","classNames","React","cloneElement","useEffect","useRef","useState","forwardRef","useImperativeHandle","Popup","ItemChildrenWrap","withNativeProps","mergeProps","usePropsValue","classPrefix","defaultProps","defaultActiveKey","closeOnMaskClick","closeOnClickAway","Dropdown","p","ref","props","value","setValue","activeKey","defaultValue","onChange","navRef","contentRef","top","setTop","containerRef","container","current","rect","getBoundingClientRect","bottom","changeActive","key","popupForceRender","items","navs","Children","map","children","child","isValidElement","childProps","Object","assign","onClick","active","arrow","undefined","push","forceRender","close","createElement","className","visible","position","maskClassName","bodyClassName","style","onMaskClick","item","isActive","destroyOnClose"],"mappings":"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","sourcesContent":["import { useClickAway } from 'ahooks';\nimport classNames from 'classnames';\nimport React, { cloneElement, useEffect, useRef, useState, forwardRef, useImperativeHandle } from 'react';\nimport Popup from '../popup';\nimport { ItemChildrenWrap } from './item';\nimport { withNativeProps } from '../../utils/native-props';\nimport { mergeProps } from '../../utils/with-default-props';\nimport { usePropsValue } from '../../utils/use-props-value';\nconst classPrefix = `adm-dropdown`;\nconst defaultProps = {\n  defaultActiveKey: null,\n  closeOnMaskClick: true,\n  closeOnClickAway: false\n};\nconst Dropdown = forwardRef((p, ref) => {\n  const props = mergeProps(defaultProps, p);\n  const [value, setValue] = usePropsValue({\n    value: props.activeKey,\n    defaultValue: props.defaultActiveKey,\n    onChange: props.onChange\n  });\n  const navRef = useRef(null);\n  const contentRef = useRef(null); // 点击外部区域，关闭\n\n  useClickAway(() => {\n    if (!props.closeOnClickAway) return;\n    setValue(null);\n  }, [navRef, contentRef]); // 计算 navs 的 top 值\n\n  const [top, setTop] = useState();\n  const containerRef = useRef(null);\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return;\n\n    if (value) {\n      const rect = container.getBoundingClientRect();\n      setTop(rect.bottom);\n    }\n  }, [value]);\n\n  const changeActive = key => {\n    if (value === key) {\n      setValue(null);\n    } else {\n      setValue(key);\n    }\n  };\n\n  let popupForceRender = false;\n  const items = [];\n  const navs = React.Children.map(props.children, child => {\n    if (React.isValidElement(child)) {\n      const childProps = Object.assign(Object.assign({}, child.props), {\n        onClick: () => {\n          changeActive(child.key);\n        },\n        active: child.key === value,\n        arrow: child.props.arrow === undefined ? props.arrow : child.props.arrow\n      });\n      items.push(child);\n      if (child.props.forceRender) popupForceRender = true;\n      return cloneElement(child, childProps);\n    } else {\n      return child;\n    }\n  });\n  useImperativeHandle(ref, () => ({\n    close: () => {\n      setValue(null);\n    }\n  }), [setValue]);\n  return withNativeProps(props, React.createElement(\"div\", {\n    className: classNames(classPrefix, {\n      [`${classPrefix}-open`]: !!value\n    }),\n    ref: containerRef\n  }, React.createElement(\"div\", {\n    className: `${classPrefix}-nav`,\n    ref: navRef\n  }, navs), React.createElement(Popup, {\n    visible: !!value,\n    position: 'top',\n    className: `${classPrefix}-popup`,\n    maskClassName: `${classPrefix}-popup-mask`,\n    bodyClassName: `${classPrefix}-popup-body`,\n    style: {\n      top\n    },\n    forceRender: popupForceRender,\n    onMaskClick: props.closeOnMaskClick ? () => {\n      changeActive(null);\n    } : undefined\n  }, React.createElement(\"div\", {\n    ref: contentRef\n  }, items.map(item => {\n    const isActive = item.key === value;\n    return React.createElement(ItemChildrenWrap, {\n      key: item.key,\n      active: isActive,\n      forceRender: item.props.forceRender,\n      destroyOnClose: item.props.destroyOnClose\n    }, item.props.children);\n  })))));\n});\nexport default Dropdown;"]},"metadata":{},"sourceType":"module"}