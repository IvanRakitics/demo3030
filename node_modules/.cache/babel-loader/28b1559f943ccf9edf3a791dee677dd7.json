{"ast":null,"code":"const typeTemplate = '${label} is not a valid ${type}';\nexport const base = {\n  locale: 'en',\n  common: {\n    confirm: 'Confirm',\n    cancel: 'Cancel',\n    loading: 'Loading...'\n  },\n  Calendar: {\n    markItems: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n    renderYearAndMonth: (year, month) => `${year}/${month}`\n  },\n  Cascader: {\n    placeholder: 'Selecting'\n  },\n  Dialog: {\n    ok: 'OK'\n  },\n  ErrorBlock: {\n    default: {\n      title: 'Oops, something went wrong',\n      description: 'Please wait a minute and try again'\n    },\n    busy: {\n      title: 'Oops, not loading',\n      description: 'Try to refresh the page'\n    },\n    disconnected: {\n      title: 'Network is busy',\n      description: 'Try to refresh the page'\n    },\n    empty: {\n      title: \"Hmm, couldn't find that...\",\n      description: 'Want to try a new search?'\n    }\n  },\n  Form: {\n    required: 'Required',\n    optional: 'Optional',\n    defaultValidateMessages: {\n      default: 'Field validation error for ${label}',\n      required: 'Please enter ${label}',\n      enum: '${label} must be one of [${enum}]',\n      whitespace: '${label} cannot be a blank character',\n      date: {\n        format: '${label} date format is invalid',\n        parse: '${label} cannot be converted to a date',\n        invalid: '${label} is an invalid date'\n      },\n      types: {\n        string: typeTemplate,\n        method: typeTemplate,\n        array: typeTemplate,\n        object: typeTemplate,\n        number: typeTemplate,\n        date: typeTemplate,\n        boolean: typeTemplate,\n        integer: typeTemplate,\n        float: typeTemplate,\n        regexp: typeTemplate,\n        email: typeTemplate,\n        url: typeTemplate,\n        hex: typeTemplate\n      },\n      string: {\n        len: '${label} must be ${len} characters',\n        min: '${label} must be at least ${min} characters',\n        max: '${label} must be up to ${max} characters',\n        range: '${label} must be between ${min}-${max} characters'\n      },\n      number: {\n        len: '${label} must be equal to ${len}',\n        min: '${label} must be minimum ${min}',\n        max: '${label} must be maximum ${max}',\n        range: '${label} must be between ${min}-${max}'\n      },\n      array: {\n        len: 'Must be ${len} ${label}',\n        min: 'At least ${min} ${label}',\n        max: 'At most ${max} ${label}',\n        range: 'The amount of ${label} must be between ${min}-${max}'\n      },\n      pattern: {\n        mismatch: '${label} does not match the pattern ${pattern}'\n      }\n    }\n  },\n  ImageUploader: {\n    uploading: 'Uploading...'\n  },\n  Mask: {\n    name: 'Mask'\n  },\n  Modal: {\n    ok: 'OK'\n  },\n  PullToRefresh: {\n    pulling: 'Scroll down to refresh',\n    canRelease: 'Release to refresh immediately',\n    complete: 'Refresh successful'\n  }\n};","map":{"version":3,"sources":["D:/react/project0330/node_modules/antd-mobile/es/locales/base.js"],"names":["typeTemplate","base","locale","common","confirm","cancel","loading","Calendar","markItems","renderYearAndMonth","year","month","Cascader","placeholder","Dialog","ok","ErrorBlock","default","title","description","busy","disconnected","empty","Form","required","optional","defaultValidateMessages","enum","whitespace","date","format","parse","invalid","types","string","method","array","object","number","boolean","integer","float","regexp","email","url","hex","len","min","max","range","pattern","mismatch","ImageUploader","uploading","Mask","name","Modal","PullToRefresh","pulling","canRelease","complete"],"mappings":"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","sourcesContent":["const typeTemplate = '${label} is not a valid ${type}';\nexport const base = {\n  locale: 'en',\n  common: {\n    confirm: 'Confirm',\n    cancel: 'Cancel',\n    loading: 'Loading...'\n  },\n  Calendar: {\n    markItems: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n    renderYearAndMonth: (year, month) => `${year}/${month}`\n  },\n  Cascader: {\n    placeholder: 'Selecting'\n  },\n  Dialog: {\n    ok: 'OK'\n  },\n  ErrorBlock: {\n    default: {\n      title: 'Oops, something went wrong',\n      description: 'Please wait a minute and try again'\n    },\n    busy: {\n      title: 'Oops, not loading',\n      description: 'Try to refresh the page'\n    },\n    disconnected: {\n      title: 'Network is busy',\n      description: 'Try to refresh the page'\n    },\n    empty: {\n      title: \"Hmm, couldn't find that...\",\n      description: 'Want to try a new search?'\n    }\n  },\n  Form: {\n    required: 'Required',\n    optional: 'Optional',\n    defaultValidateMessages: {\n      default: 'Field validation error for ${label}',\n      required: 'Please enter ${label}',\n      enum: '${label} must be one of [${enum}]',\n      whitespace: '${label} cannot be a blank character',\n      date: {\n        format: '${label} date format is invalid',\n        parse: '${label} cannot be converted to a date',\n        invalid: '${label} is an invalid date'\n      },\n      types: {\n        string: typeTemplate,\n        method: typeTemplate,\n        array: typeTemplate,\n        object: typeTemplate,\n        number: typeTemplate,\n        date: typeTemplate,\n        boolean: typeTemplate,\n        integer: typeTemplate,\n        float: typeTemplate,\n        regexp: typeTemplate,\n        email: typeTemplate,\n        url: typeTemplate,\n        hex: typeTemplate\n      },\n      string: {\n        len: '${label} must be ${len} characters',\n        min: '${label} must be at least ${min} characters',\n        max: '${label} must be up to ${max} characters',\n        range: '${label} must be between ${min}-${max} characters'\n      },\n      number: {\n        len: '${label} must be equal to ${len}',\n        min: '${label} must be minimum ${min}',\n        max: '${label} must be maximum ${max}',\n        range: '${label} must be between ${min}-${max}'\n      },\n      array: {\n        len: 'Must be ${len} ${label}',\n        min: 'At least ${min} ${label}',\n        max: 'At most ${max} ${label}',\n        range: 'The amount of ${label} must be between ${min}-${max}'\n      },\n      pattern: {\n        mismatch: '${label} does not match the pattern ${pattern}'\n      }\n    }\n  },\n  ImageUploader: {\n    uploading: 'Uploading...'\n  },\n  Mask: {\n    name: 'Mask'\n  },\n  Modal: {\n    ok: 'OK'\n  },\n  PullToRefresh: {\n    pulling: 'Scroll down to refresh',\n    canRelease: 'Release to refresh immediately',\n    complete: 'Refresh successful'\n  }\n};"]},"metadata":{},"sourceType":"module"}