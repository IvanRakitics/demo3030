{"ast":null,"code":"import _defineProperty from \"D:\\\\react\\\\project0330\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"D:\\\\react\\\\project0330\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport React from 'react';\nimport classNames from 'classnames';\nimport Badge from '../badge';\nimport { withNativeProps } from '../../utils/native-props';\nimport { usePropsValue } from '../../utils/use-props-value';\nimport { Corner } from './corner';\nvar classPrefix = \"adm-side-bar\";\nexport var SideBarItem = function SideBarItem() {\n  return null;\n};\nexport var SideBar = function SideBar(props) {\n  var _a;\n\n  var firstActiveKey = null;\n  var items = [];\n  React.Children.forEach(props.children, function (child, index) {\n    if (!React.isValidElement(child)) return;\n    var key = child.key;\n    if (typeof key !== 'string') return;\n\n    if (index === 0) {\n      firstActiveKey = key;\n    }\n\n    items.push(child);\n  });\n\n  var _usePropsValue = usePropsValue({\n    value: props.activeKey,\n    defaultValue: (_a = props.defaultActiveKey) !== null && _a !== void 0 ? _a : firstActiveKey,\n    onChange: function onChange(v) {\n      var _a;\n\n      if (v === null) return;\n      (_a = props.onChange) === null || _a === void 0 ? void 0 : _a.call(props, v);\n    }\n  }),\n      _usePropsValue2 = _slicedToArray(_usePropsValue, 2),\n      activeKey = _usePropsValue2[0],\n      setActiveKey = _usePropsValue2[1];\n\n  var lastItem = items[items.length - 1];\n  var isLastItemActive = lastItem && lastItem.key === activeKey;\n  return withNativeProps(props, React.createElement(\"div\", {\n    className: classPrefix\n  }, React.createElement(\"div\", {\n    className: \"\".concat(classPrefix, \"-items\")\n  }, items.map(function (item, index) {\n    var _classNames;\n\n    var active = item.key === activeKey;\n    var isActiveNextSibling = items[index - 1] && items[index - 1].key === activeKey;\n    var isActivePreviousSibling = items[index + 1] && items[index + 1].key === activeKey;\n    return withNativeProps(item.props, React.createElement(\"div\", {\n      key: item.key,\n      onClick: function onClick() {\n        var key = item.key;\n        if (key === undefined || key === null || item.props.disabled) return;\n        setActiveKey(key.toString());\n      },\n      className: classNames(\"\".concat(classPrefix, \"-item\"), (_classNames = {}, _defineProperty(_classNames, \"\".concat(classPrefix, \"-item-active\"), active), _defineProperty(_classNames, \"\".concat(classPrefix, \"-item-disabled\"), item.props.disabled), _classNames))\n    }, React.createElement(React.Fragment, null, isActiveNextSibling && React.createElement(Corner, {\n      className: \"\".concat(classPrefix, \"-item-corner \").concat(classPrefix, \"-item-corner-top\")\n    }), isActivePreviousSibling && React.createElement(Corner, {\n      className: \"\".concat(classPrefix, \"-item-corner \").concat(classPrefix, \"-item-corner-bottom\")\n    })), React.createElement(Badge, {\n      content: item.props.badge,\n      className: \"\".concat(classPrefix, \"-badge\")\n    }, React.createElement(\"div\", {\n      className: \"\".concat(classPrefix, \"-item-title\")\n    }, active && React.createElement(\"div\", {\n      className: \"\".concat(classPrefix, \"-item-highlight\")\n    }), item.props.title))));\n  })), React.createElement(\"div\", {\n    className: classNames(\"\".concat(classPrefix, \"-extra-space\"), isLastItemActive && \"\".concat(classPrefix, \"-item-active-next-sibling\"))\n  }, isLastItemActive && React.createElement(Corner, {\n    className: \"\".concat(classPrefix, \"-item-corner \").concat(classPrefix, \"-item-corner-top\")\n  }))));\n};","map":null,"metadata":{},"sourceType":"module"}