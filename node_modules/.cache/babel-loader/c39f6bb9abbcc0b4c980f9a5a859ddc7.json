{"ast":null,"code":"import React, { useRef, useEffect } from 'react';\nimport classNames from 'classnames';\nimport { animated, useSpring } from '@react-spring/web';\nimport { useThrottleFn } from 'ahooks';\nconst classPrefix = `adm-scroll-mask`;\nexport const ScrollMask = props => {\n  const maskRef = useRef(null);\n  const [{\n    leftMaskOpacity,\n    rightMaskOpacity\n  }, api] = useSpring(() => ({\n    leftMaskOpacity: 0,\n    rightMaskOpacity: 0,\n    config: {\n      clamp: true\n    }\n  }));\n  const {\n    run: updateMask\n  } = useThrottleFn(function () {\n    let immediate = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    const mask = maskRef.current;\n    if (!mask) return;\n    const scrollEl = props.scrollTrackRef.current;\n    if (!scrollEl) return;\n    const scrollLeft = scrollEl.scrollLeft;\n    const showLeftMask = scrollLeft > 0;\n    const showRightMask = scrollLeft + scrollEl.offsetWidth < scrollEl.scrollWidth;\n    api.start({\n      leftMaskOpacity: showLeftMask ? 1 : 0,\n      rightMaskOpacity: showRightMask ? 1 : 0,\n      immediate\n    });\n  }, {\n    wait: 100,\n    trailing: true,\n    leading: true\n  });\n  useEffect(() => {\n    updateMask(true);\n  }, []);\n  useEffect(() => {\n    const scrollEl = props.scrollTrackRef.current;\n    if (!scrollEl) return;\n    scrollEl.addEventListener('scroll', updateMask);\n    return () => scrollEl.removeEventListener('scroll', updateMask);\n  }, []);\n  return React.createElement(React.Fragment, null, React.createElement(animated.div, {\n    ref: maskRef,\n    className: classNames(classPrefix, `${classPrefix}-left`),\n    style: {\n      opacity: leftMaskOpacity\n    }\n  }), React.createElement(animated.div, {\n    className: classNames(classPrefix, `${classPrefix}-right`),\n    style: {\n      opacity: rightMaskOpacity\n    }\n  }));\n};","map":{"version":3,"sources":["D:/react/project0330/node_modules/antd-mobile/es/components/scroll-mask/scroll-mask.js"],"names":["React","useRef","useEffect","classNames","animated","useSpring","useThrottleFn","classPrefix","ScrollMask","props","maskRef","leftMaskOpacity","rightMaskOpacity","api","config","clamp","run","updateMask","immediate","mask","current","scrollEl","scrollTrackRef","scrollLeft","showLeftMask","showRightMask","offsetWidth","scrollWidth","start","wait","trailing","leading","addEventListener","removeEventListener","createElement","Fragment","div","ref","className","style","opacity"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,QAAyC,OAAzC;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,mBAApC;AACA,SAASC,aAAT,QAA8B,QAA9B;AACA,MAAMC,WAAW,GAAI,iBAArB;AACA,OAAO,MAAMC,UAAU,GAAGC,KAAK,IAAI;AACjC,QAAMC,OAAO,GAAGT,MAAM,CAAC,IAAD,CAAtB;AACA,QAAM,CAAC;AACLU,IAAAA,eADK;AAELC,IAAAA;AAFK,GAAD,EAGHC,GAHG,IAGIR,SAAS,CAAC,OAAO;AACzBM,IAAAA,eAAe,EAAE,CADQ;AAEzBC,IAAAA,gBAAgB,EAAE,CAFO;AAGzBE,IAAAA,MAAM,EAAE;AACNC,MAAAA,KAAK,EAAE;AADD;AAHiB,GAAP,CAAD,CAHnB;AAUA,QAAM;AACJC,IAAAA,GAAG,EAAEC;AADD,MAEFX,aAAa,CAAC,YAAuB;AAAA,QAAtBY,SAAsB,uEAAV,KAAU;AACvC,UAAMC,IAAI,GAAGT,OAAO,CAACU,OAArB;AACA,QAAI,CAACD,IAAL,EAAW;AACX,UAAME,QAAQ,GAAGZ,KAAK,CAACa,cAAN,CAAqBF,OAAtC;AACA,QAAI,CAACC,QAAL,EAAe;AACf,UAAME,UAAU,GAAGF,QAAQ,CAACE,UAA5B;AACA,UAAMC,YAAY,GAAGD,UAAU,GAAG,CAAlC;AACA,UAAME,aAAa,GAAGF,UAAU,GAAGF,QAAQ,CAACK,WAAtB,GAAoCL,QAAQ,CAACM,WAAnE;AACAd,IAAAA,GAAG,CAACe,KAAJ,CAAU;AACRjB,MAAAA,eAAe,EAAEa,YAAY,GAAG,CAAH,GAAO,CAD5B;AAERZ,MAAAA,gBAAgB,EAAEa,aAAa,GAAG,CAAH,GAAO,CAF9B;AAGRP,MAAAA;AAHQ,KAAV;AAKD,GAbgB,EAad;AACDW,IAAAA,IAAI,EAAE,GADL;AAEDC,IAAAA,QAAQ,EAAE,IAFT;AAGDC,IAAAA,OAAO,EAAE;AAHR,GAbc,CAFjB;AAoBA7B,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,UAAU,CAAC,IAAD,CAAV;AACD,GAFQ,EAEN,EAFM,CAAT;AAGAf,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMmB,QAAQ,GAAGZ,KAAK,CAACa,cAAN,CAAqBF,OAAtC;AACA,QAAI,CAACC,QAAL,EAAe;AACfA,IAAAA,QAAQ,CAACW,gBAAT,CAA0B,QAA1B,EAAoCf,UAApC;AACA,WAAO,MAAMI,QAAQ,CAACY,mBAAT,CAA6B,QAA7B,EAAuChB,UAAvC,CAAb;AACD,GALQ,EAKN,EALM,CAAT;AAMA,SAAOjB,KAAK,CAACkC,aAAN,CAAoBlC,KAAK,CAACmC,QAA1B,EAAoC,IAApC,EAA0CnC,KAAK,CAACkC,aAAN,CAAoB9B,QAAQ,CAACgC,GAA7B,EAAkC;AACjFC,IAAAA,GAAG,EAAE3B,OAD4E;AAEjF4B,IAAAA,SAAS,EAAEnC,UAAU,CAACI,WAAD,EAAe,GAAEA,WAAY,OAA7B,CAF4D;AAGjFgC,IAAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAE7B;AADJ;AAH0E,GAAlC,CAA1C,EAMHX,KAAK,CAACkC,aAAN,CAAoB9B,QAAQ,CAACgC,GAA7B,EAAkC;AACpCE,IAAAA,SAAS,EAAEnC,UAAU,CAACI,WAAD,EAAe,GAAEA,WAAY,QAA7B,CADe;AAEpCgC,IAAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAE5B;AADJ;AAF6B,GAAlC,CANG,CAAP;AAYD,CArDM","sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport classNames from 'classnames';\nimport { animated, useSpring } from '@react-spring/web';\nimport { useThrottleFn } from 'ahooks';\nconst classPrefix = `adm-scroll-mask`;\nexport const ScrollMask = props => {\n  const maskRef = useRef(null);\n  const [{\n    leftMaskOpacity,\n    rightMaskOpacity\n  }, api] = useSpring(() => ({\n    leftMaskOpacity: 0,\n    rightMaskOpacity: 0,\n    config: {\n      clamp: true\n    }\n  }));\n  const {\n    run: updateMask\n  } = useThrottleFn((immediate = false) => {\n    const mask = maskRef.current;\n    if (!mask) return;\n    const scrollEl = props.scrollTrackRef.current;\n    if (!scrollEl) return;\n    const scrollLeft = scrollEl.scrollLeft;\n    const showLeftMask = scrollLeft > 0;\n    const showRightMask = scrollLeft + scrollEl.offsetWidth < scrollEl.scrollWidth;\n    api.start({\n      leftMaskOpacity: showLeftMask ? 1 : 0,\n      rightMaskOpacity: showRightMask ? 1 : 0,\n      immediate\n    });\n  }, {\n    wait: 100,\n    trailing: true,\n    leading: true\n  });\n  useEffect(() => {\n    updateMask(true);\n  }, []);\n  useEffect(() => {\n    const scrollEl = props.scrollTrackRef.current;\n    if (!scrollEl) return;\n    scrollEl.addEventListener('scroll', updateMask);\n    return () => scrollEl.removeEventListener('scroll', updateMask);\n  }, []);\n  return React.createElement(React.Fragment, null, React.createElement(animated.div, {\n    ref: maskRef,\n    className: classNames(classPrefix, `${classPrefix}-left`),\n    style: {\n      opacity: leftMaskOpacity\n    }\n  }), React.createElement(animated.div, {\n    className: classNames(classPrefix, `${classPrefix}-right`),\n    style: {\n      opacity: rightMaskOpacity\n    }\n  }));\n};"]},"metadata":{},"sourceType":"module"}