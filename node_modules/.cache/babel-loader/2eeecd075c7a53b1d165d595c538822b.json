{"ast":null,"code":"import React, { useMemo } from 'react';\nimport { CloseOutline } from 'antd-mobile-icons';\nimport classNames from 'classnames';\nimport Image from '../image';\nimport SpinLoading from '../spin-loading';\nimport { useConfig } from '../config-provider';\nconst classPrefix = `adm-image-uploader`;\n\nconst PreviewItem = props => {\n  const {\n    locale\n  } = useConfig();\n  const {\n    url,\n    file,\n    deletable,\n    onDelete\n  } = props;\n  const src = useMemo(() => {\n    if (url) {\n      return url;\n    }\n\n    if (file) {\n      return URL.createObjectURL(file);\n    }\n\n    return '';\n  }, [url, file]);\n\n  function renderLoading() {\n    return props.status === 'pending' && React.createElement(\"div\", {\n      className: `${classPrefix}-cell-mask`\n    }, React.createElement(\"span\", {\n      className: `${classPrefix}-cell-loading`\n    }, React.createElement(SpinLoading, {\n      color: 'white'\n    }), React.createElement(\"span\", {\n      className: `${classPrefix}-cell-mask-message`\n    }, locale.ImageUploader.uploading)));\n  }\n\n  function renderDelete() {\n    return deletable && React.createElement(\"span\", {\n      className: `${classPrefix}-cell-delete`,\n      onClick: onDelete\n    }, React.createElement(CloseOutline, {\n      className: `${classPrefix}-cell-delete-icon`\n    }));\n  }\n\n  return React.createElement(\"div\", {\n    className: classNames(`${classPrefix}-cell`, props.status === 'fail' && `${classPrefix}-cell-fail`)\n  }, React.createElement(Image, {\n    className: `${classPrefix}-cell-image`,\n    src: src,\n    fit: 'cover',\n    onClick: props.onClick\n  }), renderLoading(), renderDelete());\n};\n\nexport default PreviewItem;","map":{"version":3,"sources":["D:/react/project0330/node_modules/antd-mobile/es/components/image-uploader/preview-item.js"],"names":["React","useMemo","CloseOutline","classNames","Image","SpinLoading","useConfig","classPrefix","PreviewItem","props","locale","url","file","deletable","onDelete","src","URL","createObjectURL","renderLoading","status","createElement","className","color","ImageUploader","uploading","renderDelete","onClick","fit"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AACA,SAASC,YAAT,QAA6B,mBAA7B;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,MAAMC,WAAW,GAAI,oBAArB;;AAEA,MAAMC,WAAW,GAAGC,KAAK,IAAI;AAC3B,QAAM;AACJC,IAAAA;AADI,MAEFJ,SAAS,EAFb;AAGA,QAAM;AACJK,IAAAA,GADI;AAEJC,IAAAA,IAFI;AAGJC,IAAAA,SAHI;AAIJC,IAAAA;AAJI,MAKFL,KALJ;AAMA,QAAMM,GAAG,GAAGd,OAAO,CAAC,MAAM;AACxB,QAAIU,GAAJ,EAAS;AACP,aAAOA,GAAP;AACD;;AAED,QAAIC,IAAJ,EAAU;AACR,aAAOI,GAAG,CAACC,eAAJ,CAAoBL,IAApB,CAAP;AACD;;AAED,WAAO,EAAP;AACD,GAVkB,EAUhB,CAACD,GAAD,EAAMC,IAAN,CAVgB,CAAnB;;AAYA,WAASM,aAAT,GAAyB;AACvB,WAAOT,KAAK,CAACU,MAAN,KAAiB,SAAjB,IAA8BnB,KAAK,CAACoB,aAAN,CAAoB,KAApB,EAA2B;AAC9DC,MAAAA,SAAS,EAAG,GAAEd,WAAY;AADoC,KAA3B,EAElCP,KAAK,CAACoB,aAAN,CAAoB,MAApB,EAA4B;AAC7BC,MAAAA,SAAS,EAAG,GAAEd,WAAY;AADG,KAA5B,EAEAP,KAAK,CAACoB,aAAN,CAAoBf,WAApB,EAAiC;AAClCiB,MAAAA,KAAK,EAAE;AAD2B,KAAjC,CAFA,EAICtB,KAAK,CAACoB,aAAN,CAAoB,MAApB,EAA4B;AAC9BC,MAAAA,SAAS,EAAG,GAAEd,WAAY;AADI,KAA5B,EAEDG,MAAM,CAACa,aAAP,CAAqBC,SAFpB,CAJD,CAFkC,CAArC;AASD;;AAED,WAASC,YAAT,GAAwB;AACtB,WAAOZ,SAAS,IAAIb,KAAK,CAACoB,aAAN,CAAoB,MAApB,EAA4B;AAC9CC,MAAAA,SAAS,EAAG,GAAEd,WAAY,cADoB;AAE9CmB,MAAAA,OAAO,EAAEZ;AAFqC,KAA5B,EAGjBd,KAAK,CAACoB,aAAN,CAAoBlB,YAApB,EAAkC;AACnCmB,MAAAA,SAAS,EAAG,GAAEd,WAAY;AADS,KAAlC,CAHiB,CAApB;AAMD;;AAED,SAAOP,KAAK,CAACoB,aAAN,CAAoB,KAApB,EAA2B;AAChCC,IAAAA,SAAS,EAAElB,UAAU,CAAE,GAAEI,WAAY,OAAhB,EAAwBE,KAAK,CAACU,MAAN,KAAiB,MAAjB,IAA4B,GAAEZ,WAAY,YAAlE;AADW,GAA3B,EAEJP,KAAK,CAACoB,aAAN,CAAoBhB,KAApB,EAA2B;AAC5BiB,IAAAA,SAAS,EAAG,GAAEd,WAAY,aADE;AAE5BQ,IAAAA,GAAG,EAAEA,GAFuB;AAG5BY,IAAAA,GAAG,EAAE,OAHuB;AAI5BD,IAAAA,OAAO,EAAEjB,KAAK,CAACiB;AAJa,GAA3B,CAFI,EAOHR,aAAa,EAPV,EAOcO,YAAY,EAP1B,CAAP;AAQD,CAnDD;;AAqDA,eAAejB,WAAf","sourcesContent":["import React, { useMemo } from 'react';\nimport { CloseOutline } from 'antd-mobile-icons';\nimport classNames from 'classnames';\nimport Image from '../image';\nimport SpinLoading from '../spin-loading';\nimport { useConfig } from '../config-provider';\nconst classPrefix = `adm-image-uploader`;\n\nconst PreviewItem = props => {\n  const {\n    locale\n  } = useConfig();\n  const {\n    url,\n    file,\n    deletable,\n    onDelete\n  } = props;\n  const src = useMemo(() => {\n    if (url) {\n      return url;\n    }\n\n    if (file) {\n      return URL.createObjectURL(file);\n    }\n\n    return '';\n  }, [url, file]);\n\n  function renderLoading() {\n    return props.status === 'pending' && React.createElement(\"div\", {\n      className: `${classPrefix}-cell-mask`\n    }, React.createElement(\"span\", {\n      className: `${classPrefix}-cell-loading`\n    }, React.createElement(SpinLoading, {\n      color: 'white'\n    }), React.createElement(\"span\", {\n      className: `${classPrefix}-cell-mask-message`\n    }, locale.ImageUploader.uploading)));\n  }\n\n  function renderDelete() {\n    return deletable && React.createElement(\"span\", {\n      className: `${classPrefix}-cell-delete`,\n      onClick: onDelete\n    }, React.createElement(CloseOutline, {\n      className: `${classPrefix}-cell-delete-icon`\n    }));\n  }\n\n  return React.createElement(\"div\", {\n    className: classNames(`${classPrefix}-cell`, props.status === 'fail' && `${classPrefix}-cell-fail`)\n  }, React.createElement(Image, {\n    className: `${classPrefix}-cell-image`,\n    src: src,\n    fit: 'cover',\n    onClick: props.onClick\n  }), renderLoading(), renderDelete());\n};\n\nexport default PreviewItem;"]},"metadata":{},"sourceType":"module"}