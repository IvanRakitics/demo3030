{"ast":null,"code":"import _defineProperty from \"D:\\\\react\\\\project0330\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"D:\\\\react\\\\project0330\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport React, { useState, useRef, forwardRef, useImperativeHandle } from 'react';\nimport classNames from 'classnames';\nimport Input from '../input';\nimport Button from '../button';\nimport { withNativeProps } from '../../utils/native-props';\nimport { mergeProps } from '../../utils/with-default-props';\nimport { SearchOutline } from 'antd-mobile-icons';\nimport { usePropsValue } from '../../utils/use-props-value';\nimport { useConfig } from '../config-provider';\nvar classPrefix = \"adm-search-bar\";\nvar defaultProps = {\n  clearable: true,\n  showCancelButton: false,\n  defaultValue: '',\n  clearOnCancel: true,\n  icon: React.createElement(SearchOutline, null)\n};\nexport var SearchBar = forwardRef(function (p, ref) {\n  var _useConfig = useConfig(),\n      locale = _useConfig.locale;\n\n  var props = mergeProps(defaultProps, {\n    cancelText: locale.common.cancel\n  }, p);\n\n  var _usePropsValue = usePropsValue(props),\n      _usePropsValue2 = _slicedToArray(_usePropsValue, 2),\n      value = _usePropsValue2[0],\n      setValue = _usePropsValue2[1];\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      hasFocus = _useState2[0],\n      setHasFocus = _useState2[1];\n\n  var inputRef = useRef(null);\n  useImperativeHandle(ref, function () {\n    return {\n      clear: function clear() {\n        var _a;\n\n        return (_a = inputRef.current) === null || _a === void 0 ? void 0 : _a.clear();\n      },\n      focus: function focus() {\n        var _a;\n\n        return (_a = inputRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n      },\n      blur: function blur() {\n        var _a;\n\n        return (_a = inputRef.current) === null || _a === void 0 ? void 0 : _a.blur();\n      },\n\n      get nativeElement() {\n        var _a, _b;\n\n        return (_b = (_a = inputRef.current) === null || _a === void 0 ? void 0 : _a.nativeElement) !== null && _b !== void 0 ? _b : null;\n      }\n\n    };\n  });\n\n  var renderCancelButton = function renderCancelButton() {\n    var isShowCancel = false;\n\n    if (typeof props.showCancelButton === 'function') {\n      isShowCancel = props.showCancelButton(hasFocus, value);\n    } else {\n      isShowCancel = props.showCancelButton && hasFocus;\n    }\n\n    return isShowCancel && React.createElement(\"div\", {\n      className: \"\".concat(classPrefix, \"-suffix\"),\n      onMouseDown: function onMouseDown(e) {\n        e.preventDefault();\n      },\n      onTouchStart: function onTouchStart(e) {\n        e.preventDefault();\n      }\n    }, React.createElement(Button, {\n      fill: 'none',\n      className: \"\".concat(classPrefix, \"-cancel-button\"),\n      onClick: function onClick() {\n        var _a, _b, _c;\n\n        if (props.clearOnCancel) {\n          (_a = inputRef.current) === null || _a === void 0 ? void 0 : _a.clear();\n        }\n\n        (_b = inputRef.current) === null || _b === void 0 ? void 0 : _b.blur();\n        (_c = props.onCancel) === null || _c === void 0 ? void 0 : _c.call(props);\n      }\n    }, props.cancelText));\n  };\n\n  return withNativeProps(props, React.createElement(\"div\", {\n    className: classNames(classPrefix, _defineProperty({}, \"\".concat(classPrefix, \"-active\"), hasFocus))\n  }, React.createElement(\"div\", {\n    className: \"\".concat(classPrefix, \"-input-box\")\n  }, props.icon && React.createElement(\"div\", {\n    className: \"\".concat(classPrefix, \"-input-box-icon\")\n  }, props.icon), React.createElement(Input, {\n    ref: inputRef,\n    className: classNames(\"\".concat(classPrefix, \"-input\"), _defineProperty({}, \"\".concat(classPrefix, \"-input-without-icon\"), !props.icon)),\n    value: value,\n    onChange: setValue,\n    maxLength: props.maxLength,\n    placeholder: props.placeholder,\n    clearable: props.clearable,\n    onFocus: function onFocus(e) {\n      var _a;\n\n      setHasFocus(true);\n      (_a = props.onFocus) === null || _a === void 0 ? void 0 : _a.call(props, e);\n    },\n    onBlur: function onBlur(e) {\n      var _a;\n\n      setHasFocus(false);\n      (_a = props.onBlur) === null || _a === void 0 ? void 0 : _a.call(props, e);\n    },\n    onClear: props.onClear,\n    type: 'search',\n    enterKeyHint: 'search',\n    onEnterPress: function onEnterPress() {\n      var _a, _b;\n\n      (_a = inputRef.current) === null || _a === void 0 ? void 0 : _a.blur();\n      (_b = props.onSearch) === null || _b === void 0 ? void 0 : _b.call(props, value);\n    }\n  })), renderCancelButton()));\n});","map":null,"metadata":{},"sourceType":"module"}