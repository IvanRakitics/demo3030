{"ast":null,"code":"import classNames from 'classnames';\nimport React, { useEffect, useState } from 'react';\nimport { withNativeProps } from '../../utils/native-props';\nimport { mergeProps } from '../../utils/with-default-props';\nconst classPrefix = `adm-water-mark`;\nconst defaultProps = {\n  fullPage: true\n};\nexport const WaterMark = p => {\n  const props = mergeProps(defaultProps, p);\n  const {\n    zIndex = 2000,\n    gapX = 24,\n    gapY = 48,\n    width = 120,\n    height = 64,\n    rotate = -22,\n    image,\n    imageWidth = 120,\n    imageHeight = 64,\n    content,\n    fontStyle = 'normal',\n    fontWeight = 'normal',\n    fontColor = 'rgba(0,0,0,.15)',\n    fontSize = 14,\n    fontFamily = 'sans-serif'\n  } = props;\n  const [base64Url, setBase64Url] = useState('');\n  useEffect(() => {\n    const canvas = document.createElement('canvas');\n    const ratio = window.devicePixelRatio;\n    const ctx = canvas.getContext('2d');\n    const canvasWidth = `${(gapX + width) * ratio}px`;\n    const canvasHeight = `${(gapY + height) * ratio}px`;\n    const markWidth = width * ratio;\n    const markHeight = height * ratio;\n    canvas.setAttribute('width', canvasWidth);\n    canvas.setAttribute('height', canvasHeight);\n\n    if (ctx) {\n      if (image) {\n        ctx.translate(markWidth / 2, markHeight / 2);\n        ctx.rotate(Math.PI / 180 * Number(rotate));\n        const img = new Image();\n        img.crossOrigin = 'anonymous';\n        img.referrerPolicy = 'no-referrer';\n        img.src = image;\n\n        img.onload = () => {\n          ctx.drawImage(img, -imageWidth * ratio / 2, -imageHeight * ratio / 2, imageWidth * ratio, imageHeight * ratio);\n          ctx.restore();\n          setBase64Url(canvas.toDataURL());\n        };\n      } else if (content) {\n        ctx.textBaseline = 'middle';\n        ctx.textAlign = 'center'; // 文字绕中间旋转\n\n        ctx.translate(markWidth / 2, markHeight / 2);\n        ctx.rotate(Math.PI / 180 * Number(rotate));\n        const markSize = Number(fontSize) * ratio;\n        ctx.font = `${fontStyle} normal ${fontWeight} ${markSize}px/${markHeight}px ${fontFamily}`;\n        ctx.fillStyle = fontColor;\n        ctx.fillText(content, 0, 0);\n        ctx.restore();\n        setBase64Url(canvas.toDataURL());\n      }\n    } else {\n      throw new Error('当前环境不支持Canvas');\n    }\n  }, [gapX, gapY, rotate, fontStyle, fontWeight, width, height, fontFamily, fontColor, image, content, fontSize]);\n  return withNativeProps(props, React.createElement(\"div\", {\n    className: classNames(classPrefix, {\n      [`${classPrefix}-full-page`]: props.fullPage\n    }),\n    style: {\n      zIndex,\n      backgroundSize: `${gapX + width}px`,\n      backgroundImage: `url('${base64Url}')`\n    }\n  }));\n};","map":{"version":3,"sources":["D:/react/project0330/node_modules/antd-mobile/es/components/water-mark/water-mark.js"],"names":["classNames","React","useEffect","useState","withNativeProps","mergeProps","classPrefix","defaultProps","fullPage","WaterMark","p","props","zIndex","gapX","gapY","width","height","rotate","image","imageWidth","imageHeight","content","fontStyle","fontWeight","fontColor","fontSize","fontFamily","base64Url","setBase64Url","canvas","document","createElement","ratio","window","devicePixelRatio","ctx","getContext","canvasWidth","canvasHeight","markWidth","markHeight","setAttribute","translate","Math","PI","Number","img","Image","crossOrigin","referrerPolicy","src","onload","drawImage","restore","toDataURL","textBaseline","textAlign","markSize","font","fillStyle","fillText","Error","className","style","backgroundSize","backgroundImage"],"mappings":"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","sourcesContent":["import classNames from 'classnames';\nimport React, { useEffect, useState } from 'react';\nimport { withNativeProps } from '../../utils/native-props';\nimport { mergeProps } from '../../utils/with-default-props';\nconst classPrefix = `adm-water-mark`;\nconst defaultProps = {\n  fullPage: true\n};\nexport const WaterMark = p => {\n  const props = mergeProps(defaultProps, p);\n  const {\n    zIndex = 2000,\n    gapX = 24,\n    gapY = 48,\n    width = 120,\n    height = 64,\n    rotate = -22,\n    image,\n    imageWidth = 120,\n    imageHeight = 64,\n    content,\n    fontStyle = 'normal',\n    fontWeight = 'normal',\n    fontColor = 'rgba(0,0,0,.15)',\n    fontSize = 14,\n    fontFamily = 'sans-serif'\n  } = props;\n  const [base64Url, setBase64Url] = useState('');\n  useEffect(() => {\n    const canvas = document.createElement('canvas');\n    const ratio = window.devicePixelRatio;\n    const ctx = canvas.getContext('2d');\n    const canvasWidth = `${(gapX + width) * ratio}px`;\n    const canvasHeight = `${(gapY + height) * ratio}px`;\n    const markWidth = width * ratio;\n    const markHeight = height * ratio;\n    canvas.setAttribute('width', canvasWidth);\n    canvas.setAttribute('height', canvasHeight);\n\n    if (ctx) {\n      if (image) {\n        ctx.translate(markWidth / 2, markHeight / 2);\n        ctx.rotate(Math.PI / 180 * Number(rotate));\n        const img = new Image();\n        img.crossOrigin = 'anonymous';\n        img.referrerPolicy = 'no-referrer';\n        img.src = image;\n\n        img.onload = () => {\n          ctx.drawImage(img, -imageWidth * ratio / 2, -imageHeight * ratio / 2, imageWidth * ratio, imageHeight * ratio);\n          ctx.restore();\n          setBase64Url(canvas.toDataURL());\n        };\n      } else if (content) {\n        ctx.textBaseline = 'middle';\n        ctx.textAlign = 'center'; // 文字绕中间旋转\n\n        ctx.translate(markWidth / 2, markHeight / 2);\n        ctx.rotate(Math.PI / 180 * Number(rotate));\n        const markSize = Number(fontSize) * ratio;\n        ctx.font = `${fontStyle} normal ${fontWeight} ${markSize}px/${markHeight}px ${fontFamily}`;\n        ctx.fillStyle = fontColor;\n        ctx.fillText(content, 0, 0);\n        ctx.restore();\n        setBase64Url(canvas.toDataURL());\n      }\n    } else {\n      throw new Error('当前环境不支持Canvas');\n    }\n  }, [gapX, gapY, rotate, fontStyle, fontWeight, width, height, fontFamily, fontColor, image, content, fontSize]);\n  return withNativeProps(props, React.createElement(\"div\", {\n    className: classNames(classPrefix, {\n      [`${classPrefix}-full-page`]: props.fullPage\n    }),\n    style: {\n      zIndex,\n      backgroundSize: `${gapX + width}px`,\n      backgroundImage: `url('${base64Url}')`\n    }\n  }));\n};"]},"metadata":{},"sourceType":"module"}