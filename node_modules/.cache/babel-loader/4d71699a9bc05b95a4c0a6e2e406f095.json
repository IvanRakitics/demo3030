{"ast":null,"code":"import _toConsumableArray from \"D:\\\\react\\\\project0330\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"D:\\\\react\\\\project0330\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport React from 'react';\nimport { withNativeProps } from '../../utils/native-props';\nimport List from '../list';\nimport { mergeProps } from '../../utils/with-default-props';\nimport { CheckListContext } from './context';\nimport { usePropsValue } from '../../utils/use-props-value';\nimport { CheckOutline } from 'antd-mobile-icons';\nvar classPrefix = 'adm-check-list';\nvar defaultProps = {\n  multiple: false,\n  defaultValue: [],\n  activeIcon: React.createElement(CheckOutline, null)\n};\nexport var CheckList = function CheckList(p) {\n  var props = mergeProps(defaultProps, p);\n\n  var _usePropsValue = usePropsValue(props),\n      _usePropsValue2 = _slicedToArray(_usePropsValue, 2),\n      value = _usePropsValue2[0],\n      setValue = _usePropsValue2[1];\n\n  function check(val) {\n    if (props.multiple) {\n      setValue([].concat(_toConsumableArray(value), [val]));\n    } else {\n      setValue([val]);\n    }\n  }\n\n  function uncheck(val) {\n    setValue(value.filter(function (item) {\n      return item !== val;\n    }));\n  }\n\n  var activeIcon = props.activeIcon,\n      disabled = props.disabled,\n      readOnly = props.readOnly;\n  return React.createElement(CheckListContext.Provider, {\n    value: {\n      value: value,\n      check: check,\n      uncheck: uncheck,\n      activeIcon: activeIcon,\n      disabled: disabled,\n      readOnly: readOnly\n    }\n  }, withNativeProps(props, React.createElement(List, {\n    mode: props.mode,\n    className: classPrefix\n  }, props.children)));\n};","map":null,"metadata":{},"sourceType":"module"}