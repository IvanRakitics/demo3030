{"ast":null,"code":"import _slicedToArray from \"D:\\\\react\\\\project0330\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport React, { useCallback, useMemo } from 'react';\nimport PickerView from '../picker-view';\nimport { withNativeProps } from '../../utils/native-props';\nimport { mergeProps } from '../../utils/with-default-props';\nimport { usePropsValue } from '../../utils/use-props-value';\nimport { generateDatePickerColumns, convertDateToStringArray, convertStringArrayToDate, defaultRenderLabel } from '../date-picker/date-picker-utils';\nvar thisYear = new Date().getFullYear();\nvar defaultProps = {\n  min: new Date(new Date().setFullYear(thisYear - 10)),\n  max: new Date(new Date().setFullYear(thisYear + 10)),\n  precision: 'day',\n  renderLabel: defaultRenderLabel\n};\nexport var DatePickerView = function DatePickerView(p) {\n  var _a;\n\n  var props = mergeProps(defaultProps, p);\n\n  var _usePropsValue = usePropsValue({\n    value: props.value,\n    defaultValue: (_a = props.defaultValue) !== null && _a !== void 0 ? _a : null\n  }),\n      _usePropsValue2 = _slicedToArray(_usePropsValue, 2),\n      value = _usePropsValue2[0],\n      setValue = _usePropsValue2[1];\n\n  var pickerValue = useMemo(function () {\n    return convertDateToStringArray(value, props.precision);\n  }, [value, props.precision]);\n  var onChange = useCallback(function (val) {\n    var _a;\n\n    var date = convertStringArrayToDate(val, props.precision);\n\n    if (date) {\n      setValue(date);\n      (_a = props.onChange) === null || _a === void 0 ? void 0 : _a.call(props, date);\n    }\n  }, [props.onChange, props.precision]);\n  return withNativeProps(props, React.createElement(PickerView, {\n    columns: function columns(selected) {\n      return generateDatePickerColumns(selected, props.min, props.max, props.precision, props.renderLabel, props.filter);\n    },\n    value: pickerValue,\n    onChange: onChange\n  }));\n};","map":null,"metadata":{},"sourceType":"module"}