{"ast":null,"code":"import { withNativeProps } from '../../utils/native-props';\nimport React, { useMemo, useRef, useState } from 'react';\nimport { useUnmountedRef } from 'ahooks';\nimport { useLockScroll } from '../../utils/use-lock-scroll';\nimport { useSpring, animated } from '@react-spring/web';\nimport { renderToContainer } from '../../utils/render-to-container';\nimport { mergeProps } from '../../utils/with-default-props';\nimport { useConfig } from '../config-provider';\nimport { useShouldRender } from '../../utils/should-render';\nimport { withStopPropagation } from '../../utils/with-stop-propagation';\nconst classPrefix = `adm-mask`;\nconst opacityRecord = {\n  default: 0.55,\n  thin: 0.35,\n  thick: 0.75\n};\nconst defaultProps = {\n  visible: true,\n  destroyOnClose: false,\n  forceRender: false,\n  color: 'black',\n  opacity: 'default',\n  disableBodyScroll: true,\n  getContainer: null,\n  stopPropagation: ['click']\n};\nexport const Mask = p => {\n  const props = mergeProps(defaultProps, p);\n  const {\n    locale\n  } = useConfig();\n  const ref = useRef(null);\n  useLockScroll(ref, props.visible && props.disableBodyScroll);\n  const background = useMemo(() => {\n    var _a;\n\n    const opacity = (_a = opacityRecord[props.opacity]) !== null && _a !== void 0 ? _a : props.opacity;\n    const rgb = props.color === 'white' ? '255, 255, 255' : '0, 0, 0';\n    return `rgba(${rgb}, ${opacity})`;\n  }, [props.color, props.opacity]);\n  const [active, setActive] = useState(props.visible);\n  const unmountedRef = useUnmountedRef();\n  const {\n    opacity\n  } = useSpring({\n    opacity: props.visible ? 1 : 0,\n    config: {\n      precision: 0.01,\n      mass: 1,\n      tension: 200,\n      friction: 30,\n      clamp: true\n    },\n    onStart: () => {\n      setActive(true);\n    },\n    onRest: () => {\n      var _a, _b;\n\n      if (unmountedRef.current) return;\n      setActive(props.visible);\n\n      if (props.visible) {\n        (_a = props.afterShow) === null || _a === void 0 ? void 0 : _a.call(props);\n      } else {\n        (_b = props.afterClose) === null || _b === void 0 ? void 0 : _b.call(props);\n      }\n    }\n  });\n  const shouldRender = useShouldRender(active, props.forceRender, props.destroyOnClose);\n  const node = withStopPropagation(props.stopPropagation, withNativeProps(props, React.createElement(animated.div, {\n    className: classPrefix,\n    ref: ref,\n    style: Object.assign(Object.assign({\n      background,\n      opacity\n    }, props.style), {\n      display: active ? 'unset' : 'none'\n    })\n  }, props.onMaskClick && React.createElement(\"div\", {\n    className: `${classPrefix}-aria-button`,\n    role: 'button',\n    \"aria-label\": locale.Mask.name,\n    onClick: props.onMaskClick\n  }), React.createElement(\"div\", {\n    className: `${classPrefix}-content`\n  }, shouldRender && props.children))));\n  return renderToContainer(props.getContainer, node);\n};","map":{"version":3,"sources":["D:/react/project0330/node_modules/antd-mobile/es/components/mask/mask.js"],"names":["withNativeProps","React","useMemo","useRef","useState","useUnmountedRef","useLockScroll","useSpring","animated","renderToContainer","mergeProps","useConfig","useShouldRender","withStopPropagation","classPrefix","opacityRecord","default","thin","thick","defaultProps","visible","destroyOnClose","forceRender","color","opacity","disableBodyScroll","getContainer","stopPropagation","Mask","p","props","locale","ref","background","_a","rgb","active","setActive","unmountedRef","config","precision","mass","tension","friction","clamp","onStart","onRest","_b","current","afterShow","call","afterClose","shouldRender","node","createElement","div","className","style","Object","assign","display","onMaskClick","role","name","onClick","children"],"mappings":"AAAA,SAASA,eAAT,QAAgC,0BAAhC;AACA,OAAOC,KAAP,IAAgBC,OAAhB,EAAyBC,MAAzB,EAAiCC,QAAjC,QAAiD,OAAjD;AACA,SAASC,eAAT,QAAgC,QAAhC;AACA,SAASC,aAAT,QAA8B,6BAA9B;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,mBAApC;AACA,SAASC,iBAAT,QAAkC,iCAAlC;AACA,SAASC,UAAT,QAA2B,gCAA3B;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,SAASC,eAAT,QAAgC,2BAAhC;AACA,SAASC,mBAAT,QAAoC,mCAApC;AACA,MAAMC,WAAW,GAAI,UAArB;AACA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,OAAO,EAAE,IADW;AAEpBC,EAAAA,IAAI,EAAE,IAFc;AAGpBC,EAAAA,KAAK,EAAE;AAHa,CAAtB;AAKA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,IADU;AAEnBC,EAAAA,cAAc,EAAE,KAFG;AAGnBC,EAAAA,WAAW,EAAE,KAHM;AAInBC,EAAAA,KAAK,EAAE,OAJY;AAKnBC,EAAAA,OAAO,EAAE,SALU;AAMnBC,EAAAA,iBAAiB,EAAE,IANA;AAOnBC,EAAAA,YAAY,EAAE,IAPK;AAQnBC,EAAAA,eAAe,EAAE,CAAC,OAAD;AARE,CAArB;AAUA,OAAO,MAAMC,IAAI,GAAGC,CAAC,IAAI;AACvB,QAAMC,KAAK,GAAGpB,UAAU,CAACS,YAAD,EAAeU,CAAf,CAAxB;AACA,QAAM;AACJE,IAAAA;AADI,MAEFpB,SAAS,EAFb;AAGA,QAAMqB,GAAG,GAAG7B,MAAM,CAAC,IAAD,CAAlB;AACAG,EAAAA,aAAa,CAAC0B,GAAD,EAAMF,KAAK,CAACV,OAAN,IAAiBU,KAAK,CAACL,iBAA7B,CAAb;AACA,QAAMQ,UAAU,GAAG/B,OAAO,CAAC,MAAM;AAC/B,QAAIgC,EAAJ;;AAEA,UAAMV,OAAO,GAAG,CAACU,EAAE,GAAGnB,aAAa,CAACe,KAAK,CAACN,OAAP,CAAnB,MAAwC,IAAxC,IAAgDU,EAAE,KAAK,KAAK,CAA5D,GAAgEA,EAAhE,GAAqEJ,KAAK,CAACN,OAA3F;AACA,UAAMW,GAAG,GAAGL,KAAK,CAACP,KAAN,KAAgB,OAAhB,GAA0B,eAA1B,GAA4C,SAAxD;AACA,WAAQ,QAAOY,GAAI,KAAIX,OAAQ,GAA/B;AACD,GANyB,EAMvB,CAACM,KAAK,CAACP,KAAP,EAAcO,KAAK,CAACN,OAApB,CANuB,CAA1B;AAOA,QAAM,CAACY,MAAD,EAASC,SAAT,IAAsBjC,QAAQ,CAAC0B,KAAK,CAACV,OAAP,CAApC;AACA,QAAMkB,YAAY,GAAGjC,eAAe,EAApC;AACA,QAAM;AACJmB,IAAAA;AADI,MAEFjB,SAAS,CAAC;AACZiB,IAAAA,OAAO,EAAEM,KAAK,CAACV,OAAN,GAAgB,CAAhB,GAAoB,CADjB;AAEZmB,IAAAA,MAAM,EAAE;AACNC,MAAAA,SAAS,EAAE,IADL;AAENC,MAAAA,IAAI,EAAE,CAFA;AAGNC,MAAAA,OAAO,EAAE,GAHH;AAINC,MAAAA,QAAQ,EAAE,EAJJ;AAKNC,MAAAA,KAAK,EAAE;AALD,KAFI;AASZC,IAAAA,OAAO,EAAE,MAAM;AACbR,MAAAA,SAAS,CAAC,IAAD,CAAT;AACD,KAXW;AAYZS,IAAAA,MAAM,EAAE,MAAM;AACZ,UAAIZ,EAAJ,EAAQa,EAAR;;AAEA,UAAIT,YAAY,CAACU,OAAjB,EAA0B;AAC1BX,MAAAA,SAAS,CAACP,KAAK,CAACV,OAAP,CAAT;;AAEA,UAAIU,KAAK,CAACV,OAAV,EAAmB;AACjB,SAACc,EAAE,GAAGJ,KAAK,CAACmB,SAAZ,MAA2B,IAA3B,IAAmCf,EAAE,KAAK,KAAK,CAA/C,GAAmD,KAAK,CAAxD,GAA4DA,EAAE,CAACgB,IAAH,CAAQpB,KAAR,CAA5D;AACD,OAFD,MAEO;AACL,SAACiB,EAAE,GAAGjB,KAAK,CAACqB,UAAZ,MAA4B,IAA5B,IAAoCJ,EAAE,KAAK,KAAK,CAAhD,GAAoD,KAAK,CAAzD,GAA6DA,EAAE,CAACG,IAAH,CAAQpB,KAAR,CAA7D;AACD;AACF;AAvBW,GAAD,CAFb;AA2BA,QAAMsB,YAAY,GAAGxC,eAAe,CAACwB,MAAD,EAASN,KAAK,CAACR,WAAf,EAA4BQ,KAAK,CAACT,cAAlC,CAApC;AACA,QAAMgC,IAAI,GAAGxC,mBAAmB,CAACiB,KAAK,CAACH,eAAP,EAAwB3B,eAAe,CAAC8B,KAAD,EAAQ7B,KAAK,CAACqD,aAAN,CAAoB9C,QAAQ,CAAC+C,GAA7B,EAAkC;AAC/GC,IAAAA,SAAS,EAAE1C,WADoG;AAE/GkB,IAAAA,GAAG,EAAEA,GAF0G;AAG/GyB,IAAAA,KAAK,EAAEC,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc;AACjC1B,MAAAA,UADiC;AAEjCT,MAAAA;AAFiC,KAAd,EAGlBM,KAAK,CAAC2B,KAHY,CAAd,EAGU;AACfG,MAAAA,OAAO,EAAExB,MAAM,GAAG,OAAH,GAAa;AADb,KAHV;AAHwG,GAAlC,EAS5EN,KAAK,CAAC+B,WAAN,IAAqB5D,KAAK,CAACqD,aAAN,CAAoB,KAApB,EAA2B;AACjDE,IAAAA,SAAS,EAAG,GAAE1C,WAAY,cADuB;AAEjDgD,IAAAA,IAAI,EAAE,QAF2C;AAGjD,kBAAc/B,MAAM,CAACH,IAAP,CAAYmC,IAHuB;AAIjDC,IAAAA,OAAO,EAAElC,KAAK,CAAC+B;AAJkC,GAA3B,CATuD,EAc3E5D,KAAK,CAACqD,aAAN,CAAoB,KAApB,EAA2B;AAC7BE,IAAAA,SAAS,EAAG,GAAE1C,WAAY;AADG,GAA3B,EAEDsC,YAAY,IAAItB,KAAK,CAACmC,QAFrB,CAd2E,CAAR,CAAvC,CAAhC;AAiBA,SAAOxD,iBAAiB,CAACqB,KAAK,CAACJ,YAAP,EAAqB2B,IAArB,CAAxB;AACD,CA9DM","sourcesContent":["import { withNativeProps } from '../../utils/native-props';\nimport React, { useMemo, useRef, useState } from 'react';\nimport { useUnmountedRef } from 'ahooks';\nimport { useLockScroll } from '../../utils/use-lock-scroll';\nimport { useSpring, animated } from '@react-spring/web';\nimport { renderToContainer } from '../../utils/render-to-container';\nimport { mergeProps } from '../../utils/with-default-props';\nimport { useConfig } from '../config-provider';\nimport { useShouldRender } from '../../utils/should-render';\nimport { withStopPropagation } from '../../utils/with-stop-propagation';\nconst classPrefix = `adm-mask`;\nconst opacityRecord = {\n  default: 0.55,\n  thin: 0.35,\n  thick: 0.75\n};\nconst defaultProps = {\n  visible: true,\n  destroyOnClose: false,\n  forceRender: false,\n  color: 'black',\n  opacity: 'default',\n  disableBodyScroll: true,\n  getContainer: null,\n  stopPropagation: ['click']\n};\nexport const Mask = p => {\n  const props = mergeProps(defaultProps, p);\n  const {\n    locale\n  } = useConfig();\n  const ref = useRef(null);\n  useLockScroll(ref, props.visible && props.disableBodyScroll);\n  const background = useMemo(() => {\n    var _a;\n\n    const opacity = (_a = opacityRecord[props.opacity]) !== null && _a !== void 0 ? _a : props.opacity;\n    const rgb = props.color === 'white' ? '255, 255, 255' : '0, 0, 0';\n    return `rgba(${rgb}, ${opacity})`;\n  }, [props.color, props.opacity]);\n  const [active, setActive] = useState(props.visible);\n  const unmountedRef = useUnmountedRef();\n  const {\n    opacity\n  } = useSpring({\n    opacity: props.visible ? 1 : 0,\n    config: {\n      precision: 0.01,\n      mass: 1,\n      tension: 200,\n      friction: 30,\n      clamp: true\n    },\n    onStart: () => {\n      setActive(true);\n    },\n    onRest: () => {\n      var _a, _b;\n\n      if (unmountedRef.current) return;\n      setActive(props.visible);\n\n      if (props.visible) {\n        (_a = props.afterShow) === null || _a === void 0 ? void 0 : _a.call(props);\n      } else {\n        (_b = props.afterClose) === null || _b === void 0 ? void 0 : _b.call(props);\n      }\n    }\n  });\n  const shouldRender = useShouldRender(active, props.forceRender, props.destroyOnClose);\n  const node = withStopPropagation(props.stopPropagation, withNativeProps(props, React.createElement(animated.div, {\n    className: classPrefix,\n    ref: ref,\n    style: Object.assign(Object.assign({\n      background,\n      opacity\n    }, props.style), {\n      display: active ? 'unset' : 'none'\n    })\n  }, props.onMaskClick && React.createElement(\"div\", {\n    className: `${classPrefix}-aria-button`,\n    role: 'button',\n    \"aria-label\": locale.Mask.name,\n    onClick: props.onMaskClick\n  }), React.createElement(\"div\", {\n    className: `${classPrefix}-content`\n  }, shouldRender && props.children))));\n  return renderToContainer(props.getContainer, node);\n};"]},"metadata":{},"sourceType":"module"}