{"ast":null,"code":"import { show } from './show';\nimport { mergeProps } from '../../utils/with-default-props';\nimport { getDefaultConfig } from '../config-provider';\nexport function alert(p) {\n  const defaultProps = {\n    confirmText: getDefaultConfig().locale.Modal.ok\n  };\n  const props = mergeProps(defaultProps, p);\n  return new Promise(resolve => {\n    show(Object.assign(Object.assign({}, props), {\n      closeOnAction: true,\n      actions: [{\n        key: 'confirm',\n        text: props.confirmText,\n        primary: true\n      }],\n      onAction: props.onConfirm,\n      onClose: () => {\n        var _a;\n\n        (_a = props.onClose) === null || _a === void 0 ? void 0 : _a.call(props);\n        resolve();\n      }\n    }));\n  });\n}","map":{"version":3,"sources":["D:/react/project0330/node_modules/antd-mobile/es/components/modal/alert.js"],"names":["show","mergeProps","getDefaultConfig","alert","p","defaultProps","confirmText","locale","Modal","ok","props","Promise","resolve","Object","assign","closeOnAction","actions","key","text","primary","onAction","onConfirm","onClose","_a","call"],"mappings":"AAAA,SAASA,IAAT,QAAqB,QAArB;AACA,SAASC,UAAT,QAA2B,gCAA3B;AACA,SAASC,gBAAT,QAAiC,oBAAjC;AACA,OAAO,SAASC,KAAT,CAAeC,CAAf,EAAkB;AACvB,QAAMC,YAAY,GAAG;AACnBC,IAAAA,WAAW,EAAEJ,gBAAgB,GAAGK,MAAnB,CAA0BC,KAA1B,CAAgCC;AAD1B,GAArB;AAGA,QAAMC,KAAK,GAAGT,UAAU,CAACI,YAAD,EAAeD,CAAf,CAAxB;AACA,SAAO,IAAIO,OAAJ,CAAYC,OAAO,IAAI;AAC5BZ,IAAAA,IAAI,CAACa,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,CAAd,EAAwC;AAC3CK,MAAAA,aAAa,EAAE,IAD4B;AAE3CC,MAAAA,OAAO,EAAE,CAAC;AACRC,QAAAA,GAAG,EAAE,SADG;AAERC,QAAAA,IAAI,EAAER,KAAK,CAACJ,WAFJ;AAGRa,QAAAA,OAAO,EAAE;AAHD,OAAD,CAFkC;AAO3CC,MAAAA,QAAQ,EAAEV,KAAK,CAACW,SAP2B;AAQ3CC,MAAAA,OAAO,EAAE,MAAM;AACb,YAAIC,EAAJ;;AAEA,SAACA,EAAE,GAAGb,KAAK,CAACY,OAAZ,MAAyB,IAAzB,IAAiCC,EAAE,KAAK,KAAK,CAA7C,GAAiD,KAAK,CAAtD,GAA0DA,EAAE,CAACC,IAAH,CAAQd,KAAR,CAA1D;AACAE,QAAAA,OAAO;AACR;AAb0C,KAAxC,CAAD,CAAJ;AAeD,GAhBM,CAAP;AAiBD","sourcesContent":["import { show } from './show';\nimport { mergeProps } from '../../utils/with-default-props';\nimport { getDefaultConfig } from '../config-provider';\nexport function alert(p) {\n  const defaultProps = {\n    confirmText: getDefaultConfig().locale.Modal.ok\n  };\n  const props = mergeProps(defaultProps, p);\n  return new Promise(resolve => {\n    show(Object.assign(Object.assign({}, props), {\n      closeOnAction: true,\n      actions: [{\n        key: 'confirm',\n        text: props.confirmText,\n        primary: true\n      }],\n      onAction: props.onConfirm,\n      onClose: () => {\n        var _a;\n\n        (_a = props.onClose) === null || _a === void 0 ? void 0 : _a.call(props);\n        resolve();\n      }\n    }));\n  });\n}"]},"metadata":{},"sourceType":"module"}