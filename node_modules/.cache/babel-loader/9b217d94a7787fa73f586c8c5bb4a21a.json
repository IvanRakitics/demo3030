{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport classNames from 'classnames';\nimport React, { useState } from 'react';\nimport { withNativeProps } from '../../utils/native-props';\nimport { usePropsValue } from '../../utils/use-props-value';\nimport { mergeProps } from '../../utils/with-default-props';\nimport { SpinIcon } from './spin-icon';\nconst classPrefix = `adm-switch`;\nconst defaultProps = {\n  defaultChecked: false\n};\nexport const Switch = p => {\n  const props = mergeProps(defaultProps, p);\n  const disabled = props.disabled || props.loading || false;\n  const [changing, setChanging] = useState(false);\n  const [checked, setChecked] = usePropsValue({\n    value: props.checked,\n    defaultValue: props.defaultChecked,\n    onChange: props.onChange\n  });\n\n  function onClick() {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (disabled || props.loading || changing) {\n        return;\n      }\n\n      const nextChecked = !checked;\n\n      if (props.beforeChange) {\n        setChanging(true);\n\n        try {\n          yield props.beforeChange(nextChecked);\n          setChecked(nextChecked);\n          setChanging(false);\n        } catch (e) {\n          setChanging(false);\n          throw e;\n        }\n      } else {\n        setChecked(nextChecked);\n      }\n    });\n  }\n\n  return withNativeProps(props, React.createElement(\"div\", {\n    onClick: onClick,\n    className: classNames(classPrefix, {\n      [`${classPrefix}-checked`]: checked,\n      [`${classPrefix}-disabled`]: disabled || changing\n    })\n  }, React.createElement(\"div\", {\n    className: `${classPrefix}-checkbox`\n  }, React.createElement(\"div\", {\n    className: `${classPrefix}-handle`\n  }, (props.loading || changing) && React.createElement(SpinIcon, {\n    className: `${classPrefix}-spin-icon`\n  })), React.createElement(\"div\", {\n    className: `${classPrefix}-inner`\n  }, checked ? props.checkedText : props.uncheckedText))));\n};","map":{"version":3,"sources":["D:/react/project0330/node_modules/antd-mobile/es/components/switch/switch.js"],"names":["__awaiter","classNames","React","useState","withNativeProps","usePropsValue","mergeProps","SpinIcon","classPrefix","defaultProps","defaultChecked","Switch","p","props","disabled","loading","changing","setChanging","checked","setChecked","value","defaultValue","onChange","onClick","nextChecked","beforeChange","e","createElement","className","checkedText","uncheckedText"],"mappings":"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","sourcesContent":["import { __awaiter } from \"tslib\";\nimport classNames from 'classnames';\nimport React, { useState } from 'react';\nimport { withNativeProps } from '../../utils/native-props';\nimport { usePropsValue } from '../../utils/use-props-value';\nimport { mergeProps } from '../../utils/with-default-props';\nimport { SpinIcon } from './spin-icon';\nconst classPrefix = `adm-switch`;\nconst defaultProps = {\n  defaultChecked: false\n};\nexport const Switch = p => {\n  const props = mergeProps(defaultProps, p);\n  const disabled = props.disabled || props.loading || false;\n  const [changing, setChanging] = useState(false);\n  const [checked, setChecked] = usePropsValue({\n    value: props.checked,\n    defaultValue: props.defaultChecked,\n    onChange: props.onChange\n  });\n\n  function onClick() {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (disabled || props.loading || changing) {\n        return;\n      }\n\n      const nextChecked = !checked;\n\n      if (props.beforeChange) {\n        setChanging(true);\n\n        try {\n          yield props.beforeChange(nextChecked);\n          setChecked(nextChecked);\n          setChanging(false);\n        } catch (e) {\n          setChanging(false);\n          throw e;\n        }\n      } else {\n        setChecked(nextChecked);\n      }\n    });\n  }\n\n  return withNativeProps(props, React.createElement(\"div\", {\n    onClick: onClick,\n    className: classNames(classPrefix, {\n      [`${classPrefix}-checked`]: checked,\n      [`${classPrefix}-disabled`]: disabled || changing\n    })\n  }, React.createElement(\"div\", {\n    className: `${classPrefix}-checkbox`\n  }, React.createElement(\"div\", {\n    className: `${classPrefix}-handle`\n  }, (props.loading || changing) && React.createElement(SpinIcon, {\n    className: `${classPrefix}-spin-icon`\n  })), React.createElement(\"div\", {\n    className: `${classPrefix}-inner`\n  }, checked ? props.checkedText : props.uncheckedText))));\n};"]},"metadata":{},"sourceType":"module"}