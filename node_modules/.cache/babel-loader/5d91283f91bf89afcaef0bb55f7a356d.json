{"ast":null,"code":"import { useRef } from 'react';\n\nvar useLoadingDelayPlugin = function useLoadingDelayPlugin(fetchInstance, _a) {\n  var loadingDelay = _a.loadingDelay;\n  var timerRef = useRef();\n\n  if (!loadingDelay) {\n    return {};\n  }\n\n  var cancelTimeout = function cancelTimeout() {\n    if (timerRef.current) {\n      clearTimeout(timerRef.current);\n    }\n  };\n\n  return {\n    onBefore: function onBefore() {\n      cancelTimeout();\n      timerRef.current = setTimeout(function () {\n        fetchInstance.setState({\n          loading: true\n        });\n      }, loadingDelay);\n      return {\n        loading: false\n      };\n    },\n    onFinally: function onFinally() {\n      cancelTimeout();\n    },\n    onCancel: function onCancel() {\n      cancelTimeout();\n    }\n  };\n};\n\nexport default useLoadingDelayPlugin;","map":null,"metadata":{},"sourceType":"module"}