{"ast":null,"code":"import classNames from 'classnames';\nimport React, { useEffect, useState } from 'react';\nimport { MinusOutline, AddOutline } from 'antd-mobile-icons';\nimport { withNativeProps } from '../../utils/native-props';\nimport { usePropsValue } from '../../utils/use-props-value';\nimport { mergeProps } from '../../utils/with-default-props';\nimport { bound } from '../../utils/bound';\nimport Input from '../input';\nimport Button from '../button';\nconst classPrefix = `adm-stepper`;\nconst defaultProps = {\n  defaultValue: 0,\n  step: 1,\n  disabled: false,\n  allowEmpty: false\n};\nexport const Stepper = p => {\n  const props = mergeProps(defaultProps, p);\n  const {\n    disabled,\n    step,\n    max,\n    min,\n    inputReadOnly\n  } = props;\n  const [value, setValue] = usePropsValue(props);\n  const [inputValue, setInputValue] = useState(() => convertValueToText(value));\n\n  function setValueWithCheck(v) {\n    if (isNaN(v)) return;\n    let target = bound(v, props.min, props.max);\n\n    if (props.digits || props.digits === 0) {\n      target = parseFloat(target.toFixed(props.digits));\n    }\n\n    setValue(target);\n  }\n\n  const [hasFocus, setHasFocus] = useState(false);\n  useEffect(() => {\n    if (!hasFocus) {\n      setInputValue(convertValueToText(value));\n    }\n  }, [hasFocus]);\n  useEffect(() => {\n    if (!hasFocus) {\n      setInputValue(convertValueToText(value));\n    }\n  }, [value]);\n\n  const handleInputChange = v => {\n    setInputValue(v);\n    const value = convertTextToValue(v);\n\n    if (value === null) {\n      if (props.allowEmpty) {\n        setValue(null);\n      } else {\n        setValue(props.defaultValue);\n      }\n    } else {\n      setValueWithCheck(value);\n    }\n  };\n\n  const handleMinus = () => {\n    setValueWithCheck((value !== null && value !== void 0 ? value : 0) - step);\n  };\n\n  const handlePlus = () => {\n    setValueWithCheck((value !== null && value !== void 0 ? value : 0) + step);\n  };\n\n  const minusDisabled = () => {\n    if (disabled) return true;\n    if (value === null) return false;\n\n    if (min !== undefined) {\n      return value <= min;\n    }\n\n    return false;\n  };\n\n  const plusDisabled = () => {\n    if (disabled) return true;\n    if (value === null) return false;\n\n    if (max !== undefined) {\n      return value >= max;\n    }\n\n    return false;\n  };\n\n  return withNativeProps(props, React.createElement(\"div\", {\n    className: classNames(classPrefix, {\n      [`${classPrefix}-active`]: hasFocus\n    })\n  }, React.createElement(Button, {\n    className: `${classPrefix}-minus`,\n    onClick: handleMinus,\n    disabled: minusDisabled(),\n    fill: 'none',\n    shape: 'rectangular',\n    color: 'primary'\n  }, React.createElement(MinusOutline, null)), React.createElement(\"div\", {\n    className: `${classPrefix}-middle`\n  }, React.createElement(Input, {\n    className: `${classPrefix}-input`,\n    onFocus: e => {\n      var _a;\n\n      setHasFocus(true);\n      (_a = props.onFocus) === null || _a === void 0 ? void 0 : _a.call(props, e);\n    },\n    value: inputValue,\n    onChange: val => {\n      disabled || handleInputChange(val);\n    },\n    disabled: disabled,\n    onBlur: e => {\n      var _a;\n\n      setHasFocus(false);\n      (_a = props.onBlur) === null || _a === void 0 ? void 0 : _a.call(props, e);\n    },\n    readOnly: inputReadOnly\n  })), React.createElement(Button, {\n    className: `${classPrefix}-plus`,\n    onClick: handlePlus,\n    disabled: plusDisabled(),\n    fill: 'none',\n    shape: 'rectangular',\n    color: 'primary'\n  }, React.createElement(AddOutline, null))));\n};\n\nfunction convertValueToText(value) {\n  if (value === null) return '';\n  return value.toString();\n}\n\nfunction convertTextToValue(text) {\n  if (text === '') return null;\n  return parseFloat(text);\n}","map":{"version":3,"sources":["D:/react/project0330/node_modules/antd-mobile/es/components/stepper/stepper.js"],"names":["classNames","React","useEffect","useState","MinusOutline","AddOutline","withNativeProps","usePropsValue","mergeProps","bound","Input","Button","classPrefix","defaultProps","defaultValue","step","disabled","allowEmpty","Stepper","p","props","max","min","inputReadOnly","value","setValue","inputValue","setInputValue","convertValueToText","setValueWithCheck","v","isNaN","target","digits","parseFloat","toFixed","hasFocus","setHasFocus","handleInputChange","convertTextToValue","handleMinus","handlePlus","minusDisabled","undefined","plusDisabled","createElement","className","onClick","fill","shape","color","onFocus","e","_a","call","onChange","val","onBlur","readOnly","toString","text"],"mappings":"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","sourcesContent":["import classNames from 'classnames';\nimport React, { useEffect, useState } from 'react';\nimport { MinusOutline, AddOutline } from 'antd-mobile-icons';\nimport { withNativeProps } from '../../utils/native-props';\nimport { usePropsValue } from '../../utils/use-props-value';\nimport { mergeProps } from '../../utils/with-default-props';\nimport { bound } from '../../utils/bound';\nimport Input from '../input';\nimport Button from '../button';\nconst classPrefix = `adm-stepper`;\nconst defaultProps = {\n  defaultValue: 0,\n  step: 1,\n  disabled: false,\n  allowEmpty: false\n};\nexport const Stepper = p => {\n  const props = mergeProps(defaultProps, p);\n  const {\n    disabled,\n    step,\n    max,\n    min,\n    inputReadOnly\n  } = props;\n  const [value, setValue] = usePropsValue(props);\n  const [inputValue, setInputValue] = useState(() => convertValueToText(value));\n\n  function setValueWithCheck(v) {\n    if (isNaN(v)) return;\n    let target = bound(v, props.min, props.max);\n\n    if (props.digits || props.digits === 0) {\n      target = parseFloat(target.toFixed(props.digits));\n    }\n\n    setValue(target);\n  }\n\n  const [hasFocus, setHasFocus] = useState(false);\n  useEffect(() => {\n    if (!hasFocus) {\n      setInputValue(convertValueToText(value));\n    }\n  }, [hasFocus]);\n  useEffect(() => {\n    if (!hasFocus) {\n      setInputValue(convertValueToText(value));\n    }\n  }, [value]);\n\n  const handleInputChange = v => {\n    setInputValue(v);\n    const value = convertTextToValue(v);\n\n    if (value === null) {\n      if (props.allowEmpty) {\n        setValue(null);\n      } else {\n        setValue(props.defaultValue);\n      }\n    } else {\n      setValueWithCheck(value);\n    }\n  };\n\n  const handleMinus = () => {\n    setValueWithCheck((value !== null && value !== void 0 ? value : 0) - step);\n  };\n\n  const handlePlus = () => {\n    setValueWithCheck((value !== null && value !== void 0 ? value : 0) + step);\n  };\n\n  const minusDisabled = () => {\n    if (disabled) return true;\n    if (value === null) return false;\n\n    if (min !== undefined) {\n      return value <= min;\n    }\n\n    return false;\n  };\n\n  const plusDisabled = () => {\n    if (disabled) return true;\n    if (value === null) return false;\n\n    if (max !== undefined) {\n      return value >= max;\n    }\n\n    return false;\n  };\n\n  return withNativeProps(props, React.createElement(\"div\", {\n    className: classNames(classPrefix, {\n      [`${classPrefix}-active`]: hasFocus\n    })\n  }, React.createElement(Button, {\n    className: `${classPrefix}-minus`,\n    onClick: handleMinus,\n    disabled: minusDisabled(),\n    fill: 'none',\n    shape: 'rectangular',\n    color: 'primary'\n  }, React.createElement(MinusOutline, null)), React.createElement(\"div\", {\n    className: `${classPrefix}-middle`\n  }, React.createElement(Input, {\n    className: `${classPrefix}-input`,\n    onFocus: e => {\n      var _a;\n\n      setHasFocus(true);\n      (_a = props.onFocus) === null || _a === void 0 ? void 0 : _a.call(props, e);\n    },\n    value: inputValue,\n    onChange: val => {\n      disabled || handleInputChange(val);\n    },\n    disabled: disabled,\n    onBlur: e => {\n      var _a;\n\n      setHasFocus(false);\n      (_a = props.onBlur) === null || _a === void 0 ? void 0 : _a.call(props, e);\n    },\n    readOnly: inputReadOnly\n  })), React.createElement(Button, {\n    className: `${classPrefix}-plus`,\n    onClick: handlePlus,\n    disabled: plusDisabled(),\n    fill: 'none',\n    shape: 'rectangular',\n    color: 'primary'\n  }, React.createElement(AddOutline, null))));\n};\n\nfunction convertValueToText(value) {\n  if (value === null) return '';\n  return value.toString();\n}\n\nfunction convertTextToValue(text) {\n  if (text === '') return null;\n  return parseFloat(text);\n}"]},"metadata":{},"sourceType":"module"}