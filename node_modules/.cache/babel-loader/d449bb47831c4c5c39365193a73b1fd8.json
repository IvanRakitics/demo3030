{"ast":null,"code":"import { canUseDom } from './can-use-dom';\nconst overflowScrollReg = /scroll|auto|overlay/i;\nconst defaultRoot = canUseDom ? window : undefined;\n\nfunction isElement(node) {\n  const ELEMENT_NODE_TYPE = 1;\n  return node.nodeType === ELEMENT_NODE_TYPE;\n} // https://github.com/youzan/vant/issues/3823\n\n\nexport function getScrollParent(el) {\n  let root = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultRoot;\n  let node = el;\n\n  while (node && node !== root && isElement(node)) {\n    const {\n      overflowY\n    } = window.getComputedStyle(node);\n\n    if (overflowScrollReg.test(overflowY)) {\n      return node;\n    }\n\n    node = node.parentNode;\n  }\n\n  return root;\n}","map":{"version":3,"sources":["D:/react/project0330/node_modules/antd-mobile/es/utils/get-scroll-parent.js"],"names":["canUseDom","overflowScrollReg","defaultRoot","window","undefined","isElement","node","ELEMENT_NODE_TYPE","nodeType","getScrollParent","el","root","overflowY","getComputedStyle","test","parentNode"],"mappings":"AAAA,SAASA,SAAT,QAA0B,eAA1B;AACA,MAAMC,iBAAiB,GAAG,sBAA1B;AACA,MAAMC,WAAW,GAAGF,SAAS,GAAGG,MAAH,GAAYC,SAAzC;;AAEA,SAASC,SAAT,CAAmBC,IAAnB,EAAyB;AACvB,QAAMC,iBAAiB,GAAG,CAA1B;AACA,SAAOD,IAAI,CAACE,QAAL,KAAkBD,iBAAzB;AACD,C,CAAC;;;AAGF,OAAO,SAASE,eAAT,CAAyBC,EAAzB,EAAiD;AAAA,MAApBC,IAAoB,uEAAbT,WAAa;AACtD,MAAII,IAAI,GAAGI,EAAX;;AAEA,SAAOJ,IAAI,IAAIA,IAAI,KAAKK,IAAjB,IAAyBN,SAAS,CAACC,IAAD,CAAzC,EAAiD;AAC/C,UAAM;AACJM,MAAAA;AADI,QAEFT,MAAM,CAACU,gBAAP,CAAwBP,IAAxB,CAFJ;;AAIA,QAAIL,iBAAiB,CAACa,IAAlB,CAAuBF,SAAvB,CAAJ,EAAuC;AACrC,aAAON,IAAP;AACD;;AAEDA,IAAAA,IAAI,GAAGA,IAAI,CAACS,UAAZ;AACD;;AAED,SAAOJ,IAAP;AACD","sourcesContent":["import { canUseDom } from './can-use-dom';\nconst overflowScrollReg = /scroll|auto|overlay/i;\nconst defaultRoot = canUseDom ? window : undefined;\n\nfunction isElement(node) {\n  const ELEMENT_NODE_TYPE = 1;\n  return node.nodeType === ELEMENT_NODE_TYPE;\n} // https://github.com/youzan/vant/issues/3823\n\n\nexport function getScrollParent(el, root = defaultRoot) {\n  let node = el;\n\n  while (node && node !== root && isElement(node)) {\n    const {\n      overflowY\n    } = window.getComputedStyle(node);\n\n    if (overflowScrollReg.test(overflowY)) {\n      return node;\n    }\n\n    node = node.parentNode;\n  }\n\n  return root;\n}"]},"metadata":{},"sourceType":"module"}