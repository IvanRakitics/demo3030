{"ast":null,"code":"import { useTouch } from './use-touch';\nimport { useEffect } from 'react';\nimport { getScrollParent } from './get-scroll-parent';\nimport { supportsPassive } from './supports-passive';\nvar totalLockCount = 0;\nvar BODY_LOCK_CLASS = 'adm-overflow-hidden'; // 移植自vant：https://github.com/youzan/vant/blob/HEAD/src/composables/use-lock-scroll.ts\n\nexport function useLockScroll(rootRef, shouldLock) {\n  var touch = useTouch();\n\n  var onTouchMove = function onTouchMove(event) {\n    touch.move(event);\n    var direction = touch.deltaY.current > 0 ? '10' : '01';\n    var el = getScrollParent(event.target, rootRef.current);\n    if (!el) return;\n    var scrollHeight = el.scrollHeight,\n        offsetHeight = el.offsetHeight,\n        scrollTop = el.scrollTop;\n    var status = '11';\n\n    if (scrollTop === 0) {\n      status = offsetHeight >= scrollHeight ? '00' : '01';\n    } else if (scrollTop + offsetHeight >= scrollHeight) {\n      status = '10';\n    }\n\n    if (status !== '11' && touch.isVertical() && !(parseInt(status, 2) & parseInt(direction, 2))) {\n      if (event.cancelable) {\n        event.preventDefault();\n      }\n    }\n  };\n\n  var lock = function lock() {\n    document.addEventListener('touchstart', touch.start);\n    document.addEventListener('touchmove', onTouchMove, supportsPassive ? {\n      passive: false\n    } : false);\n\n    if (!totalLockCount) {\n      document.body.classList.add(BODY_LOCK_CLASS);\n    }\n\n    totalLockCount++;\n  };\n\n  var unlock = function unlock() {\n    if (totalLockCount) {\n      document.removeEventListener('touchstart', touch.start);\n      document.removeEventListener('touchmove', onTouchMove);\n      totalLockCount--;\n\n      if (!totalLockCount) {\n        document.body.classList.remove(BODY_LOCK_CLASS);\n      }\n    }\n  };\n\n  useEffect(function () {\n    if (shouldLock) {\n      lock();\n      return function () {\n        unlock();\n      };\n    }\n  }, [shouldLock]);\n}","map":null,"metadata":{},"sourceType":"module"}