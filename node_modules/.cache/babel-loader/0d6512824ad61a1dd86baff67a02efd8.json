{"ast":null,"code":"import { useSpring } from '@react-spring/web';\nimport { useMutationEffect } from './use-mutation-effect';\nimport { bound } from './bound';\nimport { useIsomorphicLayoutEffect } from 'ahooks';\nimport { useIsomorphicUpdateLayoutEffect } from './use-isomorphic-update-layout-effect';\nexport const useTabListScroll = (targetRef, activeIndex) => {\n  const [{\n    scrollLeft\n  }, api] = useSpring(() => ({\n    scrollLeft: 0,\n    config: {\n      tension: 300,\n      clamp: true\n    }\n  }));\n\n  function animate() {\n    let immediate = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    const container = targetRef.current;\n    if (!container) return;\n    if (activeIndex === undefined) return;\n    const activeTabWrapper = container.children.item(activeIndex);\n    const activeTab = activeTabWrapper.children.item(0);\n    const activeTabLeft = activeTab.offsetLeft;\n    const activeTabWidth = activeTab.offsetWidth;\n    const containerWidth = container.offsetWidth;\n    const containerScrollWidth = container.scrollWidth;\n    const containerScrollLeft = container.scrollLeft;\n    const maxScrollDistance = containerScrollWidth - containerWidth;\n    if (maxScrollDistance <= 0) return;\n    const nextScrollLeft = bound(activeTabLeft - (containerWidth - activeTabWidth) / 2, 0, containerScrollWidth - containerWidth);\n    api.start({\n      scrollLeft: nextScrollLeft,\n      from: {\n        scrollLeft: containerScrollLeft\n      },\n      immediate\n    });\n  }\n\n  useIsomorphicLayoutEffect(() => {\n    animate(true);\n  }, []);\n  useIsomorphicUpdateLayoutEffect(() => {\n    animate();\n  }, [activeIndex]);\n  useMutationEffect(() => {\n    animate(true);\n  }, targetRef, {\n    subtree: true,\n    childList: true,\n    characterData: true\n  });\n  return {\n    scrollLeft,\n    animate\n  };\n};","map":{"version":3,"sources":["D:/react/project0330/node_modules/antd-mobile/es/utils/use-tab-list-scroll.js"],"names":["useSpring","useMutationEffect","bound","useIsomorphicLayoutEffect","useIsomorphicUpdateLayoutEffect","useTabListScroll","targetRef","activeIndex","scrollLeft","api","config","tension","clamp","animate","immediate","container","current","undefined","activeTabWrapper","children","item","activeTab","activeTabLeft","offsetLeft","activeTabWidth","offsetWidth","containerWidth","containerScrollWidth","scrollWidth","containerScrollLeft","maxScrollDistance","nextScrollLeft","start","from","subtree","childList","characterData"],"mappings":"AAAA,SAASA,SAAT,QAA0B,mBAA1B;AACA,SAASC,iBAAT,QAAkC,uBAAlC;AACA,SAASC,KAAT,QAAsB,SAAtB;AACA,SAASC,yBAAT,QAA0C,QAA1C;AACA,SAASC,+BAAT,QAAgD,uCAAhD;AACA,OAAO,MAAMC,gBAAgB,GAAG,CAACC,SAAD,EAAYC,WAAZ,KAA4B;AAC1D,QAAM,CAAC;AACLC,IAAAA;AADK,GAAD,EAEHC,GAFG,IAEIT,SAAS,CAAC,OAAO;AACzBQ,IAAAA,UAAU,EAAE,CADa;AAEzBE,IAAAA,MAAM,EAAE;AACNC,MAAAA,OAAO,EAAE,GADH;AAENC,MAAAA,KAAK,EAAE;AAFD;AAFiB,GAAP,CAAD,CAFnB;;AAUA,WAASC,OAAT,GAAoC;AAAA,QAAnBC,SAAmB,uEAAP,KAAO;AAClC,UAAMC,SAAS,GAAGT,SAAS,CAACU,OAA5B;AACA,QAAI,CAACD,SAAL,EAAgB;AAChB,QAAIR,WAAW,KAAKU,SAApB,EAA+B;AAC/B,UAAMC,gBAAgB,GAAGH,SAAS,CAACI,QAAV,CAAmBC,IAAnB,CAAwBb,WAAxB,CAAzB;AACA,UAAMc,SAAS,GAAGH,gBAAgB,CAACC,QAAjB,CAA0BC,IAA1B,CAA+B,CAA/B,CAAlB;AACA,UAAME,aAAa,GAAGD,SAAS,CAACE,UAAhC;AACA,UAAMC,cAAc,GAAGH,SAAS,CAACI,WAAjC;AACA,UAAMC,cAAc,GAAGX,SAAS,CAACU,WAAjC;AACA,UAAME,oBAAoB,GAAGZ,SAAS,CAACa,WAAvC;AACA,UAAMC,mBAAmB,GAAGd,SAAS,CAACP,UAAtC;AACA,UAAMsB,iBAAiB,GAAGH,oBAAoB,GAAGD,cAAjD;AACA,QAAII,iBAAiB,IAAI,CAAzB,EAA4B;AAC5B,UAAMC,cAAc,GAAG7B,KAAK,CAACoB,aAAa,GAAG,CAACI,cAAc,GAAGF,cAAlB,IAAoC,CAArD,EAAwD,CAAxD,EAA2DG,oBAAoB,GAAGD,cAAlF,CAA5B;AACAjB,IAAAA,GAAG,CAACuB,KAAJ,CAAU;AACRxB,MAAAA,UAAU,EAAEuB,cADJ;AAERE,MAAAA,IAAI,EAAE;AACJzB,QAAAA,UAAU,EAAEqB;AADR,OAFE;AAKRf,MAAAA;AALQ,KAAV;AAOD;;AAEDX,EAAAA,yBAAyB,CAAC,MAAM;AAC9BU,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD,GAFwB,EAEtB,EAFsB,CAAzB;AAGAT,EAAAA,+BAA+B,CAAC,MAAM;AACpCS,IAAAA,OAAO;AACR,GAF8B,EAE5B,CAACN,WAAD,CAF4B,CAA/B;AAGAN,EAAAA,iBAAiB,CAAC,MAAM;AACtBY,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD,GAFgB,EAEdP,SAFc,EAEH;AACZ4B,IAAAA,OAAO,EAAE,IADG;AAEZC,IAAAA,SAAS,EAAE,IAFC;AAGZC,IAAAA,aAAa,EAAE;AAHH,GAFG,CAAjB;AAOA,SAAO;AACL5B,IAAAA,UADK;AAELK,IAAAA;AAFK,GAAP;AAID,CAnDM","sourcesContent":["import { useSpring } from '@react-spring/web';\nimport { useMutationEffect } from './use-mutation-effect';\nimport { bound } from './bound';\nimport { useIsomorphicLayoutEffect } from 'ahooks';\nimport { useIsomorphicUpdateLayoutEffect } from './use-isomorphic-update-layout-effect';\nexport const useTabListScroll = (targetRef, activeIndex) => {\n  const [{\n    scrollLeft\n  }, api] = useSpring(() => ({\n    scrollLeft: 0,\n    config: {\n      tension: 300,\n      clamp: true\n    }\n  }));\n\n  function animate(immediate = false) {\n    const container = targetRef.current;\n    if (!container) return;\n    if (activeIndex === undefined) return;\n    const activeTabWrapper = container.children.item(activeIndex);\n    const activeTab = activeTabWrapper.children.item(0);\n    const activeTabLeft = activeTab.offsetLeft;\n    const activeTabWidth = activeTab.offsetWidth;\n    const containerWidth = container.offsetWidth;\n    const containerScrollWidth = container.scrollWidth;\n    const containerScrollLeft = container.scrollLeft;\n    const maxScrollDistance = containerScrollWidth - containerWidth;\n    if (maxScrollDistance <= 0) return;\n    const nextScrollLeft = bound(activeTabLeft - (containerWidth - activeTabWidth) / 2, 0, containerScrollWidth - containerWidth);\n    api.start({\n      scrollLeft: nextScrollLeft,\n      from: {\n        scrollLeft: containerScrollLeft\n      },\n      immediate\n    });\n  }\n\n  useIsomorphicLayoutEffect(() => {\n    animate(true);\n  }, []);\n  useIsomorphicUpdateLayoutEffect(() => {\n    animate();\n  }, [activeIndex]);\n  useMutationEffect(() => {\n    animate(true);\n  }, targetRef, {\n    subtree: true,\n    childList: true,\n    characterData: true\n  });\n  return {\n    scrollLeft,\n    animate\n  };\n};"]},"metadata":{},"sourceType":"module"}