{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { mergeProps } from '../../utils/with-default-props';\nimport { animated, useSpring } from '@react-spring/web';\nimport { useDrag } from '@use-gesture/react';\nimport { getScrollParent } from '../../utils/get-scroll-parent';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { supportsPassive } from '../../utils/supports-passive';\nimport { convertPx } from '../../utils/convert-px';\nimport { rubberbandIfOutOfBounds } from '../../utils/rubberband';\nimport { useConfig } from '../config-provider';\nimport { sleep } from '../../utils/sleep';\nconst classPrefix = `adm-pull-to-refresh`;\nexport const defaultProps = {\n  pullingText: '下拉刷新',\n  canReleaseText: '释放立即刷新',\n  refreshingText: '加载中……',\n  completeText: '刷新成功',\n  completeDelay: 500,\n  disabled: false,\n  onRefresh: () => {}\n};\nexport const PullToRefresh = p => {\n  var _a, _b;\n\n  const {\n    locale\n  } = useConfig();\n  const props = mergeProps(defaultProps, {\n    refreshingText: locale.common.loading,\n    pullingText: locale.PullToRefresh.pulling,\n    canReleaseText: locale.PullToRefresh.canRelease,\n    completeText: locale.PullToRefresh.complete\n  }, p);\n  const headHeight = (_a = props.headHeight) !== null && _a !== void 0 ? _a : convertPx(40);\n  const threshold = (_b = props.threshold) !== null && _b !== void 0 ? _b : convertPx(60);\n  const [status, setStatus] = useState('pulling');\n  const [springStyles, api] = useSpring(() => ({\n    from: {\n      height: 0\n    },\n    config: {\n      tension: 300,\n      friction: 30,\n      clamp: true\n    }\n  }));\n  const elementRef = useRef(null);\n  const pullingRef = useRef(false); //防止下拉时抖动\n\n  useEffect(() => {\n    var _a;\n\n    (_a = elementRef.current) === null || _a === void 0 ? void 0 : _a.addEventListener('touchmove', () => {});\n  }, []);\n\n  function doRefresh() {\n    return __awaiter(this, void 0, void 0, function* () {\n      api.start({\n        height: headHeight\n      });\n      setStatus('refreshing');\n\n      try {\n        yield props.onRefresh();\n        setStatus('complete');\n      } catch (e) {\n        api.start({\n          to: next => __awaiter(this, void 0, void 0, function* () {\n            yield next({\n              height: 0\n            });\n            setStatus('pulling');\n          })\n        });\n        throw e;\n      }\n\n      if (props.completeDelay > 0) {\n        yield sleep(props.completeDelay);\n      }\n\n      api.start({\n        to: next => __awaiter(this, void 0, void 0, function* () {\n          yield next({\n            height: 0\n          });\n          setStatus('pulling');\n        })\n      });\n    });\n  }\n\n  useDrag(state => {\n    if (status === 'refreshing' || status === 'complete') return;\n    const {\n      event\n    } = state;\n\n    if (state.last) {\n      pullingRef.current = false;\n\n      if (status === 'canRelease') {\n        doRefresh();\n      } else {\n        api.start({\n          height: 0\n        });\n      }\n\n      return;\n    }\n\n    const [, y] = state.movement;\n\n    if (state.first && y > 0) {\n      const target = state.event.target;\n      if (!target || !(target instanceof Element)) return;\n      let scrollParent = getScrollParent(target);\n\n      while (true) {\n        if (!scrollParent) return;\n        const scrollTop = getScrollTop(scrollParent);\n\n        if (scrollTop > 0) {\n          return;\n        }\n\n        if (scrollParent instanceof Window) {\n          break;\n        }\n\n        scrollParent = getScrollParent(scrollParent.parentNode);\n      }\n\n      pullingRef.current = true;\n\n      function getScrollTop(element) {\n        return 'scrollTop' in element ? element.scrollTop : element.scrollY;\n      }\n    }\n\n    if (!pullingRef.current) return;\n\n    if (event.cancelable) {\n      event.preventDefault();\n    }\n\n    event.stopPropagation();\n    const height = Math.max(rubberbandIfOutOfBounds(y, 0, 0, headHeight * 5, 0.5), 0);\n    api.start({\n      height\n    });\n    setStatus(height > threshold ? 'canRelease' : 'pulling');\n  }, {\n    pointer: {\n      touch: true\n    },\n    axis: 'y',\n    target: elementRef,\n    enabled: !props.disabled,\n    eventOptions: supportsPassive ? {\n      passive: false\n    } : false\n  });\n\n  const renderStatusText = () => {\n    var _a;\n\n    if (props.renderText) {\n      return (_a = props.renderText) === null || _a === void 0 ? void 0 : _a.call(props, status);\n    }\n\n    if (status === 'pulling') return props.pullingText;\n    if (status === 'canRelease') return props.canReleaseText;\n    if (status === 'refreshing') return props.refreshingText;\n    if (status === 'complete') return props.completeText;\n  };\n\n  return React.createElement(animated.div, {\n    ref: elementRef,\n    className: classPrefix\n  }, React.createElement(animated.div, {\n    style: springStyles,\n    className: `${classPrefix}-head`\n  }, React.createElement(\"div\", {\n    className: `${classPrefix}-head-content`,\n    style: {\n      height: headHeight\n    }\n  }, renderStatusText())), React.createElement(\"div\", {\n    className: `${classPrefix}-content`\n  }, props.children));\n};","map":{"version":3,"sources":["D:/react/project0330/node_modules/antd-mobile/es/components/pull-to-refresh/pull-to-refresh.js"],"names":["__awaiter","mergeProps","animated","useSpring","useDrag","getScrollParent","React","useEffect","useRef","useState","supportsPassive","convertPx","rubberbandIfOutOfBounds","useConfig","sleep","classPrefix","defaultProps","pullingText","canReleaseText","refreshingText","completeText","completeDelay","disabled","onRefresh","PullToRefresh","p","_a","_b","locale","props","common","loading","pulling","canRelease","complete","headHeight","threshold","status","setStatus","springStyles","api","from","height","config","tension","friction","clamp","elementRef","pullingRef","current","addEventListener","doRefresh","start","e","to","next","state","event","last","y","movement","first","target","Element","scrollParent","scrollTop","getScrollTop","Window","parentNode","element","scrollY","cancelable","preventDefault","stopPropagation","Math","max","pointer","touch","axis","enabled","eventOptions","passive","renderStatusText","renderText","call","createElement","div","ref","className","style","children"],"mappings":"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","sourcesContent":["import { __awaiter } from \"tslib\";\nimport { mergeProps } from '../../utils/with-default-props';\nimport { animated, useSpring } from '@react-spring/web';\nimport { useDrag } from '@use-gesture/react';\nimport { getScrollParent } from '../../utils/get-scroll-parent';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { supportsPassive } from '../../utils/supports-passive';\nimport { convertPx } from '../../utils/convert-px';\nimport { rubberbandIfOutOfBounds } from '../../utils/rubberband';\nimport { useConfig } from '../config-provider';\nimport { sleep } from '../../utils/sleep';\nconst classPrefix = `adm-pull-to-refresh`;\nexport const defaultProps = {\n  pullingText: '下拉刷新',\n  canReleaseText: '释放立即刷新',\n  refreshingText: '加载中……',\n  completeText: '刷新成功',\n  completeDelay: 500,\n  disabled: false,\n  onRefresh: () => {}\n};\nexport const PullToRefresh = p => {\n  var _a, _b;\n\n  const {\n    locale\n  } = useConfig();\n  const props = mergeProps(defaultProps, {\n    refreshingText: locale.common.loading,\n    pullingText: locale.PullToRefresh.pulling,\n    canReleaseText: locale.PullToRefresh.canRelease,\n    completeText: locale.PullToRefresh.complete\n  }, p);\n  const headHeight = (_a = props.headHeight) !== null && _a !== void 0 ? _a : convertPx(40);\n  const threshold = (_b = props.threshold) !== null && _b !== void 0 ? _b : convertPx(60);\n  const [status, setStatus] = useState('pulling');\n  const [springStyles, api] = useSpring(() => ({\n    from: {\n      height: 0\n    },\n    config: {\n      tension: 300,\n      friction: 30,\n      clamp: true\n    }\n  }));\n  const elementRef = useRef(null);\n  const pullingRef = useRef(false); //防止下拉时抖动\n\n  useEffect(() => {\n    var _a;\n\n    (_a = elementRef.current) === null || _a === void 0 ? void 0 : _a.addEventListener('touchmove', () => {});\n  }, []);\n\n  function doRefresh() {\n    return __awaiter(this, void 0, void 0, function* () {\n      api.start({\n        height: headHeight\n      });\n      setStatus('refreshing');\n\n      try {\n        yield props.onRefresh();\n        setStatus('complete');\n      } catch (e) {\n        api.start({\n          to: next => __awaiter(this, void 0, void 0, function* () {\n            yield next({\n              height: 0\n            });\n            setStatus('pulling');\n          })\n        });\n        throw e;\n      }\n\n      if (props.completeDelay > 0) {\n        yield sleep(props.completeDelay);\n      }\n\n      api.start({\n        to: next => __awaiter(this, void 0, void 0, function* () {\n          yield next({\n            height: 0\n          });\n          setStatus('pulling');\n        })\n      });\n    });\n  }\n\n  useDrag(state => {\n    if (status === 'refreshing' || status === 'complete') return;\n    const {\n      event\n    } = state;\n\n    if (state.last) {\n      pullingRef.current = false;\n\n      if (status === 'canRelease') {\n        doRefresh();\n      } else {\n        api.start({\n          height: 0\n        });\n      }\n\n      return;\n    }\n\n    const [, y] = state.movement;\n\n    if (state.first && y > 0) {\n      const target = state.event.target;\n      if (!target || !(target instanceof Element)) return;\n      let scrollParent = getScrollParent(target);\n\n      while (true) {\n        if (!scrollParent) return;\n        const scrollTop = getScrollTop(scrollParent);\n\n        if (scrollTop > 0) {\n          return;\n        }\n\n        if (scrollParent instanceof Window) {\n          break;\n        }\n\n        scrollParent = getScrollParent(scrollParent.parentNode);\n      }\n\n      pullingRef.current = true;\n\n      function getScrollTop(element) {\n        return 'scrollTop' in element ? element.scrollTop : element.scrollY;\n      }\n    }\n\n    if (!pullingRef.current) return;\n\n    if (event.cancelable) {\n      event.preventDefault();\n    }\n\n    event.stopPropagation();\n    const height = Math.max(rubberbandIfOutOfBounds(y, 0, 0, headHeight * 5, 0.5), 0);\n    api.start({\n      height\n    });\n    setStatus(height > threshold ? 'canRelease' : 'pulling');\n  }, {\n    pointer: {\n      touch: true\n    },\n    axis: 'y',\n    target: elementRef,\n    enabled: !props.disabled,\n    eventOptions: supportsPassive ? {\n      passive: false\n    } : false\n  });\n\n  const renderStatusText = () => {\n    var _a;\n\n    if (props.renderText) {\n      return (_a = props.renderText) === null || _a === void 0 ? void 0 : _a.call(props, status);\n    }\n\n    if (status === 'pulling') return props.pullingText;\n    if (status === 'canRelease') return props.canReleaseText;\n    if (status === 'refreshing') return props.refreshingText;\n    if (status === 'complete') return props.completeText;\n  };\n\n  return React.createElement(animated.div, {\n    ref: elementRef,\n    className: classPrefix\n  }, React.createElement(animated.div, {\n    style: springStyles,\n    className: `${classPrefix}-head`\n  }, React.createElement(\"div\", {\n    className: `${classPrefix}-head-content`,\n    style: {\n      height: headHeight\n    }\n  }, renderStatusText())), React.createElement(\"div\", {\n    className: `${classPrefix}-content`\n  }, props.children));\n};"]},"metadata":{},"sourceType":"module"}