{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\react\\\\project0330\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _slicedToArray from \"D:\\\\react\\\\project0330\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport { __awaiter } from \"tslib\";\nimport React, { useState } from 'react';\nimport classNames from 'classnames';\nimport Button from '../button';\nimport { withNativeProps } from '../../utils/native-props';\nexport var ModalActionButton = function ModalActionButton(props) {\n  var action = props.action;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  function handleClick() {\n    return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var promise;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setLoading(true);\n              _context.prev = 1;\n              promise = props.onAction();\n              _context.next = 5;\n              return promise;\n\n            case 5:\n              setLoading(false);\n              _context.next = 12;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](1);\n              setLoading(false);\n              throw _context.t0;\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 8]]);\n    }));\n  }\n\n  return withNativeProps(props.action, React.createElement(Button, {\n    key: action.key,\n    onClick: handleClick,\n    className: classNames('adm-modal-button', {\n      'adm-modal-button-primary': props.action.primary\n    }),\n    fill: props.action.primary ? 'solid' : 'none',\n    size: props.action.primary ? 'large' : 'middle',\n    block: true,\n    color: action.danger ? 'danger' : 'primary',\n    loading: loading,\n    disabled: action.disabled\n  }, action.text));\n};","map":null,"metadata":{},"sourceType":"module"}