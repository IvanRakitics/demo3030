{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { show } from './show';\nimport { mergeProps } from '../../utils/with-default-props';\nimport { getDefaultConfig } from '../config-provider';\nconst defaultProps = {\n  confirmText: '确认',\n  cancelText: '取消'\n};\nexport function confirm(p) {\n  const {\n    locale\n  } = getDefaultConfig();\n  const props = mergeProps(defaultProps, {\n    confirmText: locale.common.confirm,\n    cancelText: locale.common.cancel\n  }, p);\n  return new Promise(resolve => {\n    show(Object.assign(Object.assign({}, props), {\n      closeOnAction: true,\n      onClose: () => {\n        var _a;\n\n        (_a = props.onClose) === null || _a === void 0 ? void 0 : _a.call(props);\n        resolve(false);\n      },\n      actions: [[{\n        key: 'cancel',\n        text: props.cancelText,\n        onClick: () => __awaiter(this, void 0, void 0, function* () {\n          var _a;\n\n          yield (_a = props.onCancel) === null || _a === void 0 ? void 0 : _a.call(props);\n          resolve(false);\n        })\n      }, {\n        key: 'confirm',\n        text: props.confirmText,\n        bold: true,\n        onClick: () => __awaiter(this, void 0, void 0, function* () {\n          var _b;\n\n          yield (_b = props.onConfirm) === null || _b === void 0 ? void 0 : _b.call(props);\n          resolve(true);\n        })\n      }]]\n    }));\n  });\n}","map":{"version":3,"sources":["D:/react/project0330/node_modules/antd-mobile/es/components/dialog/confirm.js"],"names":["__awaiter","show","mergeProps","getDefaultConfig","defaultProps","confirmText","cancelText","confirm","p","locale","props","common","cancel","Promise","resolve","Object","assign","closeOnAction","onClose","_a","call","actions","key","text","onClick","onCancel","bold","_b","onConfirm"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,SAASC,UAAT,QAA2B,gCAA3B;AACA,SAASC,gBAAT,QAAiC,oBAAjC;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,WAAW,EAAE,IADM;AAEnBC,EAAAA,UAAU,EAAE;AAFO,CAArB;AAIA,OAAO,SAASC,OAAT,CAAiBC,CAAjB,EAAoB;AACzB,QAAM;AACJC,IAAAA;AADI,MAEFN,gBAAgB,EAFpB;AAGA,QAAMO,KAAK,GAAGR,UAAU,CAACE,YAAD,EAAe;AACrCC,IAAAA,WAAW,EAAEI,MAAM,CAACE,MAAP,CAAcJ,OADU;AAErCD,IAAAA,UAAU,EAAEG,MAAM,CAACE,MAAP,CAAcC;AAFW,GAAf,EAGrBJ,CAHqB,CAAxB;AAIA,SAAO,IAAIK,OAAJ,CAAYC,OAAO,IAAI;AAC5Bb,IAAAA,IAAI,CAACc,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,KAAlB,CAAd,EAAwC;AAC3CO,MAAAA,aAAa,EAAE,IAD4B;AAE3CC,MAAAA,OAAO,EAAE,MAAM;AACb,YAAIC,EAAJ;;AAEA,SAACA,EAAE,GAAGT,KAAK,CAACQ,OAAZ,MAAyB,IAAzB,IAAiCC,EAAE,KAAK,KAAK,CAA7C,GAAiD,KAAK,CAAtD,GAA0DA,EAAE,CAACC,IAAH,CAAQV,KAAR,CAA1D;AACAI,QAAAA,OAAO,CAAC,KAAD,CAAP;AACD,OAP0C;AAQ3CO,MAAAA,OAAO,EAAE,CAAC,CAAC;AACTC,QAAAA,GAAG,EAAE,QADI;AAETC,QAAAA,IAAI,EAAEb,KAAK,CAACJ,UAFH;AAGTkB,QAAAA,OAAO,EAAE,MAAMxB,SAAS,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,aAAa;AAC1D,cAAImB,EAAJ;;AAEA,gBAAM,CAACA,EAAE,GAAGT,KAAK,CAACe,QAAZ,MAA0B,IAA1B,IAAkCN,EAAE,KAAK,KAAK,CAA9C,GAAkD,KAAK,CAAvD,GAA2DA,EAAE,CAACC,IAAH,CAAQV,KAAR,CAAjE;AACAI,UAAAA,OAAO,CAAC,KAAD,CAAP;AACD,SALuB;AAHf,OAAD,EASP;AACDQ,QAAAA,GAAG,EAAE,SADJ;AAEDC,QAAAA,IAAI,EAAEb,KAAK,CAACL,WAFX;AAGDqB,QAAAA,IAAI,EAAE,IAHL;AAIDF,QAAAA,OAAO,EAAE,MAAMxB,SAAS,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,aAAa;AAC1D,cAAI2B,EAAJ;;AAEA,gBAAM,CAACA,EAAE,GAAGjB,KAAK,CAACkB,SAAZ,MAA2B,IAA3B,IAAmCD,EAAE,KAAK,KAAK,CAA/C,GAAmD,KAAK,CAAxD,GAA4DA,EAAE,CAACP,IAAH,CAAQV,KAAR,CAAlE;AACAI,UAAAA,OAAO,CAAC,IAAD,CAAP;AACD,SALuB;AAJvB,OATO,CAAD;AARkC,KAAxC,CAAD,CAAJ;AA6BD,GA9BM,CAAP;AA+BD","sourcesContent":["import { __awaiter } from \"tslib\";\nimport { show } from './show';\nimport { mergeProps } from '../../utils/with-default-props';\nimport { getDefaultConfig } from '../config-provider';\nconst defaultProps = {\n  confirmText: '确认',\n  cancelText: '取消'\n};\nexport function confirm(p) {\n  const {\n    locale\n  } = getDefaultConfig();\n  const props = mergeProps(defaultProps, {\n    confirmText: locale.common.confirm,\n    cancelText: locale.common.cancel\n  }, p);\n  return new Promise(resolve => {\n    show(Object.assign(Object.assign({}, props), {\n      closeOnAction: true,\n      onClose: () => {\n        var _a;\n\n        (_a = props.onClose) === null || _a === void 0 ? void 0 : _a.call(props);\n        resolve(false);\n      },\n      actions: [[{\n        key: 'cancel',\n        text: props.cancelText,\n        onClick: () => __awaiter(this, void 0, void 0, function* () {\n          var _a;\n\n          yield (_a = props.onCancel) === null || _a === void 0 ? void 0 : _a.call(props);\n          resolve(false);\n        })\n      }, {\n        key: 'confirm',\n        text: props.confirmText,\n        bold: true,\n        onClick: () => __awaiter(this, void 0, void 0, function* () {\n          var _b;\n\n          yield (_b = props.onConfirm) === null || _b === void 0 ? void 0 : _b.call(props);\n          resolve(true);\n        })\n      }]]\n    }));\n  });\n}"]},"metadata":{},"sourceType":"module"}