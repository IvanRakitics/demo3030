{"ast":null,"code":"import React, { useContext } from 'react';\nimport { withNativeProps } from '../../utils/native-props';\nimport classNames from 'classnames';\nimport { CheckboxGroupContext } from './group-context';\nimport { usePropsValue } from '../../utils/use-props-value';\nimport { mergeProps } from '../../utils/with-default-props';\nimport { devWarning } from '../../utils/dev-log';\nimport { CheckIcon } from './check-icon';\nimport { IndeterminateIcon } from './indeterminate-icon';\nimport { isDev } from '../../utils/is-dev';\nimport { NativeInput } from './native-input';\nconst classPrefix = `adm-checkbox`;\nconst defaultProps = {\n  defaultChecked: false,\n  indeterminate: false\n};\nexport const Checkbox = p => {\n  const groupContext = useContext(CheckboxGroupContext);\n  const props = mergeProps(defaultProps, p);\n  let [checked, setChecked] = usePropsValue({\n    value: props.checked,\n    defaultValue: props.defaultChecked,\n    onChange: props.onChange\n  });\n  let disabled = props.disabled;\n  const {\n    value\n  } = props;\n\n  if (groupContext && value !== undefined) {\n    if (isDev) {\n      if (p.checked !== undefined) {\n        devWarning('Checkbox', 'When used within `Checkbox.Group`, the `checked` prop of `Checkbox` will not work.');\n      }\n\n      if (p.defaultChecked !== undefined) {\n        devWarning('Checkbox', 'When used within `Checkbox.Group`, the `defaultChecked` prop of `Checkbox` will not work.');\n      }\n    }\n\n    checked = groupContext.value.includes(value);\n\n    setChecked = checked => {\n      var _a;\n\n      if (checked) {\n        groupContext.check(value);\n      } else {\n        groupContext.uncheck(value);\n      }\n\n      (_a = props.onChange) === null || _a === void 0 ? void 0 : _a.call(props, checked);\n    };\n\n    disabled = disabled || groupContext.disabled;\n  }\n\n  const renderIcon = () => {\n    if (props.icon) {\n      return React.createElement(\"div\", {\n        className: `${classPrefix}-custom-icon`\n      }, props.icon(checked, props.indeterminate));\n    }\n\n    return React.createElement(\"div\", {\n      className: `${classPrefix}-icon`\n    }, props.indeterminate ? React.createElement(IndeterminateIcon, null) : checked && React.createElement(CheckIcon, null));\n  };\n\n  return withNativeProps(props, React.createElement(\"label\", {\n    className: classNames(classPrefix, {\n      [`${classPrefix}-checked`]: checked && !props.indeterminate,\n      [`${classPrefix}-indeterminate`]: props.indeterminate,\n      [`${classPrefix}-disabled`]: disabled,\n      [`${classPrefix}-block`]: props.block\n    })\n  }, React.createElement(NativeInput, {\n    type: 'checkbox',\n    checked: checked,\n    onChange: setChecked,\n    disabled: disabled,\n    id: props.id\n  }), renderIcon(), props.children && React.createElement(\"div\", {\n    className: `${classPrefix}-content`\n  }, props.children)));\n};","map":{"version":3,"sources":["D:/react/project0330/node_modules/antd-mobile/es/components/checkbox/checkbox.js"],"names":["React","useContext","withNativeProps","classNames","CheckboxGroupContext","usePropsValue","mergeProps","devWarning","CheckIcon","IndeterminateIcon","isDev","NativeInput","classPrefix","defaultProps","defaultChecked","indeterminate","Checkbox","p","groupContext","props","checked","setChecked","value","defaultValue","onChange","disabled","undefined","includes","_a","check","uncheck","call","renderIcon","icon","createElement","className","block","type","id","children"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,eAAT,QAAgC,0BAAhC;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,oBAAT,QAAqC,iBAArC;AACA,SAASC,aAAT,QAA8B,6BAA9B;AACA,SAASC,UAAT,QAA2B,gCAA3B;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,SAASC,iBAAT,QAAkC,sBAAlC;AACA,SAASC,KAAT,QAAsB,oBAAtB;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,MAAMC,WAAW,GAAI,cAArB;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,cAAc,EAAE,KADG;AAEnBC,EAAAA,aAAa,EAAE;AAFI,CAArB;AAIA,OAAO,MAAMC,QAAQ,GAAGC,CAAC,IAAI;AAC3B,QAAMC,YAAY,GAAGjB,UAAU,CAACG,oBAAD,CAA/B;AACA,QAAMe,KAAK,GAAGb,UAAU,CAACO,YAAD,EAAeI,CAAf,CAAxB;AACA,MAAI,CAACG,OAAD,EAAUC,UAAV,IAAwBhB,aAAa,CAAC;AACxCiB,IAAAA,KAAK,EAAEH,KAAK,CAACC,OAD2B;AAExCG,IAAAA,YAAY,EAAEJ,KAAK,CAACL,cAFoB;AAGxCU,IAAAA,QAAQ,EAAEL,KAAK,CAACK;AAHwB,GAAD,CAAzC;AAKA,MAAIC,QAAQ,GAAGN,KAAK,CAACM,QAArB;AACA,QAAM;AACJH,IAAAA;AADI,MAEFH,KAFJ;;AAIA,MAAID,YAAY,IAAII,KAAK,KAAKI,SAA9B,EAAyC;AACvC,QAAIhB,KAAJ,EAAW;AACT,UAAIO,CAAC,CAACG,OAAF,KAAcM,SAAlB,EAA6B;AAC3BnB,QAAAA,UAAU,CAAC,UAAD,EAAa,oFAAb,CAAV;AACD;;AAED,UAAIU,CAAC,CAACH,cAAF,KAAqBY,SAAzB,EAAoC;AAClCnB,QAAAA,UAAU,CAAC,UAAD,EAAa,2FAAb,CAAV;AACD;AACF;;AAEDa,IAAAA,OAAO,GAAGF,YAAY,CAACI,KAAb,CAAmBK,QAAnB,CAA4BL,KAA5B,CAAV;;AAEAD,IAAAA,UAAU,GAAGD,OAAO,IAAI;AACtB,UAAIQ,EAAJ;;AAEA,UAAIR,OAAJ,EAAa;AACXF,QAAAA,YAAY,CAACW,KAAb,CAAmBP,KAAnB;AACD,OAFD,MAEO;AACLJ,QAAAA,YAAY,CAACY,OAAb,CAAqBR,KAArB;AACD;;AAED,OAACM,EAAE,GAAGT,KAAK,CAACK,QAAZ,MAA0B,IAA1B,IAAkCI,EAAE,KAAK,KAAK,CAA9C,GAAkD,KAAK,CAAvD,GAA2DA,EAAE,CAACG,IAAH,CAAQZ,KAAR,EAAeC,OAAf,CAA3D;AACD,KAVD;;AAYAK,IAAAA,QAAQ,GAAGA,QAAQ,IAAIP,YAAY,CAACO,QAApC;AACD;;AAED,QAAMO,UAAU,GAAG,MAAM;AACvB,QAAIb,KAAK,CAACc,IAAV,EAAgB;AACd,aAAOjC,KAAK,CAACkC,aAAN,CAAoB,KAApB,EAA2B;AAChCC,QAAAA,SAAS,EAAG,GAAEvB,WAAY;AADM,OAA3B,EAEJO,KAAK,CAACc,IAAN,CAAWb,OAAX,EAAoBD,KAAK,CAACJ,aAA1B,CAFI,CAAP;AAGD;;AAED,WAAOf,KAAK,CAACkC,aAAN,CAAoB,KAApB,EAA2B;AAChCC,MAAAA,SAAS,EAAG,GAAEvB,WAAY;AADM,KAA3B,EAEJO,KAAK,CAACJ,aAAN,GAAsBf,KAAK,CAACkC,aAAN,CAAoBzB,iBAApB,EAAuC,IAAvC,CAAtB,GAAqEW,OAAO,IAAIpB,KAAK,CAACkC,aAAN,CAAoB1B,SAApB,EAA+B,IAA/B,CAF5E,CAAP;AAGD,GAVD;;AAYA,SAAON,eAAe,CAACiB,KAAD,EAAQnB,KAAK,CAACkC,aAAN,CAAoB,OAApB,EAA6B;AACzDC,IAAAA,SAAS,EAAEhC,UAAU,CAACS,WAAD,EAAc;AACjC,OAAE,GAAEA,WAAY,UAAhB,GAA4BQ,OAAO,IAAI,CAACD,KAAK,CAACJ,aADb;AAEjC,OAAE,GAAEH,WAAY,gBAAhB,GAAkCO,KAAK,CAACJ,aAFP;AAGjC,OAAE,GAAEH,WAAY,WAAhB,GAA6Ba,QAHI;AAIjC,OAAE,GAAEb,WAAY,QAAhB,GAA0BO,KAAK,CAACiB;AAJC,KAAd;AADoC,GAA7B,EAO3BpC,KAAK,CAACkC,aAAN,CAAoBvB,WAApB,EAAiC;AAClC0B,IAAAA,IAAI,EAAE,UAD4B;AAElCjB,IAAAA,OAAO,EAAEA,OAFyB;AAGlCI,IAAAA,QAAQ,EAAEH,UAHwB;AAIlCI,IAAAA,QAAQ,EAAEA,QAJwB;AAKlCa,IAAAA,EAAE,EAAEnB,KAAK,CAACmB;AALwB,GAAjC,CAP2B,EAa1BN,UAAU,EAbgB,EAaZb,KAAK,CAACoB,QAAN,IAAkBvC,KAAK,CAACkC,aAAN,CAAoB,KAApB,EAA2B;AAC7DC,IAAAA,SAAS,EAAG,GAAEvB,WAAY;AADmC,GAA3B,EAEjCO,KAAK,CAACoB,QAF2B,CAbN,CAAR,CAAtB;AAgBD,CArEM","sourcesContent":["import React, { useContext } from 'react';\nimport { withNativeProps } from '../../utils/native-props';\nimport classNames from 'classnames';\nimport { CheckboxGroupContext } from './group-context';\nimport { usePropsValue } from '../../utils/use-props-value';\nimport { mergeProps } from '../../utils/with-default-props';\nimport { devWarning } from '../../utils/dev-log';\nimport { CheckIcon } from './check-icon';\nimport { IndeterminateIcon } from './indeterminate-icon';\nimport { isDev } from '../../utils/is-dev';\nimport { NativeInput } from './native-input';\nconst classPrefix = `adm-checkbox`;\nconst defaultProps = {\n  defaultChecked: false,\n  indeterminate: false\n};\nexport const Checkbox = p => {\n  const groupContext = useContext(CheckboxGroupContext);\n  const props = mergeProps(defaultProps, p);\n  let [checked, setChecked] = usePropsValue({\n    value: props.checked,\n    defaultValue: props.defaultChecked,\n    onChange: props.onChange\n  });\n  let disabled = props.disabled;\n  const {\n    value\n  } = props;\n\n  if (groupContext && value !== undefined) {\n    if (isDev) {\n      if (p.checked !== undefined) {\n        devWarning('Checkbox', 'When used within `Checkbox.Group`, the `checked` prop of `Checkbox` will not work.');\n      }\n\n      if (p.defaultChecked !== undefined) {\n        devWarning('Checkbox', 'When used within `Checkbox.Group`, the `defaultChecked` prop of `Checkbox` will not work.');\n      }\n    }\n\n    checked = groupContext.value.includes(value);\n\n    setChecked = checked => {\n      var _a;\n\n      if (checked) {\n        groupContext.check(value);\n      } else {\n        groupContext.uncheck(value);\n      }\n\n      (_a = props.onChange) === null || _a === void 0 ? void 0 : _a.call(props, checked);\n    };\n\n    disabled = disabled || groupContext.disabled;\n  }\n\n  const renderIcon = () => {\n    if (props.icon) {\n      return React.createElement(\"div\", {\n        className: `${classPrefix}-custom-icon`\n      }, props.icon(checked, props.indeterminate));\n    }\n\n    return React.createElement(\"div\", {\n      className: `${classPrefix}-icon`\n    }, props.indeterminate ? React.createElement(IndeterminateIcon, null) : checked && React.createElement(CheckIcon, null));\n  };\n\n  return withNativeProps(props, React.createElement(\"label\", {\n    className: classNames(classPrefix, {\n      [`${classPrefix}-checked`]: checked && !props.indeterminate,\n      [`${classPrefix}-indeterminate`]: props.indeterminate,\n      [`${classPrefix}-disabled`]: disabled,\n      [`${classPrefix}-block`]: props.block\n    })\n  }, React.createElement(NativeInput, {\n    type: 'checkbox',\n    checked: checked,\n    onChange: setChecked,\n    disabled: disabled,\n    id: props.id\n  }), renderIcon(), props.children && React.createElement(\"div\", {\n    className: `${classPrefix}-content`\n  }, props.children)));\n};"]},"metadata":{},"sourceType":"module"}