{"ast":null,"code":"import classNames from 'classnames';\nimport React, { useState, useRef } from 'react';\nimport { useUnmountedRef } from 'ahooks';\nimport { withNativeProps } from '../../utils/native-props';\nimport { mergeProps } from '../../utils/with-default-props';\nimport Mask from '../mask';\nimport { useLockScroll } from '../../utils/use-lock-scroll';\nimport { renderToContainer } from '../../utils/render-to-container';\nimport { useSpring, animated } from '@react-spring/web';\nimport { useShouldRender } from '../../utils/should-render';\nimport { withStopPropagation } from '../../utils/with-stop-propagation';\nconst classPrefix = `adm-popup`;\nconst defaultProps = {\n  position: 'bottom',\n  visible: false,\n  getContainer: () => document.body,\n  mask: true,\n  stopPropagation: ['click']\n};\nexport const Popup = p => {\n  const props = mergeProps(defaultProps, p);\n  const bodyCls = classNames(`${classPrefix}-body`, props.bodyClassName, `${classPrefix}-body-position-${props.position}`);\n  const ref = useRef(null);\n  const [active, setActive] = useState(props.visible);\n  useLockScroll(ref, active);\n  const shouldRender = useShouldRender(active, props.forceRender, props.destroyOnClose);\n  const unmountedRef = useUnmountedRef();\n  const {\n    percent\n  } = useSpring({\n    percent: props.visible ? 0 : 100,\n    config: {\n      precision: 0.1,\n      mass: 0.4,\n      tension: 300,\n      friction: 30\n    },\n    onStart: () => {\n      setActive(true);\n    },\n    onRest: () => {\n      var _a, _b;\n\n      if (unmountedRef.current) return;\n      setActive(props.visible);\n\n      if (props.visible) {\n        (_a = props.afterShow) === null || _a === void 0 ? void 0 : _a.call(props);\n      } else {\n        (_b = props.afterClose) === null || _b === void 0 ? void 0 : _b.call(props);\n      }\n    }\n  });\n  const node = withStopPropagation(props.stopPropagation, withNativeProps(props, React.createElement(\"div\", {\n    className: classPrefix,\n    onClick: props.onClick,\n    style: {\n      display: active ? 'unset' : 'none'\n    }\n  }, props.mask && React.createElement(Mask, {\n    visible: props.visible,\n    onMaskClick: props.onMaskClick,\n    className: props.maskClassName,\n    style: props.maskStyle,\n    disableBodyScroll: false,\n    stopPropagation: props.stopPropagation\n  }), React.createElement(animated.div, {\n    className: bodyCls,\n    style: Object.assign(Object.assign({}, props.bodyStyle), {\n      transform: percent.to(v => {\n        if (props.position === 'bottom') {\n          return `translate(0, ${v}%)`;\n        }\n\n        if (props.position === 'top') {\n          return `translate(0, -${v}%)`;\n        }\n\n        if (props.position === 'left') {\n          return `translate(-${v}%, 0)`;\n        }\n\n        if (props.position === 'right') {\n          return `translate(${v}%, 0)`;\n        }\n\n        return 'none';\n      })\n    }),\n    ref: ref\n  }, shouldRender && props.children))));\n  return renderToContainer(props.getContainer, node);\n};","map":{"version":3,"sources":["D:/react/project0330/node_modules/antd-mobile/es/components/popup/popup.js"],"names":["classNames","React","useState","useRef","useUnmountedRef","withNativeProps","mergeProps","Mask","useLockScroll","renderToContainer","useSpring","animated","useShouldRender","withStopPropagation","classPrefix","defaultProps","position","visible","getContainer","document","body","mask","stopPropagation","Popup","p","props","bodyCls","bodyClassName","ref","active","setActive","shouldRender","forceRender","destroyOnClose","unmountedRef","percent","config","precision","mass","tension","friction","onStart","onRest","_a","_b","current","afterShow","call","afterClose","node","createElement","className","onClick","style","display","onMaskClick","maskClassName","maskStyle","disableBodyScroll","div","Object","assign","bodyStyle","transform","to","v","children"],"mappings":"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","sourcesContent":["import classNames from 'classnames';\nimport React, { useState, useRef } from 'react';\nimport { useUnmountedRef } from 'ahooks';\nimport { withNativeProps } from '../../utils/native-props';\nimport { mergeProps } from '../../utils/with-default-props';\nimport Mask from '../mask';\nimport { useLockScroll } from '../../utils/use-lock-scroll';\nimport { renderToContainer } from '../../utils/render-to-container';\nimport { useSpring, animated } from '@react-spring/web';\nimport { useShouldRender } from '../../utils/should-render';\nimport { withStopPropagation } from '../../utils/with-stop-propagation';\nconst classPrefix = `adm-popup`;\nconst defaultProps = {\n  position: 'bottom',\n  visible: false,\n  getContainer: () => document.body,\n  mask: true,\n  stopPropagation: ['click']\n};\nexport const Popup = p => {\n  const props = mergeProps(defaultProps, p);\n  const bodyCls = classNames(`${classPrefix}-body`, props.bodyClassName, `${classPrefix}-body-position-${props.position}`);\n  const ref = useRef(null);\n  const [active, setActive] = useState(props.visible);\n  useLockScroll(ref, active);\n  const shouldRender = useShouldRender(active, props.forceRender, props.destroyOnClose);\n  const unmountedRef = useUnmountedRef();\n  const {\n    percent\n  } = useSpring({\n    percent: props.visible ? 0 : 100,\n    config: {\n      precision: 0.1,\n      mass: 0.4,\n      tension: 300,\n      friction: 30\n    },\n    onStart: () => {\n      setActive(true);\n    },\n    onRest: () => {\n      var _a, _b;\n\n      if (unmountedRef.current) return;\n      setActive(props.visible);\n\n      if (props.visible) {\n        (_a = props.afterShow) === null || _a === void 0 ? void 0 : _a.call(props);\n      } else {\n        (_b = props.afterClose) === null || _b === void 0 ? void 0 : _b.call(props);\n      }\n    }\n  });\n  const node = withStopPropagation(props.stopPropagation, withNativeProps(props, React.createElement(\"div\", {\n    className: classPrefix,\n    onClick: props.onClick,\n    style: {\n      display: active ? 'unset' : 'none'\n    }\n  }, props.mask && React.createElement(Mask, {\n    visible: props.visible,\n    onMaskClick: props.onMaskClick,\n    className: props.maskClassName,\n    style: props.maskStyle,\n    disableBodyScroll: false,\n    stopPropagation: props.stopPropagation\n  }), React.createElement(animated.div, {\n    className: bodyCls,\n    style: Object.assign(Object.assign({}, props.bodyStyle), {\n      transform: percent.to(v => {\n        if (props.position === 'bottom') {\n          return `translate(0, ${v}%)`;\n        }\n\n        if (props.position === 'top') {\n          return `translate(0, -${v}%)`;\n        }\n\n        if (props.position === 'left') {\n          return `translate(-${v}%, 0)`;\n        }\n\n        if (props.position === 'right') {\n          return `translate(${v}%, 0)`;\n        }\n\n        return 'none';\n      })\n    }),\n    ref: ref\n  }, shouldRender && props.children))));\n  return renderToContainer(props.getContainer, node);\n};"]},"metadata":{},"sourceType":"module"}