{"ast":null,"code":"import React, { memo } from 'react';\nimport { withNativeProps } from '../../utils/native-props';\nimport { mergeProps } from '../../utils/with-default-props';\nimport { useSpring, animated } from '@react-spring/web';\nconst classPrefix = 'adm-spin-loading';\nconst colorRecord = {\n  default: 'var(--adm-color-weak)',\n  primary: 'var(--adm-color-primary)',\n  white: 'var(--adm-color-white)'\n};\nconst defaultProps = {\n  color: 'default'\n};\nconst circumference = 15 * 3.14159265358979 * 2;\nexport const SpinLoading = memo(p => {\n  var _a;\n\n  const props = mergeProps(defaultProps, p);\n  const {\n    percent\n  } = useSpring({\n    loop: {\n      reverse: true\n    },\n    from: {\n      percent: 30\n    },\n    to: {\n      percent: 80\n    },\n    config: {\n      duration: 1200\n    }\n  });\n  return withNativeProps(props, React.createElement(animated.div, {\n    className: classPrefix,\n    style: {\n      '--color': (_a = colorRecord[props.color]) !== null && _a !== void 0 ? _a : props.color,\n      '--percent': percent\n    }\n  }, React.createElement(\"svg\", {\n    className: `${classPrefix}-svg`,\n    viewBox: '0 0 32 32'\n  }, React.createElement(animated.circle, {\n    className: `${classPrefix}-fill`,\n    fill: 'transparent',\n    strokeWidth: '2',\n    strokeDasharray: circumference,\n    strokeDashoffset: percent,\n    strokeLinecap: 'square',\n    r: 15,\n    cx: 16,\n    cy: 16\n  }))));\n});","map":{"version":3,"sources":["D:/react/project0330/node_modules/antd-mobile/es/components/spin-loading/spin-loading.js"],"names":["React","memo","withNativeProps","mergeProps","useSpring","animated","classPrefix","colorRecord","default","primary","white","defaultProps","color","circumference","SpinLoading","p","_a","props","percent","loop","reverse","from","to","config","duration","createElement","div","className","style","viewBox","circle","fill","strokeWidth","strokeDasharray","strokeDashoffset","strokeLinecap","r","cx","cy"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,IAAhB,QAA4B,OAA5B;AACA,SAASC,eAAT,QAAgC,0BAAhC;AACA,SAASC,UAAT,QAA2B,gCAA3B;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,mBAApC;AACA,MAAMC,WAAW,GAAG,kBAApB;AACA,MAAMC,WAAW,GAAG;AAClBC,EAAAA,OAAO,EAAE,uBADS;AAElBC,EAAAA,OAAO,EAAE,0BAFS;AAGlBC,EAAAA,KAAK,EAAE;AAHW,CAApB;AAKA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE;AADY,CAArB;AAGA,MAAMC,aAAa,GAAG,KAAK,gBAAL,GAAwB,CAA9C;AACA,OAAO,MAAMC,WAAW,GAAGb,IAAI,CAACc,CAAC,IAAI;AACnC,MAAIC,EAAJ;;AAEA,QAAMC,KAAK,GAAGd,UAAU,CAACQ,YAAD,EAAeI,CAAf,CAAxB;AACA,QAAM;AACJG,IAAAA;AADI,MAEFd,SAAS,CAAC;AACZe,IAAAA,IAAI,EAAE;AACJC,MAAAA,OAAO,EAAE;AADL,KADM;AAIZC,IAAAA,IAAI,EAAE;AACJH,MAAAA,OAAO,EAAE;AADL,KAJM;AAOZI,IAAAA,EAAE,EAAE;AACFJ,MAAAA,OAAO,EAAE;AADP,KAPQ;AAUZK,IAAAA,MAAM,EAAE;AACNC,MAAAA,QAAQ,EAAE;AADJ;AAVI,GAAD,CAFb;AAgBA,SAAOtB,eAAe,CAACe,KAAD,EAAQjB,KAAK,CAACyB,aAAN,CAAoBpB,QAAQ,CAACqB,GAA7B,EAAkC;AAC9DC,IAAAA,SAAS,EAAErB,WADmD;AAE9DsB,IAAAA,KAAK,EAAE;AACL,iBAAW,CAACZ,EAAE,GAAGT,WAAW,CAACU,KAAK,CAACL,KAAP,CAAjB,MAAoC,IAApC,IAA4CI,EAAE,KAAK,KAAK,CAAxD,GAA4DA,EAA5D,GAAiEC,KAAK,CAACL,KAD7E;AAEL,mBAAaM;AAFR;AAFuD,GAAlC,EAM3BlB,KAAK,CAACyB,aAAN,CAAoB,KAApB,EAA2B;AAC5BE,IAAAA,SAAS,EAAG,GAAErB,WAAY,MADE;AAE5BuB,IAAAA,OAAO,EAAE;AAFmB,GAA3B,EAGA7B,KAAK,CAACyB,aAAN,CAAoBpB,QAAQ,CAACyB,MAA7B,EAAqC;AACtCH,IAAAA,SAAS,EAAG,GAAErB,WAAY,OADY;AAEtCyB,IAAAA,IAAI,EAAE,aAFgC;AAGtCC,IAAAA,WAAW,EAAE,GAHyB;AAItCC,IAAAA,eAAe,EAAEpB,aAJqB;AAKtCqB,IAAAA,gBAAgB,EAAEhB,OALoB;AAMtCiB,IAAAA,aAAa,EAAE,QANuB;AAOtCC,IAAAA,CAAC,EAAE,EAPmC;AAQtCC,IAAAA,EAAE,EAAE,EARkC;AAStCC,IAAAA,EAAE,EAAE;AATkC,GAArC,CAHA,CAN2B,CAAR,CAAtB;AAoBD,CAxC8B,CAAxB","sourcesContent":["import React, { memo } from 'react';\nimport { withNativeProps } from '../../utils/native-props';\nimport { mergeProps } from '../../utils/with-default-props';\nimport { useSpring, animated } from '@react-spring/web';\nconst classPrefix = 'adm-spin-loading';\nconst colorRecord = {\n  default: 'var(--adm-color-weak)',\n  primary: 'var(--adm-color-primary)',\n  white: 'var(--adm-color-white)'\n};\nconst defaultProps = {\n  color: 'default'\n};\nconst circumference = 15 * 3.14159265358979 * 2;\nexport const SpinLoading = memo(p => {\n  var _a;\n\n  const props = mergeProps(defaultProps, p);\n  const {\n    percent\n  } = useSpring({\n    loop: {\n      reverse: true\n    },\n    from: {\n      percent: 30\n    },\n    to: {\n      percent: 80\n    },\n    config: {\n      duration: 1200\n    }\n  });\n  return withNativeProps(props, React.createElement(animated.div, {\n    className: classPrefix,\n    style: {\n      '--color': (_a = colorRecord[props.color]) !== null && _a !== void 0 ? _a : props.color,\n      '--percent': percent\n    }\n  }, React.createElement(\"svg\", {\n    className: `${classPrefix}-svg`,\n    viewBox: '0 0 32 32'\n  }, React.createElement(animated.circle, {\n    className: `${classPrefix}-fill`,\n    fill: 'transparent',\n    strokeWidth: '2',\n    strokeDasharray: circumference,\n    strokeDashoffset: percent,\n    strokeLinecap: 'square',\n    r: 15,\n    cx: 16,\n    cy: 16\n  }))));\n});"]},"metadata":{},"sourceType":"module"}